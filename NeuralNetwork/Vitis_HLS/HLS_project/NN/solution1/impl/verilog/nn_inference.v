// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="nn_inference_nn_inference,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.238000,HLS_SYN_LAT=65022,HLS_SYN_TPT=none,HLS_SYN_MEM=35,HLS_SYN_DSP=0,HLS_SYN_FF=19308,HLS_SYN_LUT=11732,HLS_VERSION=2020_2}" *)

module nn_inference (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_img_address0,
        input_img_ce0,
        input_img_q0,
        ap_return
);

parameter    ap_ST_fsm_state1 = 43'd1;
parameter    ap_ST_fsm_pp0_stage0 = 43'd2;
parameter    ap_ST_fsm_state10 = 43'd4;
parameter    ap_ST_fsm_pp1_stage0 = 43'd8;
parameter    ap_ST_fsm_state17 = 43'd16;
parameter    ap_ST_fsm_pp2_stage0 = 43'd32;
parameter    ap_ST_fsm_state27 = 43'd64;
parameter    ap_ST_fsm_pp3_stage0 = 43'd128;
parameter    ap_ST_fsm_state34 = 43'd256;
parameter    ap_ST_fsm_pp4_stage0 = 43'd512;
parameter    ap_ST_fsm_state44 = 43'd1024;
parameter    ap_ST_fsm_state45 = 43'd2048;
parameter    ap_ST_fsm_state46 = 43'd4096;
parameter    ap_ST_fsm_state47 = 43'd8192;
parameter    ap_ST_fsm_state48 = 43'd16384;
parameter    ap_ST_fsm_state49 = 43'd32768;
parameter    ap_ST_fsm_state50 = 43'd65536;
parameter    ap_ST_fsm_state51 = 43'd131072;
parameter    ap_ST_fsm_state52 = 43'd262144;
parameter    ap_ST_fsm_state53 = 43'd524288;
parameter    ap_ST_fsm_state54 = 43'd1048576;
parameter    ap_ST_fsm_state55 = 43'd2097152;
parameter    ap_ST_fsm_state56 = 43'd4194304;
parameter    ap_ST_fsm_state57 = 43'd8388608;
parameter    ap_ST_fsm_state58 = 43'd16777216;
parameter    ap_ST_fsm_state59 = 43'd33554432;
parameter    ap_ST_fsm_state60 = 43'd67108864;
parameter    ap_ST_fsm_pp5_stage0 = 43'd134217728;
parameter    ap_ST_fsm_state81 = 43'd268435456;
parameter    ap_ST_fsm_pp6_stage0 = 43'd536870912;
parameter    ap_ST_fsm_state91 = 43'd1073741824;
parameter    ap_ST_fsm_state92 = 43'd2147483648;
parameter    ap_ST_fsm_state93 = 43'd4294967296;
parameter    ap_ST_fsm_state94 = 43'd8589934592;
parameter    ap_ST_fsm_state95 = 43'd17179869184;
parameter    ap_ST_fsm_state96 = 43'd34359738368;
parameter    ap_ST_fsm_state97 = 43'd68719476736;
parameter    ap_ST_fsm_state98 = 43'd137438953472;
parameter    ap_ST_fsm_state99 = 43'd274877906944;
parameter    ap_ST_fsm_pp7_stage0 = 43'd549755813888;
parameter    ap_ST_fsm_state111 = 43'd1099511627776;
parameter    ap_ST_fsm_state112 = 43'd2199023255552;
parameter    ap_ST_fsm_state113 = 43'd4398046511104;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] input_img_address0;
output   input_img_ce0;
input  [31:0] input_img_q0;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_img_ce0;

(* fsm_encoding = "none" *) reg   [42:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [15:0] weights_layer1_weights_V_address0;
reg    weights_layer1_weights_V_ce0;
wire   [6:0] weights_layer1_weights_V_q0;
wire   [11:0] weights_layer2_weights_V_address0;
reg    weights_layer2_weights_V_ce0;
wire   [7:0] weights_layer2_weights_V_q0;
wire   [3:0] layer3_weights_V_0_address0;
reg    layer3_weights_V_0_ce0;
wire   [7:0] layer3_weights_V_0_q0;
wire   [3:0] layer3_weights_V_1_address0;
reg    layer3_weights_V_1_ce0;
wire   [7:0] layer3_weights_V_1_q0;
wire   [3:0] layer3_weights_V_2_address0;
reg    layer3_weights_V_2_ce0;
wire   [7:0] layer3_weights_V_2_q0;
wire   [3:0] layer3_weights_V_3_address0;
reg    layer3_weights_V_3_ce0;
wire   [7:0] layer3_weights_V_3_q0;
wire   [3:0] layer3_weights_V_4_address0;
reg    layer3_weights_V_4_ce0;
wire   [7:0] layer3_weights_V_4_q0;
wire   [3:0] layer3_weights_V_5_address0;
reg    layer3_weights_V_5_ce0;
wire   [7:0] layer3_weights_V_5_q0;
wire   [3:0] layer3_weights_V_6_address0;
reg    layer3_weights_V_6_ce0;
wire   [7:0] layer3_weights_V_6_q0;
wire   [3:0] layer3_weights_V_7_address0;
reg    layer3_weights_V_7_ce0;
wire   [7:0] layer3_weights_V_7_q0;
wire   [3:0] layer3_weights_V_8_address0;
reg    layer3_weights_V_8_ce0;
wire   [7:0] layer3_weights_V_8_q0;
wire   [3:0] layer3_weights_V_9_address0;
reg    layer3_weights_V_9_ce0;
wire   [7:0] layer3_weights_V_9_q0;
wire   [3:0] layer3_weights_V_10_address0;
reg    layer3_weights_V_10_ce0;
wire   [7:0] layer3_weights_V_10_q0;
wire   [3:0] layer3_weights_V_11_address0;
reg    layer3_weights_V_11_ce0;
wire   [7:0] layer3_weights_V_11_q0;
wire   [3:0] layer3_weights_V_12_address0;
reg    layer3_weights_V_12_ce0;
wire   [7:0] layer3_weights_V_12_q0;
wire   [3:0] layer3_weights_V_13_address0;
reg    layer3_weights_V_13_ce0;
wire   [7:0] layer3_weights_V_13_q0;
wire   [3:0] layer3_weights_V_14_address0;
reg    layer3_weights_V_14_ce0;
wire   [7:0] layer3_weights_V_14_q0;
wire   [3:0] layer3_weights_V_15_address0;
reg    layer3_weights_V_15_ce0;
wire   [7:0] layer3_weights_V_15_q0;
wire   [3:0] layer3_weights_V_16_address0;
reg    layer3_weights_V_16_ce0;
wire   [7:0] layer3_weights_V_16_q0;
wire   [3:0] layer3_weights_V_17_address0;
reg    layer3_weights_V_17_ce0;
wire   [7:0] layer3_weights_V_17_q0;
wire   [3:0] layer3_weights_V_18_address0;
reg    layer3_weights_V_18_ce0;
wire   [7:0] layer3_weights_V_18_q0;
wire   [3:0] layer3_weights_V_19_address0;
reg    layer3_weights_V_19_ce0;
wire   [7:0] layer3_weights_V_19_q0;
wire   [3:0] layer3_weights_V_20_address0;
reg    layer3_weights_V_20_ce0;
wire   [7:0] layer3_weights_V_20_q0;
wire   [3:0] layer3_weights_V_21_address0;
reg    layer3_weights_V_21_ce0;
wire   [7:0] layer3_weights_V_21_q0;
wire   [3:0] layer3_weights_V_22_address0;
reg    layer3_weights_V_22_ce0;
wire   [7:0] layer3_weights_V_22_q0;
wire   [3:0] layer3_weights_V_23_address0;
reg    layer3_weights_V_23_ce0;
wire   [7:0] layer3_weights_V_23_q0;
wire   [3:0] layer3_weights_V_24_address0;
reg    layer3_weights_V_24_ce0;
wire   [7:0] layer3_weights_V_24_q0;
wire   [3:0] layer3_weights_V_25_address0;
reg    layer3_weights_V_25_ce0;
wire   [7:0] layer3_weights_V_25_q0;
wire   [3:0] layer3_weights_V_26_address0;
reg    layer3_weights_V_26_ce0;
wire   [7:0] layer3_weights_V_26_q0;
wire   [3:0] layer3_weights_V_27_address0;
reg    layer3_weights_V_27_ce0;
wire   [7:0] layer3_weights_V_27_q0;
wire   [3:0] layer3_weights_V_28_address0;
reg    layer3_weights_V_28_ce0;
wire   [7:0] layer3_weights_V_28_q0;
wire   [3:0] layer3_weights_V_29_address0;
reg    layer3_weights_V_29_ce0;
wire   [7:0] layer3_weights_V_29_q0;
wire   [3:0] layer3_weights_V_30_address0;
reg    layer3_weights_V_30_ce0;
wire   [7:0] layer3_weights_V_30_q0;
wire   [3:0] layer3_weights_V_31_address0;
reg    layer3_weights_V_31_ce0;
wire   [7:0] layer3_weights_V_31_q0;
reg   [9:0] i_reg_1400;
reg   [15:0] indvar_flatten_reg_1411;
reg   [6:0] j_reg_1422;
reg   [9:0] k_reg_1433;
reg   [31:0] sum_V_4_reg_1444;
reg   [6:0] i_1_reg_1456;
reg   [11:0] indvar_flatten10_reg_1467;
reg   [5:0] j_1_reg_1478;
reg   [6:0] k_1_reg_1489;
reg   [31:0] sum_V_5_reg_1500;
reg   [5:0] i_2_reg_1512;
reg   [4:0] j_2_reg_1523;
reg   [4:0] i_3_reg_1534;
reg   [1:0] j_3_reg_1545;
reg   [1:0] j_3_reg_1545_pp7_iter1_reg;
wire    ap_CS_fsm_pp7_stage0;
wire    ap_block_state100_pp7_stage0_iter0;
wire    ap_block_state101_pp7_stage0_iter1;
wire    ap_block_state102_pp7_stage0_iter2;
wire    ap_block_state103_pp7_stage0_iter3;
wire    ap_block_state104_pp7_stage0_iter4;
wire    ap_block_state105_pp7_stage0_iter5;
wire    ap_block_state106_pp7_stage0_iter6;
wire    ap_block_state107_pp7_stage0_iter7;
wire    ap_block_state108_pp7_stage0_iter8;
wire    ap_block_state109_pp7_stage0_iter9;
wire    ap_block_state110_pp7_stage0_iter10;
wire    ap_block_pp7_stage0_11001;
reg   [1:0] j_3_reg_1545_pp7_iter2_reg;
reg   [1:0] j_3_reg_1545_pp7_iter3_reg;
reg   [1:0] j_3_reg_1545_pp7_iter4_reg;
reg   [1:0] j_3_reg_1545_pp7_iter5_reg;
reg   [1:0] j_3_reg_1545_pp7_iter6_reg;
reg   [1:0] j_3_reg_1545_pp7_iter7_reg;
reg   [1:0] j_3_reg_1545_pp7_iter8_reg;
reg   [1:0] j_3_reg_1545_pp7_iter9_reg;
wire   [31:0] temp_output_0_V_q1;
reg  signed [31:0] reg_1599;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_state18_pp2_stage0_iter0;
wire    ap_block_state19_pp2_stage0_iter1;
wire    ap_block_state20_pp2_stage0_iter2;
wire    ap_block_state21_pp2_stage0_iter3;
wire    ap_block_state22_pp2_stage0_iter4;
wire    ap_block_state23_pp2_stage0_iter5;
wire    ap_block_state24_pp2_stage0_iter6;
wire    ap_block_state25_pp2_stage0_iter7;
wire    ap_block_state26_pp2_stage0_iter8;
wire    ap_block_pp2_stage0_11001;
reg    ap_enable_reg_pp3_iter2;
wire    ap_block_state28_pp3_stage0_iter0;
wire    ap_block_state29_pp3_stage0_iter1;
wire    ap_block_state30_pp3_stage0_iter2;
wire    ap_block_state31_pp3_stage0_iter3;
wire    ap_block_state32_pp3_stage0_iter4;
wire    ap_block_state33_pp3_stage0_iter5;
wire    ap_block_pp3_stage0_11001;
reg   [0:0] icmp_ln40_reg_5391;
reg   [0:0] icmp_ln40_reg_5391_pp3_iter1_reg;
wire   [31:0] temp_output2_0_V_q1;
reg   [31:0] reg_1603;
wire    ap_CS_fsm_pp4_stage0;
reg    ap_enable_reg_pp4_iter1;
wire    ap_block_state35_pp4_stage0_iter0;
wire    ap_block_state36_pp4_stage0_iter1;
wire    ap_block_state37_pp4_stage0_iter2;
wire    ap_block_state38_pp4_stage0_iter3;
wire    ap_block_state39_pp4_stage0_iter4;
wire    ap_block_state40_pp4_stage0_iter5;
wire    ap_block_state41_pp4_stage0_iter6;
wire    ap_block_state42_pp4_stage0_iter7;
wire    ap_block_state43_pp4_stage0_iter8;
wire    ap_block_pp4_stage0_11001;
wire   [31:0] temp_output2_0_V_q0;
wire    ap_CS_fsm_state45;
wire   [31:0] temp_output3_0_V_q1;
reg   [31:0] reg_1608;
wire    ap_CS_fsm_pp6_stage0;
reg    ap_enable_reg_pp6_iter1;
wire    ap_block_state82_pp6_stage0_iter0;
wire    ap_block_state83_pp6_stage0_iter1;
wire    ap_block_state84_pp6_stage0_iter2;
wire    ap_block_state85_pp6_stage0_iter3;
wire    ap_block_state86_pp6_stage0_iter4;
wire    ap_block_state87_pp6_stage0_iter5;
wire    ap_block_state88_pp6_stage0_iter6;
wire    ap_block_state89_pp6_stage0_iter7;
wire    ap_block_state90_pp6_stage0_iter8;
wire    ap_block_pp6_stage0_11001;
wire   [31:0] temp_output3_0_V_q0;
wire    ap_CS_fsm_state92;
wire   [9:0] add_ln5_fu_1613_p2;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln5_fu_1619_p2;
reg   [0:0] icmp_ln5_reg_5084;
reg   [0:0] icmp_ln5_reg_5084_pp0_iter1_reg;
reg   [0:0] icmp_ln5_reg_5084_pp0_iter2_reg;
reg   [0:0] icmp_ln5_reg_5084_pp0_iter3_reg;
reg   [0:0] icmp_ln5_reg_5084_pp0_iter4_reg;
reg   [0:0] icmp_ln5_reg_5084_pp0_iter5_reg;
reg   [0:0] icmp_ln5_reg_5084_pp0_iter6_reg;
wire   [63:0] i_cast_fu_1625_p1;
reg   [63:0] i_cast_reg_5088;
reg   [63:0] i_cast_reg_5088_pp0_iter1_reg;
reg   [63:0] i_cast_reg_5088_pp0_iter2_reg;
reg   [63:0] i_cast_reg_5088_pp0_iter3_reg;
reg   [63:0] i_cast_reg_5088_pp0_iter4_reg;
reg   [63:0] i_cast_reg_5088_pp0_iter5_reg;
reg   [63:0] i_cast_reg_5088_pp0_iter6_reg;
reg   [31:0] input_img_load_reg_5098;
reg   [31:0] input_img_load_reg_5098_pp0_iter2_reg;
reg   [31:0] input_img_load_reg_5098_pp0_iter3_reg;
reg   [31:0] input_img_load_reg_5098_pp0_iter4_reg;
reg   [0:0] p_Result_13_reg_5109;
reg   [10:0] exp_tmp_reg_5114;
wire   [51:0] trunc_ln565_fu_1660_p1;
reg   [51:0] trunc_ln565_reg_5119;
wire   [0:0] icmp_ln571_fu_1664_p2;
reg   [0:0] icmp_ln571_reg_5124;
reg   [0:0] icmp_ln571_reg_5124_pp0_iter4_reg;
reg   [0:0] icmp_ln571_reg_5124_pp0_iter5_reg;
wire   [53:0] man_V_2_fu_1690_p3;
reg   [53:0] man_V_2_reg_5132;
wire  signed [11:0] sh_amt_fu_1721_p3;
reg  signed [11:0] sh_amt_reg_5137;
wire   [0:0] icmp_ln582_fu_1729_p2;
reg   [0:0] icmp_ln582_reg_5143;
reg   [0:0] icmp_ln582_reg_5143_pp0_iter5_reg;
wire   [31:0] trunc_ln583_fu_1735_p1;
reg   [31:0] trunc_ln583_reg_5148;
reg   [31:0] trunc_ln583_reg_5148_pp0_iter5_reg;
wire   [0:0] and_ln581_fu_1766_p2;
reg   [0:0] and_ln581_reg_5154;
reg   [0:0] and_ln581_reg_5154_pp0_iter5_reg;
wire   [0:0] or_ln571_fu_1790_p2;
reg   [0:0] or_ln571_reg_5160;
reg   [0:0] or_ln571_reg_5160_pp0_iter5_reg;
wire  signed [31:0] sext_ln581_fu_1795_p1;
reg  signed [31:0] sext_ln581_reg_5166;
wire   [31:0] select_ln571_1_fu_1836_p3;
reg   [31:0] select_ln571_1_reg_5171;
wire   [31:0] select_ln571_4_fu_1882_p3;
reg   [31:0] select_ln571_4_reg_5176;
wire   [4:0] temp_output2_0_V_addr_reg_5181;
wire    ap_CS_fsm_state10;
wire   [3:0] temp_output3_0_V_addr_reg_5186;
wire   [15:0] add_ln21_1_fu_1890_p2;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state11_pp1_stage0_iter0;
wire    ap_block_state12_pp1_stage0_iter1;
wire    ap_block_state13_pp1_stage0_iter2;
wire    ap_block_state14_pp1_stage0_iter3;
wire    ap_block_state15_pp1_stage0_iter4;
wire    ap_block_state16_pp1_stage0_iter5;
wire    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln21_fu_1896_p2;
reg   [0:0] icmp_ln21_reg_5196;
reg   [0:0] icmp_ln21_reg_5196_pp1_iter1_reg;
reg   [0:0] icmp_ln21_reg_5196_pp1_iter2_reg;
reg   [0:0] icmp_ln21_reg_5196_pp1_iter3_reg;
reg   [0:0] icmp_ln21_reg_5196_pp1_iter4_reg;
wire   [0:0] icmp_ln25_fu_1908_p2;
reg   [0:0] icmp_ln25_reg_5200;
reg   [0:0] icmp_ln25_reg_5200_pp1_iter1_reg;
reg   [0:0] icmp_ln25_reg_5200_pp1_iter2_reg;
reg   [0:0] icmp_ln25_reg_5200_pp1_iter3_reg;
reg   [0:0] icmp_ln25_reg_5200_pp1_iter4_reg;
wire   [9:0] select_ln21_fu_1914_p3;
reg   [9:0] select_ln21_reg_5205;
wire   [6:0] select_ln21_1_fu_1922_p3;
reg   [6:0] select_ln21_1_reg_5212;
reg   [6:0] select_ln21_1_reg_5212_pp1_iter1_reg;
reg   [6:0] select_ln21_1_reg_5212_pp1_iter2_reg;
reg   [6:0] select_ln21_1_reg_5212_pp1_iter3_reg;
reg   [6:0] select_ln21_1_reg_5212_pp1_iter4_reg;
wire   [9:0] add_ln25_fu_1930_p2;
reg   [9:0] add_ln25_reg_5219;
wire   [0:0] ifzero_fu_1936_p2;
reg   [0:0] ifzero_reg_5224;
reg   [0:0] ifzero_reg_5224_pp1_iter1_reg;
reg   [0:0] ifzero_reg_5224_pp1_iter2_reg;
reg   [0:0] ifzero_reg_5224_pp1_iter3_reg;
reg   [0:0] ifzero_reg_5224_pp1_iter4_reg;
wire   [31:0] fp_input_img_V_q0;
reg  signed [31:0] r_V_reg_5238;
reg    ap_enable_reg_pp1_iter2;
reg  signed [6:0] weights_layer1_weights_V_load_reg_5243;
wire   [38:0] grp_fu_1990_p2;
reg   [38:0] r_V_1_reg_5258;
reg    ap_enable_reg_pp1_iter5;
wire   [6:0] add_ln92_fu_2035_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [0:0] icmp_ln92_fu_2041_p2;
reg   [6:0] temp_output_0_V_addr_1_reg_5277;
reg   [6:0] temp_output_0_V_addr_1_reg_5277_pp2_iter1_reg;
reg   [6:0] temp_output_0_V_addr_1_reg_5277_pp2_iter2_reg;
reg   [6:0] temp_output_0_V_addr_1_reg_5277_pp2_iter3_reg;
reg   [6:0] temp_output_0_V_addr_1_reg_5277_pp2_iter4_reg;
reg   [6:0] temp_output_0_V_addr_1_reg_5277_pp2_iter5_reg;
reg   [6:0] temp_output_0_V_addr_1_reg_5277_pp2_iter6_reg;
reg   [6:0] temp_output_0_V_addr_1_reg_5277_pp2_iter7_reg;
wire   [0:0] icmp_ln885_fu_2052_p2;
reg   [0:0] icmp_ln885_reg_5283;
reg   [0:0] icmp_ln885_reg_5283_pp2_iter2_reg;
reg   [0:0] icmp_ln885_reg_5283_pp2_iter3_reg;
reg   [0:0] icmp_ln885_reg_5283_pp2_iter4_reg;
reg   [0:0] icmp_ln885_reg_5283_pp2_iter5_reg;
reg   [0:0] icmp_ln885_reg_5283_pp2_iter6_reg;
reg   [0:0] icmp_ln885_reg_5283_pp2_iter7_reg;
wire   [31:0] tmp_V_fu_2058_p2;
reg   [31:0] tmp_V_reg_5287;
wire   [0:0] p_Result_15_fu_2064_p3;
reg   [0:0] p_Result_15_reg_5292;
reg   [0:0] p_Result_15_reg_5292_pp2_iter3_reg;
reg   [0:0] p_Result_15_reg_5292_pp2_iter4_reg;
wire   [31:0] tmp_V_6_fu_2072_p3;
reg   [31:0] tmp_V_6_reg_5297;
reg   [31:0] tmp_V_6_reg_5297_pp2_iter3_reg;
wire   [31:0] sub_ln894_fu_2097_p2;
reg   [31:0] sub_ln894_reg_5303;
reg   [31:0] sub_ln894_reg_5303_pp2_iter3_reg;
wire   [31:0] lsb_index_fu_2103_p2;
reg   [31:0] lsb_index_reg_5309;
reg   [30:0] tmp_75_reg_5316;
wire   [5:0] trunc_ln897_fu_2119_p1;
reg   [5:0] trunc_ln897_reg_5321;
wire   [0:0] p_Result_17_fu_2123_p3;
reg   [0:0] p_Result_17_reg_5326;
wire   [10:0] trunc_ln893_fu_2131_p1;
reg   [10:0] trunc_ln893_reg_5332;
reg   [10:0] trunc_ln893_reg_5332_pp2_iter3_reg;
reg   [10:0] trunc_ln893_reg_5332_pp2_iter4_reg;
wire   [0:0] icmp_ln908_fu_2190_p2;
reg   [0:0] icmp_ln908_reg_5337;
wire   [0:0] select_ln908_fu_2207_p3;
reg   [0:0] select_ln908_reg_5342;
reg   [62:0] m_13_reg_5347;
reg   [0:0] p_Result_s_reg_5352;
reg   [51:0] trunc_ln6_reg_5357;
wire   [63:0] p_Result_18_fu_2320_p5;
reg   [63:0] p_Result_18_reg_5362;
wire   [0:0] icmp_ln1506_fu_2332_p2;
reg   [0:0] icmp_ln1506_reg_5367;
reg   [0:0] icmp_ln1506_reg_5367_pp2_iter6_reg;
wire   [0:0] icmp_ln1506_1_fu_2338_p2;
reg   [0:0] icmp_ln1506_1_reg_5372;
reg   [0:0] icmp_ln1506_1_reg_5372_pp2_iter6_reg;
wire   [63:0] bitcast_ln734_fu_2343_p1;
wire   [0:0] and_ln1506_fu_2351_p2;
reg   [0:0] and_ln1506_reg_5382;
wire   [11:0] add_ln40_1_fu_2357_p2;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter0;
wire   [0:0] icmp_ln40_fu_2363_p2;
reg   [0:0] icmp_ln40_reg_5391_pp3_iter2_reg;
reg   [0:0] icmp_ln40_reg_5391_pp3_iter3_reg;
reg   [0:0] icmp_ln40_reg_5391_pp3_iter4_reg;
wire   [0:0] icmp_ln44_fu_2375_p2;
reg   [0:0] icmp_ln44_reg_5395;
reg   [0:0] icmp_ln44_reg_5395_pp3_iter1_reg;
reg   [0:0] icmp_ln44_reg_5395_pp3_iter2_reg;
reg   [0:0] icmp_ln44_reg_5395_pp3_iter3_reg;
reg   [0:0] icmp_ln44_reg_5395_pp3_iter4_reg;
wire   [6:0] select_ln40_fu_2381_p3;
reg   [6:0] select_ln40_reg_5400;
wire   [5:0] select_ln40_1_fu_2389_p3;
reg   [5:0] select_ln40_1_reg_5406;
reg   [5:0] select_ln40_1_reg_5406_pp3_iter1_reg;
reg   [5:0] select_ln40_1_reg_5406_pp3_iter2_reg;
reg   [5:0] select_ln40_1_reg_5406_pp3_iter3_reg;
reg   [5:0] select_ln40_1_reg_5406_pp3_iter4_reg;
wire   [6:0] add_ln44_fu_2397_p2;
reg   [6:0] add_ln44_reg_5413;
wire   [0:0] ifzero5_fu_2403_p2;
reg   [0:0] ifzero5_reg_5418;
reg   [0:0] ifzero5_reg_5418_pp3_iter1_reg;
reg   [0:0] ifzero5_reg_5418_pp3_iter2_reg;
reg   [0:0] ifzero5_reg_5418_pp3_iter3_reg;
reg   [0:0] ifzero5_reg_5418_pp3_iter4_reg;
reg  signed [7:0] weights_layer2_weights_V_load_reg_5432;
wire   [39:0] grp_fu_2441_p2;
reg   [39:0] r_V_3_reg_5447;
reg    ap_enable_reg_pp3_iter5;
wire   [5:0] add_ln107_fu_2482_p2;
reg    ap_enable_reg_pp4_iter0;
wire   [0:0] icmp_ln107_fu_2488_p2;
reg   [4:0] temp_output2_0_V_addr_1_reg_5466;
reg   [4:0] temp_output2_0_V_addr_1_reg_5466_pp4_iter1_reg;
reg   [4:0] temp_output2_0_V_addr_1_reg_5466_pp4_iter2_reg;
reg   [4:0] temp_output2_0_V_addr_1_reg_5466_pp4_iter3_reg;
reg   [4:0] temp_output2_0_V_addr_1_reg_5466_pp4_iter4_reg;
reg   [4:0] temp_output2_0_V_addr_1_reg_5466_pp4_iter5_reg;
reg   [4:0] temp_output2_0_V_addr_1_reg_5466_pp4_iter6_reg;
reg   [4:0] temp_output2_0_V_addr_1_reg_5466_pp4_iter7_reg;
wire   [0:0] icmp_ln885_1_fu_2499_p2;
reg   [0:0] icmp_ln885_1_reg_5472;
reg   [0:0] icmp_ln885_1_reg_5472_pp4_iter2_reg;
reg   [0:0] icmp_ln885_1_reg_5472_pp4_iter3_reg;
reg   [0:0] icmp_ln885_1_reg_5472_pp4_iter4_reg;
reg   [0:0] icmp_ln885_1_reg_5472_pp4_iter5_reg;
reg   [0:0] icmp_ln885_1_reg_5472_pp4_iter6_reg;
reg   [0:0] icmp_ln885_1_reg_5472_pp4_iter7_reg;
wire   [31:0] tmp_V_2_fu_2505_p2;
reg   [31:0] tmp_V_2_reg_5476;
wire   [0:0] p_Result_19_fu_2511_p3;
reg   [0:0] p_Result_19_reg_5481;
reg   [0:0] p_Result_19_reg_5481_pp4_iter3_reg;
reg   [0:0] p_Result_19_reg_5481_pp4_iter4_reg;
wire   [31:0] tmp_V_7_fu_2519_p3;
reg   [31:0] tmp_V_7_reg_5486;
reg   [31:0] tmp_V_7_reg_5486_pp4_iter3_reg;
wire   [31:0] sub_ln894_1_fu_2544_p2;
reg   [31:0] sub_ln894_1_reg_5492;
reg   [31:0] sub_ln894_1_reg_5492_pp4_iter3_reg;
wire   [31:0] lsb_index_1_fu_2550_p2;
reg   [31:0] lsb_index_1_reg_5498;
reg   [30:0] tmp_79_reg_5505;
wire   [5:0] trunc_ln897_1_fu_2566_p1;
reg   [5:0] trunc_ln897_1_reg_5510;
wire   [0:0] p_Result_21_fu_2570_p3;
reg   [0:0] p_Result_21_reg_5515;
wire   [10:0] trunc_ln893_1_fu_2578_p1;
reg   [10:0] trunc_ln893_1_reg_5521;
reg   [10:0] trunc_ln893_1_reg_5521_pp4_iter3_reg;
reg   [10:0] trunc_ln893_1_reg_5521_pp4_iter4_reg;
wire   [0:0] icmp_ln908_1_fu_2637_p2;
reg   [0:0] icmp_ln908_1_reg_5526;
wire   [0:0] select_ln908_2_fu_2654_p3;
reg   [0:0] select_ln908_2_reg_5531;
reg   [62:0] m_reg_5536;
reg   [0:0] p_Result_5_reg_5541;
reg   [51:0] trunc_ln1506_1_reg_5546;
wire   [63:0] p_Result_22_fu_2767_p5;
reg   [63:0] p_Result_22_reg_5551;
wire   [0:0] icmp_ln1506_2_fu_2779_p2;
reg   [0:0] icmp_ln1506_2_reg_5556;
reg   [0:0] icmp_ln1506_2_reg_5556_pp4_iter6_reg;
wire   [0:0] icmp_ln1506_3_fu_2785_p2;
reg   [0:0] icmp_ln1506_3_reg_5561;
reg   [0:0] icmp_ln1506_3_reg_5561_pp4_iter6_reg;
wire   [63:0] bitcast_ln734_1_fu_2790_p1;
wire   [0:0] and_ln1506_1_fu_2798_p2;
reg   [0:0] and_ln1506_1_reg_5571;
wire    ap_CS_fsm_state44;
reg   [31:0] temp_output2_0_V_load_1_reg_5580;
reg   [31:0] temp_output2_0_V_load_2_reg_5595;
wire    ap_CS_fsm_state46;
reg   [31:0] temp_output2_0_V_load_3_reg_5600;
reg   [31:0] temp_output2_0_V_load_4_reg_5615;
wire    ap_CS_fsm_state47;
reg   [31:0] temp_output2_0_V_load_5_reg_5620;
reg   [31:0] temp_output2_0_V_load_6_reg_5635;
wire    ap_CS_fsm_state48;
reg   [31:0] temp_output2_0_V_load_7_reg_5640;
reg   [31:0] temp_output2_0_V_load_8_reg_5655;
wire    ap_CS_fsm_state49;
reg   [31:0] temp_output2_0_V_load_9_reg_5660;
reg   [31:0] temp_output2_0_V_load_10_reg_5675;
wire    ap_CS_fsm_state50;
reg   [31:0] temp_output2_0_V_load_11_reg_5680;
reg   [31:0] temp_output2_0_V_load_12_reg_5695;
wire    ap_CS_fsm_state51;
reg   [31:0] temp_output2_0_V_load_13_reg_5700;
reg   [31:0] temp_output2_0_V_load_14_reg_5715;
wire    ap_CS_fsm_state52;
reg   [31:0] temp_output2_0_V_load_15_reg_5720;
reg   [31:0] temp_output2_0_V_load_16_reg_5735;
wire    ap_CS_fsm_state53;
reg   [31:0] temp_output2_0_V_load_17_reg_5740;
reg   [31:0] temp_output2_0_V_load_18_reg_5755;
wire    ap_CS_fsm_state54;
reg   [31:0] temp_output2_0_V_load_19_reg_5760;
reg   [31:0] temp_output2_0_V_load_20_reg_5775;
wire    ap_CS_fsm_state55;
reg   [31:0] temp_output2_0_V_load_21_reg_5780;
reg   [31:0] temp_output2_0_V_load_22_reg_5795;
wire    ap_CS_fsm_state56;
reg   [31:0] temp_output2_0_V_load_23_reg_5800;
reg   [31:0] temp_output2_0_V_load_24_reg_5815;
wire    ap_CS_fsm_state57;
reg   [31:0] temp_output2_0_V_load_25_reg_5820;
reg   [31:0] temp_output2_0_V_load_26_reg_5835;
wire    ap_CS_fsm_state58;
reg   [31:0] temp_output2_0_V_load_27_reg_5840;
reg   [31:0] temp_output2_0_V_load_28_reg_5855;
wire    ap_CS_fsm_state59;
reg   [31:0] temp_output2_0_V_load_29_reg_5860;
wire  signed [39:0] sext_ln1116_fu_2804_p1;
reg  signed [39:0] sext_ln1116_reg_5875;
wire    ap_CS_fsm_state60;
wire  signed [39:0] sext_ln1116_1_fu_2808_p1;
reg  signed [39:0] sext_ln1116_1_reg_5880;
wire  signed [39:0] sext_ln1116_2_fu_2811_p1;
reg  signed [39:0] sext_ln1116_2_reg_5885;
wire  signed [39:0] sext_ln1116_3_fu_2814_p1;
reg  signed [39:0] sext_ln1116_3_reg_5890;
wire  signed [39:0] sext_ln1116_4_fu_2817_p1;
reg  signed [39:0] sext_ln1116_4_reg_5895;
wire  signed [39:0] sext_ln1116_5_fu_2820_p1;
reg  signed [39:0] sext_ln1116_5_reg_5900;
wire  signed [39:0] sext_ln1116_6_fu_2823_p1;
reg  signed [39:0] sext_ln1116_6_reg_5905;
wire  signed [39:0] sext_ln1116_7_fu_2826_p1;
reg  signed [39:0] sext_ln1116_7_reg_5910;
wire  signed [39:0] sext_ln1116_8_fu_2829_p1;
reg  signed [39:0] sext_ln1116_8_reg_5915;
wire  signed [39:0] sext_ln1116_9_fu_2832_p1;
reg  signed [39:0] sext_ln1116_9_reg_5920;
wire  signed [39:0] sext_ln1116_10_fu_2835_p1;
reg  signed [39:0] sext_ln1116_10_reg_5925;
wire  signed [39:0] sext_ln1116_11_fu_2838_p1;
reg  signed [39:0] sext_ln1116_11_reg_5930;
wire  signed [39:0] sext_ln1116_12_fu_2841_p1;
reg  signed [39:0] sext_ln1116_12_reg_5935;
wire  signed [39:0] sext_ln1116_13_fu_2844_p1;
reg  signed [39:0] sext_ln1116_13_reg_5940;
wire  signed [39:0] sext_ln1116_14_fu_2847_p1;
reg  signed [39:0] sext_ln1116_14_reg_5945;
wire  signed [39:0] sext_ln1116_15_fu_2850_p1;
reg  signed [39:0] sext_ln1116_15_reg_5950;
wire  signed [39:0] sext_ln1116_16_fu_2853_p1;
reg  signed [39:0] sext_ln1116_16_reg_5955;
wire  signed [39:0] sext_ln1116_17_fu_2856_p1;
reg  signed [39:0] sext_ln1116_17_reg_5960;
wire  signed [39:0] sext_ln1116_18_fu_2859_p1;
reg  signed [39:0] sext_ln1116_18_reg_5965;
wire  signed [39:0] sext_ln1116_19_fu_2862_p1;
reg  signed [39:0] sext_ln1116_19_reg_5970;
wire  signed [39:0] sext_ln1116_20_fu_2865_p1;
reg  signed [39:0] sext_ln1116_20_reg_5975;
wire  signed [39:0] sext_ln1116_21_fu_2868_p1;
reg  signed [39:0] sext_ln1116_21_reg_5980;
wire  signed [39:0] sext_ln1116_22_fu_2871_p1;
reg  signed [39:0] sext_ln1116_22_reg_5985;
wire  signed [39:0] sext_ln1116_23_fu_2874_p1;
reg  signed [39:0] sext_ln1116_23_reg_5990;
wire  signed [39:0] sext_ln1116_24_fu_2877_p1;
reg  signed [39:0] sext_ln1116_24_reg_5995;
wire  signed [39:0] sext_ln1116_25_fu_2880_p1;
reg  signed [39:0] sext_ln1116_25_reg_6000;
wire  signed [39:0] sext_ln1116_26_fu_2883_p1;
reg  signed [39:0] sext_ln1116_26_reg_6005;
wire  signed [39:0] sext_ln1116_27_fu_2886_p1;
reg  signed [39:0] sext_ln1116_27_reg_6010;
wire  signed [39:0] sext_ln1116_28_fu_2889_p1;
reg  signed [39:0] sext_ln1116_28_reg_6015;
wire  signed [39:0] sext_ln1116_29_fu_2892_p1;
reg  signed [39:0] sext_ln1116_29_reg_6020;
wire  signed [39:0] sext_ln1116_30_fu_2895_p1;
reg  signed [39:0] sext_ln1116_30_reg_6025;
wire  signed [39:0] temp_output2_0_V_load_31_cast_fu_2899_p1;
reg  signed [39:0] temp_output2_0_V_load_31_cast_reg_6030;
wire   [4:0] add_ln57_fu_2903_p2;
wire    ap_CS_fsm_pp5_stage0;
reg    ap_enable_reg_pp5_iter0;
wire    ap_block_state61_pp5_stage0_iter0;
wire    ap_block_state62_pp5_stage0_iter1;
wire    ap_block_state63_pp5_stage0_iter2;
wire    ap_block_state64_pp5_stage0_iter3;
wire    ap_block_state65_pp5_stage0_iter4;
wire    ap_block_state66_pp5_stage0_iter5;
wire    ap_block_state67_pp5_stage0_iter6;
wire    ap_block_state68_pp5_stage0_iter7;
wire    ap_block_state69_pp5_stage0_iter8;
wire    ap_block_state70_pp5_stage0_iter9;
wire    ap_block_state71_pp5_stage0_iter10;
wire    ap_block_state72_pp5_stage0_iter11;
wire    ap_block_state73_pp5_stage0_iter12;
wire    ap_block_state74_pp5_stage0_iter13;
wire    ap_block_state75_pp5_stage0_iter14;
wire    ap_block_state76_pp5_stage0_iter15;
wire    ap_block_state77_pp5_stage0_iter16;
wire    ap_block_state78_pp5_stage0_iter17;
wire    ap_block_state79_pp5_stage0_iter18;
wire    ap_block_state80_pp5_stage0_iter19;
wire    ap_block_pp5_stage0_11001;
wire   [0:0] icmp_ln57_fu_2909_p2;
reg   [0:0] icmp_ln57_reg_6040;
reg   [0:0] icmp_ln57_reg_6040_pp5_iter1_reg;
reg   [0:0] icmp_ln57_reg_6040_pp5_iter2_reg;
reg   [0:0] icmp_ln57_reg_6040_pp5_iter3_reg;
reg   [0:0] icmp_ln57_reg_6040_pp5_iter4_reg;
reg   [0:0] icmp_ln57_reg_6040_pp5_iter5_reg;
reg   [0:0] icmp_ln57_reg_6040_pp5_iter6_reg;
reg   [0:0] icmp_ln57_reg_6040_pp5_iter7_reg;
reg   [0:0] icmp_ln57_reg_6040_pp5_iter8_reg;
reg   [0:0] icmp_ln57_reg_6040_pp5_iter9_reg;
reg   [0:0] icmp_ln57_reg_6040_pp5_iter10_reg;
reg   [0:0] icmp_ln57_reg_6040_pp5_iter11_reg;
reg   [0:0] icmp_ln57_reg_6040_pp5_iter12_reg;
reg   [0:0] icmp_ln57_reg_6040_pp5_iter13_reg;
reg   [0:0] icmp_ln57_reg_6040_pp5_iter14_reg;
reg   [0:0] icmp_ln57_reg_6040_pp5_iter15_reg;
reg   [0:0] icmp_ln57_reg_6040_pp5_iter16_reg;
reg   [0:0] icmp_ln57_reg_6040_pp5_iter17_reg;
reg   [0:0] icmp_ln57_reg_6040_pp5_iter18_reg;
wire   [63:0] j_2_cast_fu_2915_p1;
reg   [63:0] j_2_cast_reg_6044;
reg   [63:0] j_2_cast_reg_6044_pp5_iter1_reg;
reg   [63:0] j_2_cast_reg_6044_pp5_iter2_reg;
reg   [63:0] j_2_cast_reg_6044_pp5_iter3_reg;
reg   [63:0] j_2_cast_reg_6044_pp5_iter4_reg;
reg   [63:0] j_2_cast_reg_6044_pp5_iter5_reg;
reg   [63:0] j_2_cast_reg_6044_pp5_iter6_reg;
reg   [63:0] j_2_cast_reg_6044_pp5_iter7_reg;
reg   [63:0] j_2_cast_reg_6044_pp5_iter8_reg;
reg   [63:0] j_2_cast_reg_6044_pp5_iter9_reg;
reg   [63:0] j_2_cast_reg_6044_pp5_iter10_reg;
reg   [63:0] j_2_cast_reg_6044_pp5_iter11_reg;
reg   [63:0] j_2_cast_reg_6044_pp5_iter12_reg;
reg   [63:0] j_2_cast_reg_6044_pp5_iter13_reg;
reg   [63:0] j_2_cast_reg_6044_pp5_iter14_reg;
reg   [63:0] j_2_cast_reg_6044_pp5_iter15_reg;
reg   [63:0] j_2_cast_reg_6044_pp5_iter16_reg;
reg   [63:0] j_2_cast_reg_6044_pp5_iter17_reg;
reg   [63:0] j_2_cast_reg_6044_pp5_iter18_reg;
reg  signed [7:0] layer3_weights_V_0_load_reg_6093;
reg  signed [7:0] layer3_weights_V_1_load_reg_6098;
reg  signed [7:0] layer3_weights_V_2_load_reg_6103;
reg  signed [7:0] layer3_weights_V_3_load_reg_6133;
reg  signed [7:0] layer3_weights_V_4_load_reg_6138;
wire   [39:0] grp_fu_2933_p2;
reg   [39:0] mul_ln703_reg_6153;
reg   [31:0] tmp_25_reg_6158;
wire   [39:0] grp_fu_2941_p2;
reg   [39:0] mul_ln703_1_reg_6163;
reg  signed [7:0] layer3_weights_V_5_load_reg_6178;
reg  signed [7:0] layer3_weights_V_6_load_reg_6183;
wire   [39:0] grp_fu_2959_p2;
reg   [39:0] mul_ln703_2_reg_6198;
reg   [31:0] tmp_27_reg_6203;
wire   [39:0] grp_fu_2967_p2;
reg   [39:0] mul_ln703_3_reg_6208;
reg  signed [7:0] layer3_weights_V_7_load_reg_6223;
reg  signed [7:0] layer3_weights_V_8_load_reg_6228;
wire   [39:0] grp_fu_3020_p2;
reg   [39:0] mul_ln703_4_reg_6243;
reg   [31:0] tmp_29_reg_6248;
wire   [39:0] grp_fu_3028_p2;
reg   [39:0] mul_ln703_5_reg_6253;
reg  signed [7:0] layer3_weights_V_9_load_reg_6268;
reg  signed [7:0] layer3_weights_V_10_load_reg_6273;
wire   [39:0] grp_fu_3081_p2;
reg   [39:0] mul_ln703_6_reg_6288;
reg   [31:0] tmp_31_reg_6293;
wire   [39:0] grp_fu_3089_p2;
reg   [39:0] mul_ln703_7_reg_6298;
reg  signed [7:0] layer3_weights_V_11_load_reg_6313;
reg  signed [7:0] layer3_weights_V_12_load_reg_6318;
wire   [39:0] grp_fu_3142_p2;
reg   [39:0] mul_ln703_8_reg_6333;
reg   [31:0] tmp_33_reg_6338;
wire   [39:0] grp_fu_3150_p2;
reg   [39:0] mul_ln703_9_reg_6343;
reg  signed [7:0] layer3_weights_V_13_load_reg_6358;
reg  signed [7:0] layer3_weights_V_14_load_reg_6363;
wire   [39:0] grp_fu_3203_p2;
reg   [39:0] mul_ln703_10_reg_6378;
reg   [31:0] tmp_35_reg_6383;
wire   [39:0] grp_fu_3211_p2;
reg   [39:0] mul_ln703_11_reg_6388;
reg  signed [7:0] layer3_weights_V_15_load_reg_6403;
reg  signed [7:0] layer3_weights_V_16_load_reg_6408;
wire   [39:0] grp_fu_3264_p2;
reg   [39:0] mul_ln703_12_reg_6423;
reg   [31:0] tmp_37_reg_6428;
wire   [39:0] grp_fu_3272_p2;
reg   [39:0] mul_ln703_13_reg_6433;
reg  signed [7:0] layer3_weights_V_17_load_reg_6448;
reg  signed [7:0] layer3_weights_V_18_load_reg_6453;
wire   [39:0] grp_fu_3325_p2;
reg   [39:0] mul_ln703_14_reg_6468;
reg   [31:0] tmp_39_reg_6473;
wire   [39:0] grp_fu_3333_p2;
reg   [39:0] mul_ln703_15_reg_6478;
reg  signed [7:0] layer3_weights_V_19_load_reg_6493;
reg  signed [7:0] layer3_weights_V_20_load_reg_6498;
wire   [39:0] grp_fu_3386_p2;
reg   [39:0] mul_ln703_16_reg_6513;
reg   [31:0] tmp_41_reg_6518;
wire   [39:0] grp_fu_3394_p2;
reg   [39:0] mul_ln703_17_reg_6523;
reg  signed [7:0] layer3_weights_V_21_load_reg_6538;
reg  signed [7:0] layer3_weights_V_22_load_reg_6543;
wire   [39:0] grp_fu_3447_p2;
reg   [39:0] mul_ln703_18_reg_6558;
reg   [31:0] tmp_43_reg_6563;
wire   [39:0] grp_fu_3455_p2;
reg   [39:0] mul_ln703_19_reg_6568;
reg  signed [7:0] layer3_weights_V_23_load_reg_6583;
reg  signed [7:0] layer3_weights_V_24_load_reg_6588;
wire   [39:0] grp_fu_3508_p2;
reg   [39:0] mul_ln703_20_reg_6603;
reg   [31:0] tmp_45_reg_6608;
wire   [39:0] grp_fu_3516_p2;
reg   [39:0] mul_ln703_21_reg_6613;
reg  signed [7:0] layer3_weights_V_25_load_reg_6628;
reg  signed [7:0] layer3_weights_V_26_load_reg_6633;
wire   [39:0] grp_fu_3569_p2;
reg   [39:0] mul_ln703_22_reg_6648;
reg   [31:0] tmp_47_reg_6653;
wire   [39:0] grp_fu_3577_p2;
reg   [39:0] mul_ln703_23_reg_6658;
reg  signed [7:0] layer3_weights_V_27_load_reg_6673;
reg  signed [7:0] layer3_weights_V_28_load_reg_6678;
wire   [39:0] grp_fu_3630_p2;
reg   [39:0] mul_ln703_24_reg_6693;
reg   [31:0] tmp_49_reg_6698;
wire   [39:0] grp_fu_3638_p2;
reg   [39:0] mul_ln703_25_reg_6703;
reg  signed [7:0] layer3_weights_V_29_load_reg_6718;
reg  signed [7:0] layer3_weights_V_30_load_reg_6723;
wire   [39:0] grp_fu_3691_p2;
reg   [39:0] mul_ln703_26_reg_6733;
reg   [31:0] tmp_51_reg_6738;
wire   [39:0] grp_fu_3699_p2;
reg   [39:0] mul_ln703_27_reg_6743;
reg  signed [7:0] layer3_weights_V_31_load_reg_6758;
wire   [39:0] grp_fu_3752_p2;
reg   [39:0] mul_ln703_28_reg_6763;
reg   [31:0] tmp_53_reg_6768;
wire   [39:0] grp_fu_3760_p2;
reg   [39:0] mul_ln703_29_reg_6773;
wire   [39:0] grp_fu_3813_p2;
reg   [39:0] mul_ln703_30_reg_6783;
reg   [31:0] tmp_55_reg_6788;
wire   [4:0] add_ln120_fu_3886_p2;
reg    ap_enable_reg_pp6_iter0;
wire   [0:0] icmp_ln120_fu_3892_p2;
reg   [3:0] temp_output3_0_V_addr_2_reg_6802;
reg   [3:0] temp_output3_0_V_addr_2_reg_6802_pp6_iter1_reg;
reg   [3:0] temp_output3_0_V_addr_2_reg_6802_pp6_iter2_reg;
reg   [3:0] temp_output3_0_V_addr_2_reg_6802_pp6_iter3_reg;
reg   [3:0] temp_output3_0_V_addr_2_reg_6802_pp6_iter4_reg;
reg   [3:0] temp_output3_0_V_addr_2_reg_6802_pp6_iter5_reg;
reg   [3:0] temp_output3_0_V_addr_2_reg_6802_pp6_iter6_reg;
reg   [3:0] temp_output3_0_V_addr_2_reg_6802_pp6_iter7_reg;
wire   [0:0] icmp_ln885_2_fu_3903_p2;
reg   [0:0] icmp_ln885_2_reg_6808;
reg   [0:0] icmp_ln885_2_reg_6808_pp6_iter2_reg;
reg   [0:0] icmp_ln885_2_reg_6808_pp6_iter3_reg;
reg   [0:0] icmp_ln885_2_reg_6808_pp6_iter4_reg;
reg   [0:0] icmp_ln885_2_reg_6808_pp6_iter5_reg;
reg   [0:0] icmp_ln885_2_reg_6808_pp6_iter6_reg;
reg   [0:0] icmp_ln885_2_reg_6808_pp6_iter7_reg;
wire   [31:0] tmp_V_4_fu_3909_p2;
reg   [31:0] tmp_V_4_reg_6812;
wire   [0:0] p_Result_23_fu_3915_p3;
reg   [0:0] p_Result_23_reg_6817;
reg   [0:0] p_Result_23_reg_6817_pp6_iter3_reg;
reg   [0:0] p_Result_23_reg_6817_pp6_iter4_reg;
wire   [31:0] tmp_V_8_fu_3923_p3;
reg   [31:0] tmp_V_8_reg_6822;
reg   [31:0] tmp_V_8_reg_6822_pp6_iter3_reg;
wire   [31:0] sub_ln894_2_fu_3948_p2;
reg   [31:0] sub_ln894_2_reg_6828;
reg   [31:0] sub_ln894_2_reg_6828_pp6_iter3_reg;
wire   [31:0] lsb_index_2_fu_3954_p2;
reg   [31:0] lsb_index_2_reg_6834;
reg   [30:0] tmp_83_reg_6841;
wire   [5:0] trunc_ln897_2_fu_3970_p1;
reg   [5:0] trunc_ln897_2_reg_6846;
wire   [0:0] p_Result_25_fu_3974_p3;
reg   [0:0] p_Result_25_reg_6851;
wire   [10:0] trunc_ln893_2_fu_3982_p1;
reg   [10:0] trunc_ln893_2_reg_6857;
reg   [10:0] trunc_ln893_2_reg_6857_pp6_iter3_reg;
reg   [10:0] trunc_ln893_2_reg_6857_pp6_iter4_reg;
wire   [0:0] icmp_ln908_2_fu_4041_p2;
reg   [0:0] icmp_ln908_2_reg_6862;
wire   [0:0] select_ln908_4_fu_4058_p3;
reg   [0:0] select_ln908_4_reg_6867;
reg   [62:0] m_14_reg_6872;
reg   [0:0] p_Result_10_reg_6877;
reg   [51:0] trunc_ln1506_2_reg_6882;
wire   [63:0] p_Result_26_fu_4171_p5;
reg   [63:0] p_Result_26_reg_6887;
wire   [0:0] icmp_ln1506_4_fu_4183_p2;
reg   [0:0] icmp_ln1506_4_reg_6892;
reg   [0:0] icmp_ln1506_4_reg_6892_pp6_iter6_reg;
wire   [0:0] icmp_ln1506_5_fu_4189_p2;
reg   [0:0] icmp_ln1506_5_reg_6897;
reg   [0:0] icmp_ln1506_5_reg_6897_pp6_iter6_reg;
wire   [63:0] bitcast_ln734_2_fu_4194_p1;
wire   [0:0] and_ln1506_2_fu_4202_p2;
reg   [0:0] and_ln1506_2_reg_6907;
wire    ap_CS_fsm_state91;
reg   [31:0] temp_output3_0_V_load_1_reg_6935;
reg   [31:0] temp_output3_0_V_load_2_reg_6950;
wire    ap_CS_fsm_state93;
reg   [31:0] temp_output3_0_V_load_3_reg_6955;
reg   [31:0] temp_output3_0_V_load_4_reg_6970;
wire    ap_CS_fsm_state94;
reg   [31:0] temp_output3_0_V_load_5_reg_6975;
reg   [31:0] temp_output3_0_V_load_6_reg_6990;
wire    ap_CS_fsm_state95;
reg   [31:0] temp_output3_0_V_load_7_reg_6995;
reg   [31:0] temp_output3_0_V_load_8_reg_7010;
wire    ap_CS_fsm_state96;
reg   [31:0] temp_output3_0_V_load_9_reg_7015;
reg   [31:0] temp_output3_0_V_load_10_reg_7030;
wire    ap_CS_fsm_state97;
reg   [31:0] temp_output3_0_V_load_11_reg_7035;
reg   [31:0] temp_output3_0_V_load_12_reg_7050;
wire    ap_CS_fsm_state98;
reg   [31:0] temp_output3_0_V_load_13_reg_7055;
wire  signed [39:0] sext_ln1116_31_fu_4213_p1;
reg  signed [39:0] sext_ln1116_31_reg_7070;
wire    ap_CS_fsm_state99;
wire  signed [39:0] sext_ln1116_32_fu_4217_p1;
reg  signed [39:0] sext_ln1116_32_reg_7075;
wire  signed [39:0] sext_ln1116_33_fu_4220_p1;
reg  signed [39:0] sext_ln1116_33_reg_7080;
wire  signed [39:0] sext_ln1116_34_fu_4223_p1;
reg  signed [39:0] sext_ln1116_34_reg_7085;
wire  signed [39:0] sext_ln1116_35_fu_4226_p1;
reg  signed [39:0] sext_ln1116_35_reg_7090;
wire  signed [39:0] sext_ln1116_36_fu_4229_p1;
reg  signed [39:0] sext_ln1116_36_reg_7095;
wire  signed [39:0] sext_ln1116_37_fu_4232_p1;
reg  signed [39:0] sext_ln1116_37_reg_7100;
wire  signed [39:0] sext_ln1116_38_fu_4235_p1;
reg  signed [39:0] sext_ln1116_38_reg_7105;
wire  signed [39:0] sext_ln1116_39_fu_4238_p1;
reg  signed [39:0] sext_ln1116_39_reg_7110;
wire  signed [39:0] sext_ln1116_40_fu_4241_p1;
reg  signed [39:0] sext_ln1116_40_reg_7115;
wire  signed [39:0] sext_ln1116_41_fu_4244_p1;
reg  signed [39:0] sext_ln1116_41_reg_7120;
wire  signed [39:0] sext_ln1116_42_fu_4247_p1;
reg  signed [39:0] sext_ln1116_42_reg_7125;
wire  signed [39:0] sext_ln1116_43_fu_4250_p1;
reg  signed [39:0] sext_ln1116_43_reg_7130;
wire  signed [39:0] sext_ln1116_44_fu_4253_p1;
reg  signed [39:0] sext_ln1116_44_reg_7135;
wire  signed [39:0] sext_ln1116_45_fu_4256_p1;
reg  signed [39:0] sext_ln1116_45_reg_7140;
wire  signed [39:0] temp_output3_0_V_load_15_cast_fu_4260_p1;
reg  signed [39:0] temp_output3_0_V_load_15_cast_reg_7145;
wire   [1:0] add_ln74_fu_4264_p2;
reg   [1:0] add_ln74_reg_7150;
reg    ap_enable_reg_pp7_iter0;
wire   [0:0] icmp_ln74_fu_4270_p2;
reg   [0:0] icmp_ln74_reg_7155;
wire   [31:0] tmp_5_fu_4276_p5;
reg  signed [31:0] tmp_5_reg_7159;
wire   [31:0] tmp_6_fu_4288_p5;
reg  signed [31:0] tmp_6_reg_7164;
wire   [31:0] tmp_7_fu_4300_p5;
reg  signed [31:0] tmp_7_reg_7169;
wire   [31:0] tmp_8_fu_4336_p5;
reg  signed [31:0] tmp_8_reg_7189;
wire   [31:0] tmp_9_fu_4348_p5;
reg  signed [31:0] tmp_9_reg_7194;
wire   [39:0] grp_fu_4323_p2;
reg   [39:0] mul_ln1118_3_reg_7199;
reg   [31:0] tmp_56_reg_7204;
wire   [39:0] grp_fu_4331_p2;
reg   [39:0] mul_ln1118_4_reg_7209;
wire   [31:0] tmp_10_fu_4386_p5;
reg  signed [31:0] tmp_10_reg_7224;
wire   [31:0] tmp_11_fu_4398_p5;
reg  signed [31:0] tmp_11_reg_7229;
wire   [39:0] grp_fu_4373_p2;
reg   [39:0] mul_ln1118_5_reg_7234;
reg   [31:0] tmp_58_reg_7239;
wire   [39:0] grp_fu_4381_p2;
reg   [39:0] mul_ln1118_6_reg_7244;
wire   [31:0] tmp_12_fu_4471_p5;
reg  signed [31:0] tmp_12_reg_7259;
wire   [31:0] tmp_13_fu_4483_p5;
reg  signed [31:0] tmp_13_reg_7264;
wire   [39:0] grp_fu_4458_p2;
reg   [39:0] mul_ln1118_7_reg_7269;
reg   [31:0] tmp_60_reg_7274;
wire   [39:0] grp_fu_4466_p2;
reg   [39:0] mul_ln1118_8_reg_7279;
wire   [31:0] tmp_14_fu_4556_p5;
reg  signed [31:0] tmp_14_reg_7294;
wire   [31:0] tmp_15_fu_4568_p5;
reg  signed [31:0] tmp_15_reg_7299;
wire   [39:0] grp_fu_4543_p2;
reg   [39:0] mul_ln1118_9_reg_7304;
reg   [31:0] tmp_62_reg_7309;
wire   [39:0] grp_fu_4551_p2;
reg   [39:0] mul_ln1118_10_reg_7314;
wire   [31:0] tmp_16_fu_4641_p5;
reg  signed [31:0] tmp_16_reg_7329;
wire   [31:0] tmp_17_fu_4653_p5;
reg  signed [31:0] tmp_17_reg_7334;
wire   [39:0] grp_fu_4628_p2;
reg   [39:0] mul_ln1118_11_reg_7339;
reg   [31:0] tmp_64_reg_7344;
wire   [39:0] grp_fu_4636_p2;
reg   [39:0] mul_ln1118_12_reg_7349;
wire   [31:0] tmp_18_fu_4726_p5;
reg  signed [31:0] tmp_18_reg_7364;
wire   [31:0] tmp_19_fu_4738_p5;
reg  signed [31:0] tmp_19_reg_7369;
wire   [39:0] grp_fu_4713_p2;
reg   [39:0] mul_ln1118_13_reg_7374;
reg   [31:0] tmp_66_reg_7379;
wire   [39:0] grp_fu_4721_p2;
reg   [39:0] mul_ln1118_14_reg_7384;
wire   [31:0] tmp_20_fu_4811_p5;
reg  signed [31:0] tmp_20_reg_7399;
wire   [39:0] grp_fu_4798_p2;
reg   [39:0] mul_ln1118_15_reg_7404;
reg   [31:0] tmp_68_reg_7409;
wire   [39:0] grp_fu_4806_p2;
reg   [39:0] mul_ln1118_16_reg_7414;
wire   [39:0] grp_fu_4871_p2;
reg   [39:0] mul_ln1118_17_reg_7424;
reg   [31:0] tmp_70_reg_7429;
wire   [1:0] add_ln138_fu_4958_p2;
wire    ap_CS_fsm_state112;
wire   [31:0] max_val_V_1_fu_4997_p3;
wire   [0:0] icmp_ln138_fu_4964_p2;
wire   [31:0] max_idx_V_1_fu_5017_p3;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state11;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
wire    ap_CS_fsm_state17;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state18;
reg    ap_enable_reg_pp2_iter2;
reg    ap_enable_reg_pp2_iter3;
reg    ap_enable_reg_pp2_iter4;
reg    ap_enable_reg_pp2_iter5;
reg    ap_enable_reg_pp2_iter6;
reg    ap_enable_reg_pp2_iter7;
reg    ap_enable_reg_pp2_iter8;
wire    ap_CS_fsm_state27;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state28;
reg    ap_enable_reg_pp3_iter1;
reg    ap_enable_reg_pp3_iter3;
reg    ap_enable_reg_pp3_iter4;
wire    ap_CS_fsm_state34;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state35;
reg    ap_enable_reg_pp4_iter2;
reg    ap_enable_reg_pp4_iter3;
reg    ap_enable_reg_pp4_iter4;
reg    ap_enable_reg_pp4_iter5;
reg    ap_enable_reg_pp4_iter6;
reg    ap_enable_reg_pp4_iter7;
reg    ap_enable_reg_pp4_iter8;
wire    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state61;
reg    ap_enable_reg_pp5_iter1;
reg    ap_enable_reg_pp5_iter2;
reg    ap_enable_reg_pp5_iter3;
reg    ap_enable_reg_pp5_iter4;
reg    ap_enable_reg_pp5_iter5;
reg    ap_enable_reg_pp5_iter6;
reg    ap_enable_reg_pp5_iter7;
reg    ap_enable_reg_pp5_iter8;
reg    ap_enable_reg_pp5_iter9;
reg    ap_enable_reg_pp5_iter10;
reg    ap_enable_reg_pp5_iter11;
reg    ap_enable_reg_pp5_iter12;
reg    ap_enable_reg_pp5_iter13;
reg    ap_enable_reg_pp5_iter14;
reg    ap_enable_reg_pp5_iter15;
reg    ap_enable_reg_pp5_iter16;
reg    ap_enable_reg_pp5_iter17;
reg    ap_enable_reg_pp5_iter18;
reg    ap_enable_reg_pp5_iter19;
wire    ap_CS_fsm_state81;
wire    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_exit_iter0_state82;
reg    ap_enable_reg_pp6_iter2;
reg    ap_enable_reg_pp6_iter3;
reg    ap_enable_reg_pp6_iter4;
reg    ap_enable_reg_pp6_iter5;
reg    ap_enable_reg_pp6_iter6;
reg    ap_enable_reg_pp6_iter7;
reg    ap_enable_reg_pp6_iter8;
wire    ap_block_pp7_stage0_subdone;
reg    ap_condition_pp7_exit_iter0_state100;
reg    ap_enable_reg_pp7_iter1;
reg    ap_enable_reg_pp7_iter2;
reg    ap_enable_reg_pp7_iter3;
reg    ap_enable_reg_pp7_iter4;
reg    ap_enable_reg_pp7_iter5;
reg    ap_enable_reg_pp7_iter6;
reg    ap_enable_reg_pp7_iter7;
reg    ap_enable_reg_pp7_iter8;
reg    ap_enable_reg_pp7_iter9;
reg    ap_enable_reg_pp7_iter10;
reg   [9:0] fp_input_img_V_address0;
reg    fp_input_img_V_ce0;
reg    fp_input_img_V_we0;
reg   [31:0] fp_input_img_V_d0;
reg   [6:0] temp_output_0_V_address0;
reg    temp_output_0_V_ce0;
reg    temp_output_0_V_we0;
reg   [31:0] temp_output_0_V_d0;
reg   [6:0] temp_output_0_V_address1;
reg    temp_output_0_V_ce1;
reg   [4:0] temp_output2_0_V_address0;
reg    temp_output2_0_V_ce0;
reg    temp_output2_0_V_we0;
reg   [31:0] temp_output2_0_V_d0;
reg   [4:0] temp_output2_0_V_address1;
reg    temp_output2_0_V_ce1;
reg   [3:0] temp_output3_0_V_address0;
reg    temp_output3_0_V_ce0;
reg    temp_output3_0_V_we0;
reg   [31:0] temp_output3_0_V_d0;
reg   [3:0] temp_output3_0_V_address1;
reg    temp_output3_0_V_ce1;
reg   [6:0] ap_phi_mux_j_phi_fu_1426_p4;
wire    ap_block_pp1_stage0;
reg   [9:0] ap_phi_mux_k_phi_fu_1437_p4;
reg   [5:0] ap_phi_mux_j_1_phi_fu_1482_p4;
wire    ap_block_pp3_stage0;
reg   [6:0] ap_phi_mux_k_1_phi_fu_1493_p4;
reg   [1:0] ap_phi_mux_j_3_phi_fu_1549_p4;
wire    ap_block_pp7_stage0;
reg   [1:0] i_4_reg_1557;
wire    ap_CS_fsm_state111;
reg   [31:0] max_idx_V_reg_1568;
reg   [31:0] max_val_V_reg_1580;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln1118_1_fu_1979_p1;
wire   [63:0] k_cast_fu_1945_p1;
wire   [63:0] zext_ln21_fu_1996_p1;
wire   [63:0] i_1_cast_fu_2047_p1;
wire    ap_block_pp2_stage0;
wire   [63:0] zext_ln1118_2_fu_2429_p1;
wire   [63:0] k_1_cast_fu_2412_p1;
wire   [63:0] zext_ln40_fu_2447_p1;
wire   [63:0] i_2_cast_fu_2494_p1;
wire    ap_block_pp4_stage0;
wire    ap_block_pp5_stage0;
wire   [63:0] i_3_cast_fu_3898_p1;
wire    ap_block_pp6_stage0;
reg   [31:0] temp_output4_0_2_V_fu_430;
reg   [31:0] temp_output4_0_2_V_1_fu_434;
reg   [31:0] temp_output4_0_2_V_2_fu_438;
wire   [31:0] grp_fu_1591_p0;
reg   [63:0] grp_fu_1594_p0;
wire   [63:0] grp_fu_1591_p1;
wire   [63:0] ireg_fu_1634_p1;
wire   [62:0] trunc_ln555_fu_1638_p1;
wire   [52:0] p_Result_14_fu_1673_p3;
wire   [53:0] zext_ln569_fu_1680_p1;
wire   [53:0] man_V_1_fu_1684_p2;
wire   [11:0] zext_ln455_fu_1670_p1;
wire   [11:0] F2_fu_1697_p2;
wire   [0:0] icmp_ln581_fu_1703_p2;
wire   [11:0] add_ln581_fu_1709_p2;
wire   [11:0] sub_ln581_fu_1715_p2;
wire   [6:0] tmp_72_fu_1739_p4;
wire   [0:0] or_ln582_fu_1755_p2;
wire   [0:0] xor_ln582_fu_1760_p2;
wire   [0:0] or_ln581_fu_1772_p2;
wire   [0:0] icmp_ln603_fu_1749_p2;
wire   [0:0] xor_ln581_fu_1778_p2;
wire   [0:0] and_ln603_fu_1784_p2;
wire   [53:0] zext_ln586_fu_1798_p1;
wire   [53:0] ashr_ln586_fu_1802_p2;
wire   [0:0] tmp_73_fu_1811_p3;
wire   [0:0] icmp_ln585_fu_1826_p2;
wire   [0:0] and_ln585_fu_1831_p2;
wire   [31:0] select_ln588_fu_1818_p3;
wire   [31:0] trunc_ln586_fu_1807_p1;
wire   [0:0] xor_ln571_fu_1848_p2;
wire   [31:0] shl_ln604_fu_1844_p2;
wire   [0:0] and_ln582_fu_1853_p2;
wire   [31:0] select_ln571_fu_1858_p3;
wire   [0:0] or_ln571_1_fu_1878_p2;
wire   [31:0] select_ln571_3_fu_1872_p3;
wire   [31:0] select_ln571_2_fu_1865_p3;
wire   [6:0] add_ln21_fu_1902_p2;
wire   [13:0] tmp_23_fu_1956_p3;
wire   [15:0] tmp_22_fu_1949_p3;
wire   [15:0] zext_ln1118_fu_1963_p1;
wire   [15:0] add_ln1118_fu_1967_p2;
wire   [15:0] select_ln21_1_cast_fu_1942_p1;
wire   [15:0] add_ln1118_1_fu_1973_p2;
wire   [31:0] select_ln21_2_fu_2000_p3;
wire   [39:0] lhs_1_fu_2007_p3;
wire  signed [39:0] sext_ln703_fu_2015_p1;
wire   [39:0] ret_V_fu_2018_p2;
reg   [31:0] p_Result_16_fu_2079_p4;
reg   [31:0] l_fu_2089_p3;
wire   [5:0] sub_ln897_fu_2140_p2;
wire   [31:0] zext_ln897_fu_2145_p1;
wire   [31:0] lshr_ln897_fu_2149_p2;
wire   [31:0] shl_ln899_fu_2155_p2;
wire   [31:0] or_ln899_3_fu_2160_p2;
wire   [31:0] and_ln899_fu_2166_p2;
wire   [0:0] tmp_76_fu_2177_p3;
wire   [0:0] icmp_ln896_fu_2135_p2;
wire   [0:0] icmp_ln899_fu_2171_p2;
wire   [0:0] xor_ln899_fu_2184_p2;
wire   [0:0] select_ln896_fu_2195_p3;
wire   [0:0] and_ln899_1_fu_2202_p2;
wire   [31:0] add_ln908_fu_2218_p2;
wire   [63:0] zext_ln907_fu_2215_p1;
wire   [63:0] zext_ln908_fu_2223_p1;
wire   [31:0] sub_ln909_fu_2233_p2;
wire   [63:0] zext_ln909_fu_2238_p1;
wire   [63:0] lshr_ln908_fu_2227_p2;
wire   [63:0] shl_ln909_fu_2242_p2;
wire   [63:0] m_3_fu_2248_p3;
wire   [63:0] zext_ln911_fu_2255_p1;
wire   [63:0] m_4_fu_2258_p2;
wire   [10:0] sub_ln915_fu_2302_p2;
wire   [10:0] select_ln893_fu_2295_p3;
wire   [10:0] add_ln915_fu_2307_p2;
wire   [63:0] zext_ln912_fu_2292_p1;
wire   [11:0] tmp_s_fu_2313_p3;
wire   [0:0] or_ln1506_fu_2347_p2;
wire   [0:0] grp_fu_1594_p2;
wire   [5:0] add_ln40_fu_2369_p2;
wire   [11:0] tmp_24_fu_2416_p3;
wire   [11:0] select_ln40_1_cast_fu_2409_p1;
wire   [11:0] add_ln1118_2_fu_2423_p2;
wire   [31:0] select_ln40_2_fu_2451_p3;
wire   [39:0] lhs_3_fu_2458_p3;
wire   [39:0] ret_V_1_fu_2466_p2;
reg   [31:0] p_Result_20_fu_2526_p4;
reg   [31:0] l_1_fu_2536_p3;
wire   [5:0] sub_ln897_1_fu_2587_p2;
wire   [31:0] zext_ln897_1_fu_2592_p1;
wire   [31:0] lshr_ln897_1_fu_2596_p2;
wire   [31:0] shl_ln899_1_fu_2602_p2;
wire   [31:0] or_ln899_fu_2607_p2;
wire   [31:0] and_ln899_2_fu_2613_p2;
wire   [0:0] tmp_80_fu_2624_p3;
wire   [0:0] icmp_ln896_1_fu_2582_p2;
wire   [0:0] icmp_ln899_1_fu_2618_p2;
wire   [0:0] xor_ln899_1_fu_2631_p2;
wire   [0:0] select_ln896_1_fu_2642_p3;
wire   [0:0] and_ln899_3_fu_2649_p2;
wire   [31:0] add_ln908_1_fu_2665_p2;
wire   [63:0] zext_ln907_1_fu_2662_p1;
wire   [63:0] zext_ln908_1_fu_2670_p1;
wire   [31:0] sub_ln909_1_fu_2680_p2;
wire   [63:0] zext_ln909_1_fu_2685_p1;
wire   [63:0] lshr_ln908_1_fu_2674_p2;
wire   [63:0] shl_ln909_1_fu_2689_p2;
wire   [63:0] m_5_fu_2695_p3;
wire   [63:0] zext_ln911_1_fu_2702_p1;
wire   [63:0] m_6_fu_2705_p2;
wire   [10:0] sub_ln915_1_fu_2749_p2;
wire   [10:0] select_ln893_1_fu_2742_p3;
wire   [10:0] add_ln915_1_fu_2754_p2;
wire   [63:0] zext_ln912_1_fu_2739_p1;
wire   [11:0] tmp_1_fu_2760_p3;
wire   [0:0] or_ln1506_1_fu_2794_p2;
wire  signed [31:0] grp_fu_2925_p1;
wire  signed [31:0] grp_fu_2933_p1;
wire  signed [31:0] grp_fu_2941_p1;
wire   [39:0] grp_fu_2925_p2;
wire  signed [31:0] grp_fu_2959_p1;
wire  signed [31:0] grp_fu_2967_p1;
wire   [39:0] shl_ln_fu_2972_p3;
wire   [39:0] add_ln1192_fu_2979_p2;
wire   [31:0] tmp_26_fu_2984_p4;
wire   [39:0] shl_ln728_1_fu_2994_p3;
wire   [39:0] add_ln1192_1_fu_3002_p2;
wire  signed [31:0] grp_fu_3020_p1;
wire  signed [31:0] grp_fu_3028_p1;
wire   [39:0] shl_ln728_2_fu_3033_p3;
wire   [39:0] add_ln1192_2_fu_3040_p2;
wire   [31:0] tmp_28_fu_3045_p4;
wire   [39:0] shl_ln728_3_fu_3055_p3;
wire   [39:0] add_ln1192_3_fu_3063_p2;
wire  signed [31:0] grp_fu_3081_p1;
wire  signed [31:0] grp_fu_3089_p1;
wire   [39:0] shl_ln728_4_fu_3094_p3;
wire   [39:0] add_ln1192_4_fu_3101_p2;
wire   [31:0] tmp_30_fu_3106_p4;
wire   [39:0] shl_ln728_5_fu_3116_p3;
wire   [39:0] add_ln1192_5_fu_3124_p2;
wire  signed [31:0] grp_fu_3142_p1;
wire  signed [31:0] grp_fu_3150_p1;
wire   [39:0] shl_ln728_6_fu_3155_p3;
wire   [39:0] add_ln1192_6_fu_3162_p2;
wire   [31:0] tmp_32_fu_3167_p4;
wire   [39:0] shl_ln728_7_fu_3177_p3;
wire   [39:0] add_ln1192_7_fu_3185_p2;
wire  signed [31:0] grp_fu_3203_p1;
wire  signed [31:0] grp_fu_3211_p1;
wire   [39:0] shl_ln728_8_fu_3216_p3;
wire   [39:0] add_ln1192_8_fu_3223_p2;
wire   [31:0] tmp_34_fu_3228_p4;
wire   [39:0] shl_ln728_9_fu_3238_p3;
wire   [39:0] add_ln1192_9_fu_3246_p2;
wire  signed [31:0] grp_fu_3264_p1;
wire  signed [31:0] grp_fu_3272_p1;
wire   [39:0] shl_ln728_s_fu_3277_p3;
wire   [39:0] add_ln1192_10_fu_3284_p2;
wire   [31:0] tmp_36_fu_3289_p4;
wire   [39:0] shl_ln728_10_fu_3299_p3;
wire   [39:0] add_ln1192_11_fu_3307_p2;
wire  signed [31:0] grp_fu_3325_p1;
wire  signed [31:0] grp_fu_3333_p1;
wire   [39:0] shl_ln728_11_fu_3338_p3;
wire   [39:0] add_ln1192_12_fu_3345_p2;
wire   [31:0] tmp_38_fu_3350_p4;
wire   [39:0] shl_ln728_12_fu_3360_p3;
wire   [39:0] add_ln1192_13_fu_3368_p2;
wire  signed [31:0] grp_fu_3386_p1;
wire  signed [31:0] grp_fu_3394_p1;
wire   [39:0] shl_ln728_13_fu_3399_p3;
wire   [39:0] add_ln1192_14_fu_3406_p2;
wire   [31:0] tmp_40_fu_3411_p4;
wire   [39:0] shl_ln728_14_fu_3421_p3;
wire   [39:0] add_ln1192_15_fu_3429_p2;
wire  signed [31:0] grp_fu_3447_p1;
wire  signed [31:0] grp_fu_3455_p1;
wire   [39:0] shl_ln728_15_fu_3460_p3;
wire   [39:0] add_ln1192_16_fu_3467_p2;
wire   [31:0] tmp_42_fu_3472_p4;
wire   [39:0] shl_ln728_16_fu_3482_p3;
wire   [39:0] add_ln1192_17_fu_3490_p2;
wire  signed [31:0] grp_fu_3508_p1;
wire  signed [31:0] grp_fu_3516_p1;
wire   [39:0] shl_ln728_17_fu_3521_p3;
wire   [39:0] add_ln1192_18_fu_3528_p2;
wire   [31:0] tmp_44_fu_3533_p4;
wire   [39:0] shl_ln728_18_fu_3543_p3;
wire   [39:0] add_ln1192_19_fu_3551_p2;
wire  signed [31:0] grp_fu_3569_p1;
wire  signed [31:0] grp_fu_3577_p1;
wire   [39:0] shl_ln728_19_fu_3582_p3;
wire   [39:0] add_ln1192_20_fu_3589_p2;
wire   [31:0] tmp_46_fu_3594_p4;
wire   [39:0] shl_ln728_20_fu_3604_p3;
wire   [39:0] add_ln1192_21_fu_3612_p2;
wire  signed [31:0] grp_fu_3630_p1;
wire  signed [31:0] grp_fu_3638_p1;
wire   [39:0] shl_ln728_21_fu_3643_p3;
wire   [39:0] add_ln1192_22_fu_3650_p2;
wire   [31:0] tmp_48_fu_3655_p4;
wire   [39:0] shl_ln728_22_fu_3665_p3;
wire   [39:0] add_ln1192_23_fu_3673_p2;
wire  signed [31:0] grp_fu_3691_p1;
wire  signed [31:0] grp_fu_3699_p1;
wire   [39:0] shl_ln728_23_fu_3704_p3;
wire   [39:0] add_ln1192_24_fu_3711_p2;
wire   [31:0] tmp_50_fu_3716_p4;
wire   [39:0] shl_ln728_24_fu_3726_p3;
wire   [39:0] add_ln1192_25_fu_3734_p2;
wire  signed [31:0] grp_fu_3752_p1;
wire  signed [31:0] grp_fu_3760_p1;
wire   [39:0] shl_ln728_25_fu_3765_p3;
wire   [39:0] add_ln1192_26_fu_3772_p2;
wire   [31:0] tmp_52_fu_3777_p4;
wire   [39:0] shl_ln728_26_fu_3787_p3;
wire   [39:0] add_ln1192_27_fu_3795_p2;
wire  signed [31:0] grp_fu_3813_p1;
wire   [39:0] shl_ln728_27_fu_3818_p3;
wire   [39:0] add_ln1192_28_fu_3825_p2;
wire   [31:0] tmp_54_fu_3830_p4;
wire   [39:0] shl_ln728_28_fu_3840_p3;
wire   [39:0] add_ln1192_29_fu_3848_p2;
wire   [39:0] shl_ln728_29_fu_3863_p3;
wire   [39:0] add_ln1192_30_fu_3870_p2;
reg   [31:0] p_Result_24_fu_3930_p4;
reg   [31:0] l_2_fu_3940_p3;
wire   [5:0] sub_ln897_2_fu_3991_p2;
wire   [31:0] zext_ln897_2_fu_3996_p1;
wire   [31:0] lshr_ln897_2_fu_4000_p2;
wire   [31:0] shl_ln899_2_fu_4006_p2;
wire   [31:0] or_ln899_4_fu_4011_p2;
wire   [31:0] and_ln899_4_fu_4017_p2;
wire   [0:0] tmp_84_fu_4028_p3;
wire   [0:0] icmp_ln896_2_fu_3986_p2;
wire   [0:0] icmp_ln899_2_fu_4022_p2;
wire   [0:0] xor_ln899_2_fu_4035_p2;
wire   [0:0] select_ln896_2_fu_4046_p3;
wire   [0:0] and_ln899_5_fu_4053_p2;
wire   [31:0] add_ln908_2_fu_4069_p2;
wire   [63:0] zext_ln907_2_fu_4066_p1;
wire   [63:0] zext_ln908_2_fu_4074_p1;
wire   [31:0] sub_ln909_2_fu_4084_p2;
wire   [63:0] zext_ln909_2_fu_4089_p1;
wire   [63:0] lshr_ln908_2_fu_4078_p2;
wire   [63:0] shl_ln909_2_fu_4093_p2;
wire   [63:0] m_10_fu_4099_p3;
wire   [63:0] zext_ln911_2_fu_4106_p1;
wire   [63:0] m_11_fu_4109_p2;
wire   [10:0] sub_ln915_2_fu_4153_p2;
wire   [10:0] select_ln893_2_fu_4146_p3;
wire   [10:0] add_ln915_2_fu_4158_p2;
wire   [63:0] zext_ln912_2_fu_4143_p1;
wire   [11:0] tmp_3_fu_4164_p3;
wire   [0:0] or_ln1506_2_fu_4198_p2;
wire  signed [31:0] grp_fu_4315_p1;
wire  signed [31:0] grp_fu_4323_p1;
wire  signed [31:0] grp_fu_4331_p1;
wire   [39:0] grp_fu_4315_p2;
wire  signed [31:0] grp_fu_4373_p1;
wire  signed [31:0] grp_fu_4381_p1;
wire   [39:0] shl_ln728_30_fu_4410_p3;
wire   [39:0] add_ln1192_32_fu_4417_p2;
wire   [31:0] tmp_57_fu_4422_p4;
wire   [39:0] shl_ln728_31_fu_4432_p3;
wire   [39:0] add_ln1192_33_fu_4440_p2;
wire  signed [31:0] grp_fu_4458_p1;
wire  signed [31:0] grp_fu_4466_p1;
wire   [39:0] shl_ln728_32_fu_4495_p3;
wire   [39:0] add_ln1192_34_fu_4502_p2;
wire   [31:0] tmp_59_fu_4507_p4;
wire   [39:0] shl_ln728_33_fu_4517_p3;
wire   [39:0] add_ln1192_35_fu_4525_p2;
wire  signed [31:0] grp_fu_4543_p1;
wire  signed [31:0] grp_fu_4551_p1;
wire   [39:0] shl_ln728_34_fu_4580_p3;
wire   [39:0] add_ln1192_36_fu_4587_p2;
wire   [31:0] tmp_61_fu_4592_p4;
wire   [39:0] shl_ln728_35_fu_4602_p3;
wire   [39:0] add_ln1192_37_fu_4610_p2;
wire  signed [31:0] grp_fu_4628_p1;
wire  signed [31:0] grp_fu_4636_p1;
wire   [39:0] shl_ln728_36_fu_4665_p3;
wire   [39:0] add_ln1192_38_fu_4672_p2;
wire   [31:0] tmp_63_fu_4677_p4;
wire   [39:0] shl_ln728_37_fu_4687_p3;
wire   [39:0] add_ln1192_39_fu_4695_p2;
wire  signed [31:0] grp_fu_4713_p1;
wire  signed [31:0] grp_fu_4721_p1;
wire   [39:0] shl_ln728_38_fu_4750_p3;
wire   [39:0] add_ln1192_40_fu_4757_p2;
wire   [31:0] tmp_65_fu_4762_p4;
wire   [39:0] shl_ln728_39_fu_4772_p3;
wire   [39:0] add_ln1192_41_fu_4780_p2;
wire  signed [31:0] grp_fu_4798_p1;
wire  signed [31:0] grp_fu_4806_p1;
wire   [39:0] shl_ln728_40_fu_4823_p3;
wire   [39:0] add_ln1192_42_fu_4830_p2;
wire   [31:0] tmp_67_fu_4835_p4;
wire   [39:0] shl_ln728_41_fu_4845_p3;
wire   [39:0] add_ln1192_43_fu_4853_p2;
wire  signed [31:0] grp_fu_4871_p1;
wire   [39:0] shl_ln728_42_fu_4876_p3;
wire   [39:0] add_ln1192_44_fu_4883_p2;
wire   [31:0] tmp_69_fu_4888_p4;
wire   [39:0] shl_ln728_43_fu_4898_p3;
wire   [39:0] add_ln1192_45_fu_4906_p2;
wire   [39:0] shl_ln728_44_fu_4921_p3;
wire   [39:0] add_ln1192_46_fu_4928_p2;
wire   [31:0] tmp_21_fu_4979_p5;
wire   [0:0] icmp_ln1494_fu_4991_p2;
wire   [9:0] shl_ln1_fu_5005_p3;
wire   [31:0] zext_ln140_fu_5013_p1;
wire    ap_CS_fsm_state113;
wire   [7:0] trunc_ln851_fu_5043_p1;
wire   [23:0] ret_V_2_fu_5025_p4;
wire   [0:0] icmp_ln851_fu_5047_p2;
wire   [23:0] ret_V_3_fu_5053_p2;
wire   [0:0] p_Result_12_fu_5035_p3;
wire   [23:0] select_ln850_fu_5059_p3;
wire   [23:0] ret_V_5_fu_5067_p3;
wire    ap_block_pp2_stage0_00001;
wire    ap_block_pp4_stage0_00001;
wire    ap_block_pp6_stage0_00001;
reg   [42:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;
reg    ap_idle_pp7;
wire    ap_enable_pp7;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 43'd1;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter5 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter5 = 1'b0;
#0 ap_enable_reg_pp2_iter6 = 1'b0;
#0 ap_enable_reg_pp2_iter7 = 1'b0;
#0 ap_enable_reg_pp2_iter8 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter4 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter3 = 1'b0;
#0 ap_enable_reg_pp4_iter4 = 1'b0;
#0 ap_enable_reg_pp4_iter5 = 1'b0;
#0 ap_enable_reg_pp4_iter6 = 1'b0;
#0 ap_enable_reg_pp4_iter7 = 1'b0;
#0 ap_enable_reg_pp4_iter8 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter2 = 1'b0;
#0 ap_enable_reg_pp5_iter3 = 1'b0;
#0 ap_enable_reg_pp5_iter4 = 1'b0;
#0 ap_enable_reg_pp5_iter5 = 1'b0;
#0 ap_enable_reg_pp5_iter6 = 1'b0;
#0 ap_enable_reg_pp5_iter7 = 1'b0;
#0 ap_enable_reg_pp5_iter8 = 1'b0;
#0 ap_enable_reg_pp5_iter9 = 1'b0;
#0 ap_enable_reg_pp5_iter10 = 1'b0;
#0 ap_enable_reg_pp5_iter11 = 1'b0;
#0 ap_enable_reg_pp5_iter12 = 1'b0;
#0 ap_enable_reg_pp5_iter13 = 1'b0;
#0 ap_enable_reg_pp5_iter14 = 1'b0;
#0 ap_enable_reg_pp5_iter15 = 1'b0;
#0 ap_enable_reg_pp5_iter16 = 1'b0;
#0 ap_enable_reg_pp5_iter17 = 1'b0;
#0 ap_enable_reg_pp5_iter18 = 1'b0;
#0 ap_enable_reg_pp5_iter19 = 1'b0;
#0 ap_enable_reg_pp6_iter2 = 1'b0;
#0 ap_enable_reg_pp6_iter3 = 1'b0;
#0 ap_enable_reg_pp6_iter4 = 1'b0;
#0 ap_enable_reg_pp6_iter5 = 1'b0;
#0 ap_enable_reg_pp6_iter6 = 1'b0;
#0 ap_enable_reg_pp6_iter7 = 1'b0;
#0 ap_enable_reg_pp6_iter8 = 1'b0;
#0 ap_enable_reg_pp7_iter1 = 1'b0;
#0 ap_enable_reg_pp7_iter2 = 1'b0;
#0 ap_enable_reg_pp7_iter3 = 1'b0;
#0 ap_enable_reg_pp7_iter4 = 1'b0;
#0 ap_enable_reg_pp7_iter5 = 1'b0;
#0 ap_enable_reg_pp7_iter6 = 1'b0;
#0 ap_enable_reg_pp7_iter7 = 1'b0;
#0 ap_enable_reg_pp7_iter8 = 1'b0;
#0 ap_enable_reg_pp7_iter9 = 1'b0;
#0 ap_enable_reg_pp7_iter10 = 1'b0;
end

nn_inference_weights_layer1_weights_V #(
    .DataWidth( 7 ),
    .AddressRange( 61440 ),
    .AddressWidth( 16 ))
weights_layer1_weights_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_layer1_weights_V_address0),
    .ce0(weights_layer1_weights_V_ce0),
    .q0(weights_layer1_weights_V_q0)
);

nn_inference_weights_layer2_weights_V #(
    .DataWidth( 8 ),
    .AddressRange( 2560 ),
    .AddressWidth( 12 ))
weights_layer2_weights_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_layer2_weights_V_address0),
    .ce0(weights_layer2_weights_V_ce0),
    .q0(weights_layer2_weights_V_q0)
);

nn_inference_layer3_weights_V_0 #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
layer3_weights_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer3_weights_V_0_address0),
    .ce0(layer3_weights_V_0_ce0),
    .q0(layer3_weights_V_0_q0)
);

nn_inference_layer3_weights_V_1 #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
layer3_weights_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer3_weights_V_1_address0),
    .ce0(layer3_weights_V_1_ce0),
    .q0(layer3_weights_V_1_q0)
);

nn_inference_layer3_weights_V_2 #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
layer3_weights_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer3_weights_V_2_address0),
    .ce0(layer3_weights_V_2_ce0),
    .q0(layer3_weights_V_2_q0)
);

nn_inference_layer3_weights_V_3 #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
layer3_weights_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer3_weights_V_3_address0),
    .ce0(layer3_weights_V_3_ce0),
    .q0(layer3_weights_V_3_q0)
);

nn_inference_layer3_weights_V_4 #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
layer3_weights_V_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer3_weights_V_4_address0),
    .ce0(layer3_weights_V_4_ce0),
    .q0(layer3_weights_V_4_q0)
);

nn_inference_layer3_weights_V_5 #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
layer3_weights_V_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer3_weights_V_5_address0),
    .ce0(layer3_weights_V_5_ce0),
    .q0(layer3_weights_V_5_q0)
);

nn_inference_layer3_weights_V_6 #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
layer3_weights_V_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer3_weights_V_6_address0),
    .ce0(layer3_weights_V_6_ce0),
    .q0(layer3_weights_V_6_q0)
);

nn_inference_layer3_weights_V_7 #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
layer3_weights_V_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer3_weights_V_7_address0),
    .ce0(layer3_weights_V_7_ce0),
    .q0(layer3_weights_V_7_q0)
);

nn_inference_layer3_weights_V_8 #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
layer3_weights_V_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer3_weights_V_8_address0),
    .ce0(layer3_weights_V_8_ce0),
    .q0(layer3_weights_V_8_q0)
);

nn_inference_layer3_weights_V_9 #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
layer3_weights_V_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer3_weights_V_9_address0),
    .ce0(layer3_weights_V_9_ce0),
    .q0(layer3_weights_V_9_q0)
);

nn_inference_layer3_weights_V_10 #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
layer3_weights_V_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer3_weights_V_10_address0),
    .ce0(layer3_weights_V_10_ce0),
    .q0(layer3_weights_V_10_q0)
);

nn_inference_layer3_weights_V_11 #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
layer3_weights_V_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer3_weights_V_11_address0),
    .ce0(layer3_weights_V_11_ce0),
    .q0(layer3_weights_V_11_q0)
);

nn_inference_layer3_weights_V_12 #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
layer3_weights_V_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer3_weights_V_12_address0),
    .ce0(layer3_weights_V_12_ce0),
    .q0(layer3_weights_V_12_q0)
);

nn_inference_layer3_weights_V_13 #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
layer3_weights_V_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer3_weights_V_13_address0),
    .ce0(layer3_weights_V_13_ce0),
    .q0(layer3_weights_V_13_q0)
);

nn_inference_layer3_weights_V_14 #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
layer3_weights_V_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer3_weights_V_14_address0),
    .ce0(layer3_weights_V_14_ce0),
    .q0(layer3_weights_V_14_q0)
);

nn_inference_layer3_weights_V_15 #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
layer3_weights_V_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer3_weights_V_15_address0),
    .ce0(layer3_weights_V_15_ce0),
    .q0(layer3_weights_V_15_q0)
);

nn_inference_layer3_weights_V_16 #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
layer3_weights_V_16_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer3_weights_V_16_address0),
    .ce0(layer3_weights_V_16_ce0),
    .q0(layer3_weights_V_16_q0)
);

nn_inference_layer3_weights_V_17 #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
layer3_weights_V_17_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer3_weights_V_17_address0),
    .ce0(layer3_weights_V_17_ce0),
    .q0(layer3_weights_V_17_q0)
);

nn_inference_layer3_weights_V_18 #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
layer3_weights_V_18_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer3_weights_V_18_address0),
    .ce0(layer3_weights_V_18_ce0),
    .q0(layer3_weights_V_18_q0)
);

nn_inference_layer3_weights_V_19 #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
layer3_weights_V_19_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer3_weights_V_19_address0),
    .ce0(layer3_weights_V_19_ce0),
    .q0(layer3_weights_V_19_q0)
);

nn_inference_layer3_weights_V_20 #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
layer3_weights_V_20_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer3_weights_V_20_address0),
    .ce0(layer3_weights_V_20_ce0),
    .q0(layer3_weights_V_20_q0)
);

nn_inference_layer3_weights_V_21 #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
layer3_weights_V_21_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer3_weights_V_21_address0),
    .ce0(layer3_weights_V_21_ce0),
    .q0(layer3_weights_V_21_q0)
);

nn_inference_layer3_weights_V_22 #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
layer3_weights_V_22_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer3_weights_V_22_address0),
    .ce0(layer3_weights_V_22_ce0),
    .q0(layer3_weights_V_22_q0)
);

nn_inference_layer3_weights_V_23 #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
layer3_weights_V_23_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer3_weights_V_23_address0),
    .ce0(layer3_weights_V_23_ce0),
    .q0(layer3_weights_V_23_q0)
);

nn_inference_layer3_weights_V_24 #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
layer3_weights_V_24_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer3_weights_V_24_address0),
    .ce0(layer3_weights_V_24_ce0),
    .q0(layer3_weights_V_24_q0)
);

nn_inference_layer3_weights_V_25 #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
layer3_weights_V_25_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer3_weights_V_25_address0),
    .ce0(layer3_weights_V_25_ce0),
    .q0(layer3_weights_V_25_q0)
);

nn_inference_layer3_weights_V_26 #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
layer3_weights_V_26_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer3_weights_V_26_address0),
    .ce0(layer3_weights_V_26_ce0),
    .q0(layer3_weights_V_26_q0)
);

nn_inference_layer3_weights_V_27 #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
layer3_weights_V_27_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer3_weights_V_27_address0),
    .ce0(layer3_weights_V_27_ce0),
    .q0(layer3_weights_V_27_q0)
);

nn_inference_layer3_weights_V_28 #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
layer3_weights_V_28_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer3_weights_V_28_address0),
    .ce0(layer3_weights_V_28_ce0),
    .q0(layer3_weights_V_28_q0)
);

nn_inference_layer3_weights_V_29 #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
layer3_weights_V_29_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer3_weights_V_29_address0),
    .ce0(layer3_weights_V_29_ce0),
    .q0(layer3_weights_V_29_q0)
);

nn_inference_layer3_weights_V_30 #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
layer3_weights_V_30_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer3_weights_V_30_address0),
    .ce0(layer3_weights_V_30_ce0),
    .q0(layer3_weights_V_30_q0)
);

nn_inference_layer3_weights_V_31 #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
layer3_weights_V_31_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer3_weights_V_31_address0),
    .ce0(layer3_weights_V_31_ce0),
    .q0(layer3_weights_V_31_q0)
);

nn_inference_fp_input_img_V #(
    .DataWidth( 32 ),
    .AddressRange( 768 ),
    .AddressWidth( 10 ))
fp_input_img_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fp_input_img_V_address0),
    .ce0(fp_input_img_V_ce0),
    .we0(fp_input_img_V_we0),
    .d0(fp_input_img_V_d0),
    .q0(fp_input_img_V_q0)
);

nn_inference_temp_output_0_V #(
    .DataWidth( 32 ),
    .AddressRange( 80 ),
    .AddressWidth( 7 ))
temp_output_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(temp_output_0_V_address0),
    .ce0(temp_output_0_V_ce0),
    .we0(temp_output_0_V_we0),
    .d0(temp_output_0_V_d0),
    .address1(temp_output_0_V_address1),
    .ce1(temp_output_0_V_ce1),
    .q1(temp_output_0_V_q1)
);

nn_inference_temp_output2_0_V #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
temp_output2_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(temp_output2_0_V_address0),
    .ce0(temp_output2_0_V_ce0),
    .we0(temp_output2_0_V_we0),
    .d0(temp_output2_0_V_d0),
    .q0(temp_output2_0_V_q0),
    .address1(temp_output2_0_V_address1),
    .ce1(temp_output2_0_V_ce1),
    .q1(temp_output2_0_V_q1)
);

nn_inference_temp_output3_0_V #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
temp_output3_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(temp_output3_0_V_address0),
    .ce0(temp_output3_0_V_ce0),
    .we0(temp_output3_0_V_we0),
    .d0(temp_output3_0_V_d0),
    .q0(temp_output3_0_V_q0),
    .address1(temp_output3_0_V_address1),
    .ce1(temp_output3_0_V_ce1),
    .q1(temp_output3_0_V_q1)
);

nn_inference_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1591_p0),
    .ce(1'b1),
    .dout(grp_fu_1591_p1)
);

nn_inference_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1594_p0),
    .din1(64'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1594_p2)
);

nn_inference_mul_7s_32s_39_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 39 ))
mul_7s_32s_39_2_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(weights_layer1_weights_V_load_reg_5243),
    .din1(r_V_reg_5238),
    .ce(1'b1),
    .dout(grp_fu_1990_p2)
);

nn_inference_mul_8s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_8s_32s_40_2_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(weights_layer2_weights_V_load_reg_5432),
    .din1(reg_1599),
    .ce(1'b1),
    .dout(grp_fu_2441_p2)
);

nn_inference_mul_8s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_8s_32s_40_2_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer3_weights_V_0_load_reg_6093),
    .din1(grp_fu_2925_p1),
    .ce(1'b1),
    .dout(grp_fu_2925_p2)
);

nn_inference_mul_8s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_8s_32s_40_2_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer3_weights_V_1_load_reg_6098),
    .din1(grp_fu_2933_p1),
    .ce(1'b1),
    .dout(grp_fu_2933_p2)
);

nn_inference_mul_8s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_8s_32s_40_2_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer3_weights_V_2_load_reg_6103),
    .din1(grp_fu_2941_p1),
    .ce(1'b1),
    .dout(grp_fu_2941_p2)
);

nn_inference_mul_8s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_8s_32s_40_2_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer3_weights_V_3_load_reg_6133),
    .din1(grp_fu_2959_p1),
    .ce(1'b1),
    .dout(grp_fu_2959_p2)
);

nn_inference_mul_8s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_8s_32s_40_2_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer3_weights_V_4_load_reg_6138),
    .din1(grp_fu_2967_p1),
    .ce(1'b1),
    .dout(grp_fu_2967_p2)
);

nn_inference_mul_8s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_8s_32s_40_2_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer3_weights_V_5_load_reg_6178),
    .din1(grp_fu_3020_p1),
    .ce(1'b1),
    .dout(grp_fu_3020_p2)
);

nn_inference_mul_8s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_8s_32s_40_2_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer3_weights_V_6_load_reg_6183),
    .din1(grp_fu_3028_p1),
    .ce(1'b1),
    .dout(grp_fu_3028_p2)
);

nn_inference_mul_8s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_8s_32s_40_2_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer3_weights_V_7_load_reg_6223),
    .din1(grp_fu_3081_p1),
    .ce(1'b1),
    .dout(grp_fu_3081_p2)
);

nn_inference_mul_8s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_8s_32s_40_2_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer3_weights_V_8_load_reg_6228),
    .din1(grp_fu_3089_p1),
    .ce(1'b1),
    .dout(grp_fu_3089_p2)
);

nn_inference_mul_8s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_8s_32s_40_2_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer3_weights_V_9_load_reg_6268),
    .din1(grp_fu_3142_p1),
    .ce(1'b1),
    .dout(grp_fu_3142_p2)
);

nn_inference_mul_8s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_8s_32s_40_2_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer3_weights_V_10_load_reg_6273),
    .din1(grp_fu_3150_p1),
    .ce(1'b1),
    .dout(grp_fu_3150_p2)
);

nn_inference_mul_8s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_8s_32s_40_2_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer3_weights_V_11_load_reg_6313),
    .din1(grp_fu_3203_p1),
    .ce(1'b1),
    .dout(grp_fu_3203_p2)
);

nn_inference_mul_8s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_8s_32s_40_2_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer3_weights_V_12_load_reg_6318),
    .din1(grp_fu_3211_p1),
    .ce(1'b1),
    .dout(grp_fu_3211_p2)
);

nn_inference_mul_8s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_8s_32s_40_2_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer3_weights_V_13_load_reg_6358),
    .din1(grp_fu_3264_p1),
    .ce(1'b1),
    .dout(grp_fu_3264_p2)
);

nn_inference_mul_8s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_8s_32s_40_2_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer3_weights_V_14_load_reg_6363),
    .din1(grp_fu_3272_p1),
    .ce(1'b1),
    .dout(grp_fu_3272_p2)
);

nn_inference_mul_8s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_8s_32s_40_2_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer3_weights_V_15_load_reg_6403),
    .din1(grp_fu_3325_p1),
    .ce(1'b1),
    .dout(grp_fu_3325_p2)
);

nn_inference_mul_8s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_8s_32s_40_2_1_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer3_weights_V_16_load_reg_6408),
    .din1(grp_fu_3333_p1),
    .ce(1'b1),
    .dout(grp_fu_3333_p2)
);

nn_inference_mul_8s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_8s_32s_40_2_1_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer3_weights_V_17_load_reg_6448),
    .din1(grp_fu_3386_p1),
    .ce(1'b1),
    .dout(grp_fu_3386_p2)
);

nn_inference_mul_8s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_8s_32s_40_2_1_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer3_weights_V_18_load_reg_6453),
    .din1(grp_fu_3394_p1),
    .ce(1'b1),
    .dout(grp_fu_3394_p2)
);

nn_inference_mul_8s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_8s_32s_40_2_1_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer3_weights_V_19_load_reg_6493),
    .din1(grp_fu_3447_p1),
    .ce(1'b1),
    .dout(grp_fu_3447_p2)
);

nn_inference_mul_8s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_8s_32s_40_2_1_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer3_weights_V_20_load_reg_6498),
    .din1(grp_fu_3455_p1),
    .ce(1'b1),
    .dout(grp_fu_3455_p2)
);

nn_inference_mul_8s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_8s_32s_40_2_1_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer3_weights_V_21_load_reg_6538),
    .din1(grp_fu_3508_p1),
    .ce(1'b1),
    .dout(grp_fu_3508_p2)
);

nn_inference_mul_8s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_8s_32s_40_2_1_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer3_weights_V_22_load_reg_6543),
    .din1(grp_fu_3516_p1),
    .ce(1'b1),
    .dout(grp_fu_3516_p2)
);

nn_inference_mul_8s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_8s_32s_40_2_1_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer3_weights_V_23_load_reg_6583),
    .din1(grp_fu_3569_p1),
    .ce(1'b1),
    .dout(grp_fu_3569_p2)
);

nn_inference_mul_8s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_8s_32s_40_2_1_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer3_weights_V_24_load_reg_6588),
    .din1(grp_fu_3577_p1),
    .ce(1'b1),
    .dout(grp_fu_3577_p2)
);

nn_inference_mul_8s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_8s_32s_40_2_1_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer3_weights_V_25_load_reg_6628),
    .din1(grp_fu_3630_p1),
    .ce(1'b1),
    .dout(grp_fu_3630_p2)
);

nn_inference_mul_8s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_8s_32s_40_2_1_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer3_weights_V_26_load_reg_6633),
    .din1(grp_fu_3638_p1),
    .ce(1'b1),
    .dout(grp_fu_3638_p2)
);

nn_inference_mul_8s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_8s_32s_40_2_1_U32(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer3_weights_V_27_load_reg_6673),
    .din1(grp_fu_3691_p1),
    .ce(1'b1),
    .dout(grp_fu_3691_p2)
);

nn_inference_mul_8s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_8s_32s_40_2_1_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer3_weights_V_28_load_reg_6678),
    .din1(grp_fu_3699_p1),
    .ce(1'b1),
    .dout(grp_fu_3699_p2)
);

nn_inference_mul_8s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_8s_32s_40_2_1_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer3_weights_V_29_load_reg_6718),
    .din1(grp_fu_3752_p1),
    .ce(1'b1),
    .dout(grp_fu_3752_p2)
);

nn_inference_mul_8s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_8s_32s_40_2_1_U35(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer3_weights_V_30_load_reg_6723),
    .din1(grp_fu_3760_p1),
    .ce(1'b1),
    .dout(grp_fu_3760_p2)
);

nn_inference_mul_8s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_8s_32s_40_2_1_U36(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(layer3_weights_V_31_load_reg_6758),
    .din1(grp_fu_3813_p1),
    .ce(1'b1),
    .dout(grp_fu_3813_p2)
);

nn_inference_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U37(
    .din0(32'd45),
    .din1(32'd4294967126),
    .din2(32'd48),
    .din3(ap_phi_mux_j_3_phi_fu_1549_p4),
    .dout(tmp_5_fu_4276_p5)
);

nn_inference_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U38(
    .din0(32'd77),
    .din1(32'd4294967195),
    .din2(32'd19),
    .din3(ap_phi_mux_j_3_phi_fu_1549_p4),
    .dout(tmp_6_fu_4288_p5)
);

nn_inference_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U39(
    .din0(32'd4294967179),
    .din1(32'd4294967289),
    .din2(32'd4294967272),
    .din3(ap_phi_mux_j_3_phi_fu_1549_p4),
    .dout(tmp_7_fu_4300_p5)
);

nn_inference_mul_32s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_32s_32s_40_2_1_U40(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_5_reg_7159),
    .din1(grp_fu_4315_p1),
    .ce(1'b1),
    .dout(grp_fu_4315_p2)
);

nn_inference_mul_32s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_32s_32s_40_2_1_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_6_reg_7164),
    .din1(grp_fu_4323_p1),
    .ce(1'b1),
    .dout(grp_fu_4323_p2)
);

nn_inference_mul_32s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_32s_32s_40_2_1_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_7_reg_7169),
    .din1(grp_fu_4331_p1),
    .ce(1'b1),
    .dout(grp_fu_4331_p2)
);

nn_inference_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U43(
    .din0(32'd64),
    .din1(32'd4294967243),
    .din2(32'd55),
    .din3(j_3_reg_1545),
    .dout(tmp_8_fu_4336_p5)
);

nn_inference_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U44(
    .din0(32'd4294967167),
    .din1(32'd36),
    .din2(32'd60),
    .din3(j_3_reg_1545),
    .dout(tmp_9_fu_4348_p5)
);

nn_inference_mul_32s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_32s_32s_40_2_1_U45(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_8_reg_7189),
    .din1(grp_fu_4373_p1),
    .ce(1'b1),
    .dout(grp_fu_4373_p2)
);

nn_inference_mul_32s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_32s_32s_40_2_1_U46(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_9_reg_7194),
    .din1(grp_fu_4381_p1),
    .ce(1'b1),
    .dout(grp_fu_4381_p2)
);

nn_inference_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U47(
    .din0(32'd4294967199),
    .din1(32'd141),
    .din2(32'd22),
    .din3(j_3_reg_1545_pp7_iter1_reg),
    .dout(tmp_10_fu_4386_p5)
);

nn_inference_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U48(
    .din0(32'd4294967181),
    .din1(32'd46),
    .din2(32'd68),
    .din3(j_3_reg_1545_pp7_iter1_reg),
    .dout(tmp_11_fu_4398_p5)
);

nn_inference_mul_32s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_32s_32s_40_2_1_U49(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_10_reg_7224),
    .din1(grp_fu_4458_p1),
    .ce(1'b1),
    .dout(grp_fu_4458_p2)
);

nn_inference_mul_32s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_32s_32s_40_2_1_U50(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_11_reg_7229),
    .din1(grp_fu_4466_p1),
    .ce(1'b1),
    .dout(grp_fu_4466_p2)
);

nn_inference_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U51(
    .din0(32'd4294967278),
    .din1(32'd55),
    .din2(32'd17),
    .din3(j_3_reg_1545_pp7_iter2_reg),
    .dout(tmp_12_fu_4471_p5)
);

nn_inference_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U52(
    .din0(32'd4294967246),
    .din1(32'd94),
    .din2(32'd4294967282),
    .din3(j_3_reg_1545_pp7_iter2_reg),
    .dout(tmp_13_fu_4483_p5)
);

nn_inference_mul_32s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_32s_32s_40_2_1_U53(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_12_reg_7259),
    .din1(grp_fu_4543_p1),
    .ce(1'b1),
    .dout(grp_fu_4543_p2)
);

nn_inference_mul_32s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_32s_32s_40_2_1_U54(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_13_reg_7264),
    .din1(grp_fu_4551_p1),
    .ce(1'b1),
    .dout(grp_fu_4551_p2)
);

nn_inference_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U55(
    .din0(32'd69),
    .din1(32'd4294967257),
    .din2(32'd4294967157),
    .din3(j_3_reg_1545_pp7_iter3_reg),
    .dout(tmp_14_fu_4556_p5)
);

nn_inference_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U56(
    .din0(32'd4294967168),
    .din1(32'd45),
    .din2(32'd4294967199),
    .din3(j_3_reg_1545_pp7_iter3_reg),
    .dout(tmp_15_fu_4568_p5)
);

nn_inference_mul_32s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_32s_32s_40_2_1_U57(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_14_reg_7294),
    .din1(grp_fu_4628_p1),
    .ce(1'b1),
    .dout(grp_fu_4628_p2)
);

nn_inference_mul_32s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_32s_32s_40_2_1_U58(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_15_reg_7299),
    .din1(grp_fu_4636_p1),
    .ce(1'b1),
    .dout(grp_fu_4636_p2)
);

nn_inference_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U59(
    .din0(32'd41),
    .din1(32'd4294967257),
    .din2(32'd2),
    .din3(j_3_reg_1545_pp7_iter4_reg),
    .dout(tmp_16_fu_4641_p5)
);

nn_inference_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U60(
    .din0(32'd4294967263),
    .din1(32'd49),
    .din2(32'd96),
    .din3(j_3_reg_1545_pp7_iter4_reg),
    .dout(tmp_17_fu_4653_p5)
);

nn_inference_mul_32s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_32s_32s_40_2_1_U61(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_16_reg_7329),
    .din1(grp_fu_4713_p1),
    .ce(1'b1),
    .dout(grp_fu_4713_p2)
);

nn_inference_mul_32s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_32s_32s_40_2_1_U62(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_17_reg_7334),
    .din1(grp_fu_4721_p1),
    .ce(1'b1),
    .dout(grp_fu_4721_p2)
);

nn_inference_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U63(
    .din0(32'd4294967185),
    .din1(32'd4294967171),
    .din2(32'd97),
    .din3(j_3_reg_1545_pp7_iter5_reg),
    .dout(tmp_18_fu_4726_p5)
);

nn_inference_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U64(
    .din0(32'd7),
    .din1(32'd135),
    .din2(32'd4294967240),
    .din3(j_3_reg_1545_pp7_iter5_reg),
    .dout(tmp_19_fu_4738_p5)
);

nn_inference_mul_32s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_32s_32s_40_2_1_U65(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_18_reg_7364),
    .din1(grp_fu_4798_p1),
    .ce(1'b1),
    .dout(grp_fu_4798_p2)
);

nn_inference_mul_32s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_32s_32s_40_2_1_U66(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_19_reg_7369),
    .din1(grp_fu_4806_p1),
    .ce(1'b1),
    .dout(grp_fu_4806_p2)
);

nn_inference_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U67(
    .din0(32'd4294967286),
    .din1(32'd139),
    .din2(32'd4294967291),
    .din3(j_3_reg_1545_pp7_iter6_reg),
    .dout(tmp_20_fu_4811_p5)
);

nn_inference_mul_32s_32s_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 40 ))
mul_32s_32s_40_2_1_U68(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_20_reg_7399),
    .din1(grp_fu_4871_p1),
    .ce(1'b1),
    .dout(grp_fu_4871_p2)
);

nn_inference_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U69(
    .din0(temp_output4_0_2_V_fu_430),
    .din1(temp_output4_0_2_V_1_fu_434),
    .din2(temp_output4_0_2_V_2_fu_438),
    .din3(i_4_reg_1557),
    .dout(tmp_21_fu_4979_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter7 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state11))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state11)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state11);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp1_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state18))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state18)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state18);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter7 <= ap_enable_reg_pp2_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter8 <= ap_enable_reg_pp2_iter7;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_enable_reg_pp2_iter8 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_condition_pp3_exit_iter0_state28))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state27)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state28)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state28);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter5 <= ap_enable_reg_pp3_iter4;
        end else if ((1'b1 == ap_CS_fsm_state27)) begin
            ap_enable_reg_pp3_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_condition_pp4_exit_iter0_state35))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state34)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp4_exit_iter0_state35)) begin
                ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state35);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter3 <= ap_enable_reg_pp4_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter4 <= ap_enable_reg_pp4_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter5 <= ap_enable_reg_pp4_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter6 <= ap_enable_reg_pp4_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter7 <= ap_enable_reg_pp4_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter8 <= ap_enable_reg_pp4_iter7;
        end else if ((1'b1 == ap_CS_fsm_state34)) begin
            ap_enable_reg_pp4_iter8 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp5_stage0_subdone) & (1'b1 == ap_condition_pp5_exit_iter0_state61) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state60)) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp5_exit_iter0_state61)) begin
                ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state61);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter10 <= ap_enable_reg_pp5_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter11 <= ap_enable_reg_pp5_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter12 <= ap_enable_reg_pp5_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter13 <= ap_enable_reg_pp5_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter14 <= ap_enable_reg_pp5_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter15 <= ap_enable_reg_pp5_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter16 <= ap_enable_reg_pp5_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter17 <= ap_enable_reg_pp5_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter18 <= ap_enable_reg_pp5_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter19 <= ap_enable_reg_pp5_iter18;
        end else if ((1'b1 == ap_CS_fsm_state60)) begin
            ap_enable_reg_pp5_iter19 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter3 <= ap_enable_reg_pp5_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter4 <= ap_enable_reg_pp5_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter5 <= ap_enable_reg_pp5_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter6 <= ap_enable_reg_pp5_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter7 <= ap_enable_reg_pp5_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter8 <= ap_enable_reg_pp5_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter9 <= ap_enable_reg_pp5_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp6_stage0_subdone) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b1 == ap_condition_pp6_exit_iter0_state82))) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state81)) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp6_exit_iter0_state82)) begin
                ap_enable_reg_pp6_iter1 <= (1'b1 ^ ap_condition_pp6_exit_iter0_state82);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter2 <= ap_enable_reg_pp6_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter3 <= ap_enable_reg_pp6_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter4 <= ap_enable_reg_pp6_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter5 <= ap_enable_reg_pp6_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter6 <= ap_enable_reg_pp6_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter7 <= ap_enable_reg_pp6_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter8 <= ap_enable_reg_pp6_iter7;
        end else if ((1'b1 == ap_CS_fsm_state81)) begin
            ap_enable_reg_pp6_iter8 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp7_stage0_subdone) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b1 == ap_condition_pp7_exit_iter0_state100))) begin
            ap_enable_reg_pp7_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state99)) begin
            ap_enable_reg_pp7_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp7_exit_iter0_state100)) begin
                ap_enable_reg_pp7_iter1 <= (1'b1 ^ ap_condition_pp7_exit_iter0_state100);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp7_iter1 <= ap_enable_reg_pp7_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter10 <= ap_enable_reg_pp7_iter9;
        end else if ((1'b1 == ap_CS_fsm_state99)) begin
            ap_enable_reg_pp7_iter10 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter2 <= ap_enable_reg_pp7_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter3 <= ap_enable_reg_pp7_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter4 <= ap_enable_reg_pp7_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter5 <= ap_enable_reg_pp7_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter6 <= ap_enable_reg_pp7_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter7 <= ap_enable_reg_pp7_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter8 <= ap_enable_reg_pp7_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter9 <= ap_enable_reg_pp7_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        i_1_reg_1456 <= 7'd0;
    end else if (((icmp_ln92_fu_2041_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i_1_reg_1456 <= add_ln92_fu_2035_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        i_2_reg_1512 <= 6'd0;
    end else if (((icmp_ln107_fu_2488_p2 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        i_2_reg_1512 <= add_ln107_fu_2482_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        i_3_reg_1534 <= 5'd0;
    end else if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln120_fu_3892_p2 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1))) begin
        i_3_reg_1534 <= add_ln120_fu_3886_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state111)) begin
        i_4_reg_1557 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state112) & (icmp_ln138_fu_4964_p2 == 1'd0))) begin
        i_4_reg_1557 <= add_ln138_fu_4958_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_1400 <= 10'd0;
    end else if (((icmp_ln5_fu_1619_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_1400 <= add_ln5_fu_1613_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        indvar_flatten10_reg_1467 <= 12'd0;
    end else if (((icmp_ln40_fu_2363_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        indvar_flatten10_reg_1467 <= add_ln40_1_fu_2357_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_fu_1896_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        indvar_flatten_reg_1411 <= add_ln21_1_fu_1890_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        indvar_flatten_reg_1411 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        j_1_reg_1478 <= 6'd0;
    end else if (((icmp_ln40_reg_5391 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        j_1_reg_1478 <= select_ln40_1_reg_5406;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        j_2_reg_1523 <= 5'd0;
    end else if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln57_fu_2909_p2 == 1'd0) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        j_2_reg_1523 <= add_ln57_fu_2903_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (icmp_ln74_reg_7155 == 1'd0))) begin
        j_3_reg_1545 <= add_ln74_reg_7150;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        j_3_reg_1545 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_reg_5196 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        j_reg_1422 <= select_ln21_1_reg_5212;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        j_reg_1422 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        k_1_reg_1489 <= 7'd0;
    end else if (((icmp_ln40_reg_5391 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        k_1_reg_1489 <= add_ln44_reg_5413;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_reg_5196 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        k_reg_1433 <= add_ln25_reg_5219;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        k_reg_1433 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state111)) begin
        max_idx_V_reg_1568 <= 32'd4294967040;
    end else if (((1'b1 == ap_CS_fsm_state112) & (icmp_ln138_fu_4964_p2 == 1'd0))) begin
        max_idx_V_reg_1568 <= max_idx_V_1_fu_5017_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state111)) begin
        max_val_V_reg_1580 <= 32'd4294935040;
    end else if (((1'b1 == ap_CS_fsm_state112) & (icmp_ln138_fu_4964_p2 == 1'd0))) begin
        max_val_V_reg_1580 <= max_val_V_1_fu_4997_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        reg_1603 <= temp_output2_0_V_q0;
    end else if (((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        reg_1603 <= temp_output2_0_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        reg_1608 <= temp_output3_0_V_q0;
    end else if (((ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        reg_1608 <= temp_output3_0_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln21_reg_5196_pp1_iter4_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        sum_V_4_reg_1444 <= {{ret_V_fu_2018_p2[39:8]}};
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sum_V_4_reg_1444 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        sum_V_5_reg_1500 <= 32'd0;
    end else if (((ap_enable_reg_pp3_iter5 == 1'b1) & (icmp_ln40_reg_5391_pp3_iter4_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        sum_V_5_reg_1500 <= {{ret_V_1_fu_2466_p2[39:8]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state91)) begin
        temp_output4_0_2_V_fu_430 <= 32'd256;
    end else if (((j_3_reg_1545_pp7_iter9_reg == 2'd0) & (1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter10 == 1'b1))) begin
        temp_output4_0_2_V_fu_430 <= {{add_ln1192_46_fu_4928_p2[39:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_fu_1896_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        add_ln25_reg_5219 <= add_ln25_fu_1930_p2;
        select_ln21_1_reg_5212 <= select_ln21_1_fu_1922_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln40_fu_2363_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        add_ln44_reg_5413 <= add_ln44_fu_2397_p2;
        select_ln40_1_reg_5406 <= select_ln40_1_fu_2389_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter0 == 1'b1))) begin
        add_ln74_reg_7150 <= add_ln74_fu_4264_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln885_1_reg_5472_pp4_iter6_reg == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        and_ln1506_1_reg_5571 <= and_ln1506_1_fu_2798_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (icmp_ln885_2_reg_6808_pp6_iter6_reg == 1'd0))) begin
        and_ln1506_2_reg_6907 <= and_ln1506_2_fu_4202_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln885_reg_5283_pp2_iter6_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        and_ln1506_reg_5382 <= and_ln1506_fu_2351_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln5_reg_5084_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln581_reg_5154 <= and_ln581_fu_1766_p2;
        icmp_ln582_reg_5143 <= icmp_ln582_fu_1729_p2;
        man_V_2_reg_5132 <= man_V_2_fu_1690_p3;
        or_ln571_reg_5160 <= or_ln571_fu_1790_p2;
        sh_amt_reg_5137 <= sh_amt_fu_1721_p3;
        trunc_ln583_reg_5148 <= trunc_ln583_fu_1735_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        and_ln581_reg_5154_pp0_iter5_reg <= and_ln581_reg_5154;
        i_cast_reg_5088_pp0_iter2_reg[9 : 0] <= i_cast_reg_5088_pp0_iter1_reg[9 : 0];
        i_cast_reg_5088_pp0_iter3_reg[9 : 0] <= i_cast_reg_5088_pp0_iter2_reg[9 : 0];
        i_cast_reg_5088_pp0_iter4_reg[9 : 0] <= i_cast_reg_5088_pp0_iter3_reg[9 : 0];
        i_cast_reg_5088_pp0_iter5_reg[9 : 0] <= i_cast_reg_5088_pp0_iter4_reg[9 : 0];
        i_cast_reg_5088_pp0_iter6_reg[9 : 0] <= i_cast_reg_5088_pp0_iter5_reg[9 : 0];
        icmp_ln571_reg_5124_pp0_iter4_reg <= icmp_ln571_reg_5124;
        icmp_ln571_reg_5124_pp0_iter5_reg <= icmp_ln571_reg_5124_pp0_iter4_reg;
        icmp_ln582_reg_5143_pp0_iter5_reg <= icmp_ln582_reg_5143;
        icmp_ln5_reg_5084_pp0_iter2_reg <= icmp_ln5_reg_5084_pp0_iter1_reg;
        icmp_ln5_reg_5084_pp0_iter3_reg <= icmp_ln5_reg_5084_pp0_iter2_reg;
        icmp_ln5_reg_5084_pp0_iter4_reg <= icmp_ln5_reg_5084_pp0_iter3_reg;
        icmp_ln5_reg_5084_pp0_iter5_reg <= icmp_ln5_reg_5084_pp0_iter4_reg;
        icmp_ln5_reg_5084_pp0_iter6_reg <= icmp_ln5_reg_5084_pp0_iter5_reg;
        input_img_load_reg_5098_pp0_iter2_reg <= input_img_load_reg_5098;
        input_img_load_reg_5098_pp0_iter3_reg <= input_img_load_reg_5098_pp0_iter2_reg;
        input_img_load_reg_5098_pp0_iter4_reg <= input_img_load_reg_5098_pp0_iter3_reg;
        or_ln571_reg_5160_pp0_iter5_reg <= or_ln571_reg_5160;
        trunc_ln583_reg_5148_pp0_iter5_reg <= trunc_ln583_reg_5148;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln5_reg_5084_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exp_tmp_reg_5114 <= {{ireg_fu_1634_p1[62:52]}};
        icmp_ln571_reg_5124 <= icmp_ln571_fu_1664_p2;
        p_Result_13_reg_5109 <= ireg_fu_1634_p1[32'd63];
        trunc_ln565_reg_5119 <= trunc_ln565_fu_1660_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln5_fu_1619_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_cast_reg_5088[9 : 0] <= i_cast_fu_1625_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_cast_reg_5088_pp0_iter1_reg[9 : 0] <= i_cast_reg_5088[9 : 0];
        icmp_ln5_reg_5084 <= icmp_ln5_fu_1619_p2;
        icmp_ln5_reg_5084_pp0_iter1_reg <= icmp_ln5_reg_5084;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln885_reg_5283_pp2_iter4_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        icmp_ln1506_1_reg_5372 <= icmp_ln1506_1_fu_2338_p2;
        icmp_ln1506_reg_5367 <= icmp_ln1506_fu_2332_p2;
        p_Result_18_reg_5362 <= p_Result_18_fu_2320_p5;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        icmp_ln1506_1_reg_5372_pp2_iter6_reg <= icmp_ln1506_1_reg_5372;
        icmp_ln1506_reg_5367_pp2_iter6_reg <= icmp_ln1506_reg_5367;
        icmp_ln885_reg_5283_pp2_iter2_reg <= icmp_ln885_reg_5283;
        icmp_ln885_reg_5283_pp2_iter3_reg <= icmp_ln885_reg_5283_pp2_iter2_reg;
        icmp_ln885_reg_5283_pp2_iter4_reg <= icmp_ln885_reg_5283_pp2_iter3_reg;
        icmp_ln885_reg_5283_pp2_iter5_reg <= icmp_ln885_reg_5283_pp2_iter4_reg;
        icmp_ln885_reg_5283_pp2_iter6_reg <= icmp_ln885_reg_5283_pp2_iter5_reg;
        icmp_ln885_reg_5283_pp2_iter7_reg <= icmp_ln885_reg_5283_pp2_iter6_reg;
        p_Result_15_reg_5292_pp2_iter3_reg <= p_Result_15_reg_5292;
        p_Result_15_reg_5292_pp2_iter4_reg <= p_Result_15_reg_5292_pp2_iter3_reg;
        sub_ln894_reg_5303_pp2_iter3_reg <= sub_ln894_reg_5303;
        temp_output_0_V_addr_1_reg_5277_pp2_iter2_reg <= temp_output_0_V_addr_1_reg_5277_pp2_iter1_reg;
        temp_output_0_V_addr_1_reg_5277_pp2_iter3_reg <= temp_output_0_V_addr_1_reg_5277_pp2_iter2_reg;
        temp_output_0_V_addr_1_reg_5277_pp2_iter4_reg <= temp_output_0_V_addr_1_reg_5277_pp2_iter3_reg;
        temp_output_0_V_addr_1_reg_5277_pp2_iter5_reg <= temp_output_0_V_addr_1_reg_5277_pp2_iter4_reg;
        temp_output_0_V_addr_1_reg_5277_pp2_iter6_reg <= temp_output_0_V_addr_1_reg_5277_pp2_iter5_reg;
        temp_output_0_V_addr_1_reg_5277_pp2_iter7_reg <= temp_output_0_V_addr_1_reg_5277_pp2_iter6_reg;
        tmp_V_6_reg_5297_pp2_iter3_reg <= tmp_V_6_reg_5297;
        trunc_ln893_reg_5332_pp2_iter3_reg <= trunc_ln893_reg_5332;
        trunc_ln893_reg_5332_pp2_iter4_reg <= trunc_ln893_reg_5332_pp2_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln885_1_reg_5472_pp4_iter4_reg == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        icmp_ln1506_2_reg_5556 <= icmp_ln1506_2_fu_2779_p2;
        icmp_ln1506_3_reg_5561 <= icmp_ln1506_3_fu_2785_p2;
        p_Result_22_reg_5551 <= p_Result_22_fu_2767_p5;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp4_stage0_11001)) begin
        icmp_ln1506_2_reg_5556_pp4_iter6_reg <= icmp_ln1506_2_reg_5556;
        icmp_ln1506_3_reg_5561_pp4_iter6_reg <= icmp_ln1506_3_reg_5561;
        icmp_ln885_1_reg_5472_pp4_iter2_reg <= icmp_ln885_1_reg_5472;
        icmp_ln885_1_reg_5472_pp4_iter3_reg <= icmp_ln885_1_reg_5472_pp4_iter2_reg;
        icmp_ln885_1_reg_5472_pp4_iter4_reg <= icmp_ln885_1_reg_5472_pp4_iter3_reg;
        icmp_ln885_1_reg_5472_pp4_iter5_reg <= icmp_ln885_1_reg_5472_pp4_iter4_reg;
        icmp_ln885_1_reg_5472_pp4_iter6_reg <= icmp_ln885_1_reg_5472_pp4_iter5_reg;
        icmp_ln885_1_reg_5472_pp4_iter7_reg <= icmp_ln885_1_reg_5472_pp4_iter6_reg;
        p_Result_19_reg_5481_pp4_iter3_reg <= p_Result_19_reg_5481;
        p_Result_19_reg_5481_pp4_iter4_reg <= p_Result_19_reg_5481_pp4_iter3_reg;
        sub_ln894_1_reg_5492_pp4_iter3_reg <= sub_ln894_1_reg_5492;
        temp_output2_0_V_addr_1_reg_5466_pp4_iter2_reg <= temp_output2_0_V_addr_1_reg_5466_pp4_iter1_reg;
        temp_output2_0_V_addr_1_reg_5466_pp4_iter3_reg <= temp_output2_0_V_addr_1_reg_5466_pp4_iter2_reg;
        temp_output2_0_V_addr_1_reg_5466_pp4_iter4_reg <= temp_output2_0_V_addr_1_reg_5466_pp4_iter3_reg;
        temp_output2_0_V_addr_1_reg_5466_pp4_iter5_reg <= temp_output2_0_V_addr_1_reg_5466_pp4_iter4_reg;
        temp_output2_0_V_addr_1_reg_5466_pp4_iter6_reg <= temp_output2_0_V_addr_1_reg_5466_pp4_iter5_reg;
        temp_output2_0_V_addr_1_reg_5466_pp4_iter7_reg <= temp_output2_0_V_addr_1_reg_5466_pp4_iter6_reg;
        tmp_V_7_reg_5486_pp4_iter3_reg <= tmp_V_7_reg_5486;
        trunc_ln893_1_reg_5521_pp4_iter3_reg <= trunc_ln893_1_reg_5521;
        trunc_ln893_1_reg_5521_pp4_iter4_reg <= trunc_ln893_1_reg_5521_pp4_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (icmp_ln885_2_reg_6808_pp6_iter4_reg == 1'd0))) begin
        icmp_ln1506_4_reg_6892 <= icmp_ln1506_4_fu_4183_p2;
        icmp_ln1506_5_reg_6897 <= icmp_ln1506_5_fu_4189_p2;
        p_Result_26_reg_6887 <= p_Result_26_fu_4171_p5;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp6_stage0_11001)) begin
        icmp_ln1506_4_reg_6892_pp6_iter6_reg <= icmp_ln1506_4_reg_6892;
        icmp_ln1506_5_reg_6897_pp6_iter6_reg <= icmp_ln1506_5_reg_6897;
        icmp_ln885_2_reg_6808_pp6_iter2_reg <= icmp_ln885_2_reg_6808;
        icmp_ln885_2_reg_6808_pp6_iter3_reg <= icmp_ln885_2_reg_6808_pp6_iter2_reg;
        icmp_ln885_2_reg_6808_pp6_iter4_reg <= icmp_ln885_2_reg_6808_pp6_iter3_reg;
        icmp_ln885_2_reg_6808_pp6_iter5_reg <= icmp_ln885_2_reg_6808_pp6_iter4_reg;
        icmp_ln885_2_reg_6808_pp6_iter6_reg <= icmp_ln885_2_reg_6808_pp6_iter5_reg;
        icmp_ln885_2_reg_6808_pp6_iter7_reg <= icmp_ln885_2_reg_6808_pp6_iter6_reg;
        p_Result_23_reg_6817_pp6_iter3_reg <= p_Result_23_reg_6817;
        p_Result_23_reg_6817_pp6_iter4_reg <= p_Result_23_reg_6817_pp6_iter3_reg;
        sub_ln894_2_reg_6828_pp6_iter3_reg <= sub_ln894_2_reg_6828;
        temp_output3_0_V_addr_2_reg_6802_pp6_iter2_reg <= temp_output3_0_V_addr_2_reg_6802_pp6_iter1_reg;
        temp_output3_0_V_addr_2_reg_6802_pp6_iter3_reg <= temp_output3_0_V_addr_2_reg_6802_pp6_iter2_reg;
        temp_output3_0_V_addr_2_reg_6802_pp6_iter4_reg <= temp_output3_0_V_addr_2_reg_6802_pp6_iter3_reg;
        temp_output3_0_V_addr_2_reg_6802_pp6_iter5_reg <= temp_output3_0_V_addr_2_reg_6802_pp6_iter4_reg;
        temp_output3_0_V_addr_2_reg_6802_pp6_iter6_reg <= temp_output3_0_V_addr_2_reg_6802_pp6_iter5_reg;
        temp_output3_0_V_addr_2_reg_6802_pp6_iter7_reg <= temp_output3_0_V_addr_2_reg_6802_pp6_iter6_reg;
        tmp_V_8_reg_6822_pp6_iter3_reg <= tmp_V_8_reg_6822;
        trunc_ln893_2_reg_6857_pp6_iter3_reg <= trunc_ln893_2_reg_6857;
        trunc_ln893_2_reg_6857_pp6_iter4_reg <= trunc_ln893_2_reg_6857_pp6_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln21_reg_5196 <= icmp_ln21_fu_1896_p2;
        icmp_ln21_reg_5196_pp1_iter1_reg <= icmp_ln21_reg_5196;
        icmp_ln25_reg_5200_pp1_iter1_reg <= icmp_ln25_reg_5200;
        ifzero_reg_5224_pp1_iter1_reg <= ifzero_reg_5224;
        select_ln21_1_reg_5212_pp1_iter1_reg <= select_ln21_1_reg_5212;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        icmp_ln21_reg_5196_pp1_iter2_reg <= icmp_ln21_reg_5196_pp1_iter1_reg;
        icmp_ln21_reg_5196_pp1_iter3_reg <= icmp_ln21_reg_5196_pp1_iter2_reg;
        icmp_ln21_reg_5196_pp1_iter4_reg <= icmp_ln21_reg_5196_pp1_iter3_reg;
        icmp_ln25_reg_5200_pp1_iter2_reg <= icmp_ln25_reg_5200_pp1_iter1_reg;
        icmp_ln25_reg_5200_pp1_iter3_reg <= icmp_ln25_reg_5200_pp1_iter2_reg;
        icmp_ln25_reg_5200_pp1_iter4_reg <= icmp_ln25_reg_5200_pp1_iter3_reg;
        ifzero_reg_5224_pp1_iter2_reg <= ifzero_reg_5224_pp1_iter1_reg;
        ifzero_reg_5224_pp1_iter3_reg <= ifzero_reg_5224_pp1_iter2_reg;
        ifzero_reg_5224_pp1_iter4_reg <= ifzero_reg_5224_pp1_iter3_reg;
        select_ln21_1_reg_5212_pp1_iter2_reg <= select_ln21_1_reg_5212_pp1_iter1_reg;
        select_ln21_1_reg_5212_pp1_iter3_reg <= select_ln21_1_reg_5212_pp1_iter2_reg;
        select_ln21_1_reg_5212_pp1_iter4_reg <= select_ln21_1_reg_5212_pp1_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_fu_1896_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln25_reg_5200 <= icmp_ln25_fu_1908_p2;
        ifzero_reg_5224 <= ifzero_fu_1936_p2;
        select_ln21_reg_5205 <= select_ln21_fu_1914_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln40_reg_5391 <= icmp_ln40_fu_2363_p2;
        icmp_ln40_reg_5391_pp3_iter1_reg <= icmp_ln40_reg_5391;
        icmp_ln44_reg_5395_pp3_iter1_reg <= icmp_ln44_reg_5395;
        ifzero5_reg_5418_pp3_iter1_reg <= ifzero5_reg_5418;
        select_ln40_1_reg_5406_pp3_iter1_reg <= select_ln40_1_reg_5406;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp3_stage0_11001)) begin
        icmp_ln40_reg_5391_pp3_iter2_reg <= icmp_ln40_reg_5391_pp3_iter1_reg;
        icmp_ln40_reg_5391_pp3_iter3_reg <= icmp_ln40_reg_5391_pp3_iter2_reg;
        icmp_ln40_reg_5391_pp3_iter4_reg <= icmp_ln40_reg_5391_pp3_iter3_reg;
        icmp_ln44_reg_5395_pp3_iter2_reg <= icmp_ln44_reg_5395_pp3_iter1_reg;
        icmp_ln44_reg_5395_pp3_iter3_reg <= icmp_ln44_reg_5395_pp3_iter2_reg;
        icmp_ln44_reg_5395_pp3_iter4_reg <= icmp_ln44_reg_5395_pp3_iter3_reg;
        ifzero5_reg_5418_pp3_iter2_reg <= ifzero5_reg_5418_pp3_iter1_reg;
        ifzero5_reg_5418_pp3_iter3_reg <= ifzero5_reg_5418_pp3_iter2_reg;
        ifzero5_reg_5418_pp3_iter4_reg <= ifzero5_reg_5418_pp3_iter3_reg;
        select_ln40_1_reg_5406_pp3_iter2_reg <= select_ln40_1_reg_5406_pp3_iter1_reg;
        select_ln40_1_reg_5406_pp3_iter3_reg <= select_ln40_1_reg_5406_pp3_iter2_reg;
        select_ln40_1_reg_5406_pp3_iter4_reg <= select_ln40_1_reg_5406_pp3_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln40_fu_2363_p2 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln44_reg_5395 <= icmp_ln44_fu_2375_p2;
        ifzero5_reg_5418 <= ifzero5_fu_2403_p2;
        select_ln40_reg_5400 <= select_ln40_fu_2381_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        icmp_ln57_reg_6040 <= icmp_ln57_fu_2909_p2;
        icmp_ln57_reg_6040_pp5_iter1_reg <= icmp_ln57_reg_6040;
        j_2_cast_reg_6044_pp5_iter1_reg[4 : 0] <= j_2_cast_reg_6044[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp5_stage0_11001)) begin
        icmp_ln57_reg_6040_pp5_iter10_reg <= icmp_ln57_reg_6040_pp5_iter9_reg;
        icmp_ln57_reg_6040_pp5_iter11_reg <= icmp_ln57_reg_6040_pp5_iter10_reg;
        icmp_ln57_reg_6040_pp5_iter12_reg <= icmp_ln57_reg_6040_pp5_iter11_reg;
        icmp_ln57_reg_6040_pp5_iter13_reg <= icmp_ln57_reg_6040_pp5_iter12_reg;
        icmp_ln57_reg_6040_pp5_iter14_reg <= icmp_ln57_reg_6040_pp5_iter13_reg;
        icmp_ln57_reg_6040_pp5_iter15_reg <= icmp_ln57_reg_6040_pp5_iter14_reg;
        icmp_ln57_reg_6040_pp5_iter16_reg <= icmp_ln57_reg_6040_pp5_iter15_reg;
        icmp_ln57_reg_6040_pp5_iter17_reg <= icmp_ln57_reg_6040_pp5_iter16_reg;
        icmp_ln57_reg_6040_pp5_iter18_reg <= icmp_ln57_reg_6040_pp5_iter17_reg;
        icmp_ln57_reg_6040_pp5_iter2_reg <= icmp_ln57_reg_6040_pp5_iter1_reg;
        icmp_ln57_reg_6040_pp5_iter3_reg <= icmp_ln57_reg_6040_pp5_iter2_reg;
        icmp_ln57_reg_6040_pp5_iter4_reg <= icmp_ln57_reg_6040_pp5_iter3_reg;
        icmp_ln57_reg_6040_pp5_iter5_reg <= icmp_ln57_reg_6040_pp5_iter4_reg;
        icmp_ln57_reg_6040_pp5_iter6_reg <= icmp_ln57_reg_6040_pp5_iter5_reg;
        icmp_ln57_reg_6040_pp5_iter7_reg <= icmp_ln57_reg_6040_pp5_iter6_reg;
        icmp_ln57_reg_6040_pp5_iter8_reg <= icmp_ln57_reg_6040_pp5_iter7_reg;
        icmp_ln57_reg_6040_pp5_iter9_reg <= icmp_ln57_reg_6040_pp5_iter8_reg;
        j_2_cast_reg_6044_pp5_iter10_reg[4 : 0] <= j_2_cast_reg_6044_pp5_iter9_reg[4 : 0];
        j_2_cast_reg_6044_pp5_iter11_reg[4 : 0] <= j_2_cast_reg_6044_pp5_iter10_reg[4 : 0];
        j_2_cast_reg_6044_pp5_iter12_reg[4 : 0] <= j_2_cast_reg_6044_pp5_iter11_reg[4 : 0];
        j_2_cast_reg_6044_pp5_iter13_reg[4 : 0] <= j_2_cast_reg_6044_pp5_iter12_reg[4 : 0];
        j_2_cast_reg_6044_pp5_iter14_reg[4 : 0] <= j_2_cast_reg_6044_pp5_iter13_reg[4 : 0];
        j_2_cast_reg_6044_pp5_iter15_reg[4 : 0] <= j_2_cast_reg_6044_pp5_iter14_reg[4 : 0];
        j_2_cast_reg_6044_pp5_iter16_reg[4 : 0] <= j_2_cast_reg_6044_pp5_iter15_reg[4 : 0];
        j_2_cast_reg_6044_pp5_iter17_reg[4 : 0] <= j_2_cast_reg_6044_pp5_iter16_reg[4 : 0];
        j_2_cast_reg_6044_pp5_iter18_reg[4 : 0] <= j_2_cast_reg_6044_pp5_iter17_reg[4 : 0];
        j_2_cast_reg_6044_pp5_iter2_reg[4 : 0] <= j_2_cast_reg_6044_pp5_iter1_reg[4 : 0];
        j_2_cast_reg_6044_pp5_iter3_reg[4 : 0] <= j_2_cast_reg_6044_pp5_iter2_reg[4 : 0];
        j_2_cast_reg_6044_pp5_iter4_reg[4 : 0] <= j_2_cast_reg_6044_pp5_iter3_reg[4 : 0];
        j_2_cast_reg_6044_pp5_iter5_reg[4 : 0] <= j_2_cast_reg_6044_pp5_iter4_reg[4 : 0];
        j_2_cast_reg_6044_pp5_iter6_reg[4 : 0] <= j_2_cast_reg_6044_pp5_iter5_reg[4 : 0];
        j_2_cast_reg_6044_pp5_iter7_reg[4 : 0] <= j_2_cast_reg_6044_pp5_iter6_reg[4 : 0];
        j_2_cast_reg_6044_pp5_iter8_reg[4 : 0] <= j_2_cast_reg_6044_pp5_iter7_reg[4 : 0];
        j_2_cast_reg_6044_pp5_iter9_reg[4 : 0] <= j_2_cast_reg_6044_pp5_iter8_reg[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        icmp_ln74_reg_7155 <= icmp_ln74_fu_4270_p2;
        j_3_reg_1545_pp7_iter1_reg <= j_3_reg_1545;
        tmp_8_reg_7189 <= tmp_8_fu_4336_p5;
        tmp_9_reg_7194 <= tmp_9_fu_4348_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        icmp_ln885_1_reg_5472 <= icmp_ln885_1_fu_2499_p2;
        temp_output2_0_V_addr_1_reg_5466_pp4_iter1_reg <= temp_output2_0_V_addr_1_reg_5466;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        icmp_ln885_2_reg_6808 <= icmp_ln885_2_fu_3903_p2;
        temp_output3_0_V_addr_2_reg_6802_pp6_iter1_reg <= temp_output3_0_V_addr_2_reg_6802;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln885_reg_5283 <= icmp_ln885_fu_2052_p2;
        temp_output_0_V_addr_1_reg_5277_pp2_iter1_reg <= temp_output_0_V_addr_1_reg_5277;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln885_1_reg_5472_pp4_iter2_reg == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        icmp_ln908_1_reg_5526 <= icmp_ln908_1_fu_2637_p2;
        select_ln908_2_reg_5531 <= select_ln908_2_fu_2654_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (icmp_ln885_2_reg_6808_pp6_iter2_reg == 1'd0))) begin
        icmp_ln908_2_reg_6862 <= icmp_ln908_2_fu_4041_p2;
        select_ln908_4_reg_6867 <= select_ln908_4_fu_4058_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln885_reg_5283_pp2_iter2_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        icmp_ln908_reg_5337 <= icmp_ln908_fu_2190_p2;
        select_ln908_reg_5342 <= select_ln908_fu_2207_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln5_reg_5084 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_img_load_reg_5098 <= input_img_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln57_fu_2909_p2 == 1'd0))) begin
        j_2_cast_reg_6044[4 : 0] <= j_2_cast_fu_2915_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp7_stage0_11001)) begin
        j_3_reg_1545_pp7_iter2_reg <= j_3_reg_1545_pp7_iter1_reg;
        j_3_reg_1545_pp7_iter3_reg <= j_3_reg_1545_pp7_iter2_reg;
        j_3_reg_1545_pp7_iter4_reg <= j_3_reg_1545_pp7_iter3_reg;
        j_3_reg_1545_pp7_iter5_reg <= j_3_reg_1545_pp7_iter4_reg;
        j_3_reg_1545_pp7_iter6_reg <= j_3_reg_1545_pp7_iter5_reg;
        j_3_reg_1545_pp7_iter7_reg <= j_3_reg_1545_pp7_iter6_reg;
        j_3_reg_1545_pp7_iter8_reg <= j_3_reg_1545_pp7_iter7_reg;
        j_3_reg_1545_pp7_iter9_reg <= j_3_reg_1545_pp7_iter8_reg;
        mul_ln1118_10_reg_7314 <= grp_fu_4551_p2;
        mul_ln1118_11_reg_7339 <= grp_fu_4628_p2;
        mul_ln1118_12_reg_7349 <= grp_fu_4636_p2;
        mul_ln1118_13_reg_7374 <= grp_fu_4713_p2;
        mul_ln1118_14_reg_7384 <= grp_fu_4721_p2;
        mul_ln1118_15_reg_7404 <= grp_fu_4798_p2;
        mul_ln1118_16_reg_7414 <= grp_fu_4806_p2;
        mul_ln1118_17_reg_7424 <= grp_fu_4871_p2;
        mul_ln1118_3_reg_7199 <= grp_fu_4323_p2;
        mul_ln1118_4_reg_7209 <= grp_fu_4331_p2;
        mul_ln1118_5_reg_7234 <= grp_fu_4373_p2;
        mul_ln1118_6_reg_7244 <= grp_fu_4381_p2;
        mul_ln1118_7_reg_7269 <= grp_fu_4458_p2;
        mul_ln1118_8_reg_7279 <= grp_fu_4466_p2;
        mul_ln1118_9_reg_7304 <= grp_fu_4543_p2;
        tmp_10_reg_7224 <= tmp_10_fu_4386_p5;
        tmp_11_reg_7229 <= tmp_11_fu_4398_p5;
        tmp_12_reg_7259 <= tmp_12_fu_4471_p5;
        tmp_13_reg_7264 <= tmp_13_fu_4483_p5;
        tmp_14_reg_7294 <= tmp_14_fu_4556_p5;
        tmp_15_reg_7299 <= tmp_15_fu_4568_p5;
        tmp_16_reg_7329 <= tmp_16_fu_4641_p5;
        tmp_17_reg_7334 <= tmp_17_fu_4653_p5;
        tmp_18_reg_7364 <= tmp_18_fu_4726_p5;
        tmp_19_reg_7369 <= tmp_19_fu_4738_p5;
        tmp_20_reg_7399 <= tmp_20_fu_4811_p5;
        tmp_56_reg_7204 <= {{grp_fu_4315_p2[39:8]}};
        tmp_58_reg_7239 <= {{add_ln1192_33_fu_4440_p2[39:8]}};
        tmp_60_reg_7274 <= {{add_ln1192_35_fu_4525_p2[39:8]}};
        tmp_62_reg_7309 <= {{add_ln1192_37_fu_4610_p2[39:8]}};
        tmp_64_reg_7344 <= {{add_ln1192_39_fu_4695_p2[39:8]}};
        tmp_66_reg_7379 <= {{add_ln1192_41_fu_4780_p2[39:8]}};
        tmp_68_reg_7409 <= {{add_ln1192_43_fu_4853_p2[39:8]}};
        tmp_70_reg_7429 <= {{add_ln1192_45_fu_4906_p2[39:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln57_reg_6040 == 1'd0))) begin
        layer3_weights_V_0_load_reg_6093 <= layer3_weights_V_0_q0;
        layer3_weights_V_1_load_reg_6098 <= layer3_weights_V_1_q0;
        layer3_weights_V_2_load_reg_6103 <= layer3_weights_V_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln57_reg_6040_pp5_iter4_reg == 1'd0))) begin
        layer3_weights_V_10_load_reg_6273 <= layer3_weights_V_10_q0;
        layer3_weights_V_9_load_reg_6268 <= layer3_weights_V_9_q0;
        mul_ln703_4_reg_6243 <= grp_fu_3020_p2;
        mul_ln703_5_reg_6253 <= grp_fu_3028_p2;
        tmp_29_reg_6248 <= {{add_ln1192_3_fu_3063_p2[39:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln57_reg_6040_pp5_iter5_reg == 1'd0))) begin
        layer3_weights_V_11_load_reg_6313 <= layer3_weights_V_11_q0;
        layer3_weights_V_12_load_reg_6318 <= layer3_weights_V_12_q0;
        mul_ln703_6_reg_6288 <= grp_fu_3081_p2;
        mul_ln703_7_reg_6298 <= grp_fu_3089_p2;
        tmp_31_reg_6293 <= {{add_ln1192_5_fu_3124_p2[39:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln57_reg_6040_pp5_iter6_reg == 1'd0))) begin
        layer3_weights_V_13_load_reg_6358 <= layer3_weights_V_13_q0;
        layer3_weights_V_14_load_reg_6363 <= layer3_weights_V_14_q0;
        mul_ln703_8_reg_6333 <= grp_fu_3142_p2;
        mul_ln703_9_reg_6343 <= grp_fu_3150_p2;
        tmp_33_reg_6338 <= {{add_ln1192_7_fu_3185_p2[39:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln57_reg_6040_pp5_iter7_reg == 1'd0))) begin
        layer3_weights_V_15_load_reg_6403 <= layer3_weights_V_15_q0;
        layer3_weights_V_16_load_reg_6408 <= layer3_weights_V_16_q0;
        mul_ln703_10_reg_6378 <= grp_fu_3203_p2;
        mul_ln703_11_reg_6388 <= grp_fu_3211_p2;
        tmp_35_reg_6383 <= {{add_ln1192_9_fu_3246_p2[39:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln57_reg_6040_pp5_iter8_reg == 1'd0))) begin
        layer3_weights_V_17_load_reg_6448 <= layer3_weights_V_17_q0;
        layer3_weights_V_18_load_reg_6453 <= layer3_weights_V_18_q0;
        mul_ln703_12_reg_6423 <= grp_fu_3264_p2;
        mul_ln703_13_reg_6433 <= grp_fu_3272_p2;
        tmp_37_reg_6428 <= {{add_ln1192_11_fu_3307_p2[39:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln57_reg_6040_pp5_iter9_reg == 1'd0))) begin
        layer3_weights_V_19_load_reg_6493 <= layer3_weights_V_19_q0;
        layer3_weights_V_20_load_reg_6498 <= layer3_weights_V_20_q0;
        mul_ln703_14_reg_6468 <= grp_fu_3325_p2;
        mul_ln703_15_reg_6478 <= grp_fu_3333_p2;
        tmp_39_reg_6473 <= {{add_ln1192_13_fu_3368_p2[39:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln57_reg_6040_pp5_iter10_reg == 1'd0))) begin
        layer3_weights_V_21_load_reg_6538 <= layer3_weights_V_21_q0;
        layer3_weights_V_22_load_reg_6543 <= layer3_weights_V_22_q0;
        mul_ln703_16_reg_6513 <= grp_fu_3386_p2;
        mul_ln703_17_reg_6523 <= grp_fu_3394_p2;
        tmp_41_reg_6518 <= {{add_ln1192_15_fu_3429_p2[39:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln57_reg_6040_pp5_iter11_reg == 1'd0))) begin
        layer3_weights_V_23_load_reg_6583 <= layer3_weights_V_23_q0;
        layer3_weights_V_24_load_reg_6588 <= layer3_weights_V_24_q0;
        mul_ln703_18_reg_6558 <= grp_fu_3447_p2;
        mul_ln703_19_reg_6568 <= grp_fu_3455_p2;
        tmp_43_reg_6563 <= {{add_ln1192_17_fu_3490_p2[39:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln57_reg_6040_pp5_iter12_reg == 1'd0))) begin
        layer3_weights_V_25_load_reg_6628 <= layer3_weights_V_25_q0;
        layer3_weights_V_26_load_reg_6633 <= layer3_weights_V_26_q0;
        mul_ln703_20_reg_6603 <= grp_fu_3508_p2;
        mul_ln703_21_reg_6613 <= grp_fu_3516_p2;
        tmp_45_reg_6608 <= {{add_ln1192_19_fu_3551_p2[39:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln57_reg_6040_pp5_iter13_reg == 1'd0))) begin
        layer3_weights_V_27_load_reg_6673 <= layer3_weights_V_27_q0;
        layer3_weights_V_28_load_reg_6678 <= layer3_weights_V_28_q0;
        mul_ln703_22_reg_6648 <= grp_fu_3569_p2;
        mul_ln703_23_reg_6658 <= grp_fu_3577_p2;
        tmp_47_reg_6653 <= {{add_ln1192_21_fu_3612_p2[39:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln57_reg_6040_pp5_iter14_reg == 1'd0))) begin
        layer3_weights_V_29_load_reg_6718 <= layer3_weights_V_29_q0;
        layer3_weights_V_30_load_reg_6723 <= layer3_weights_V_30_q0;
        mul_ln703_24_reg_6693 <= grp_fu_3630_p2;
        mul_ln703_25_reg_6703 <= grp_fu_3638_p2;
        tmp_49_reg_6698 <= {{add_ln1192_23_fu_3673_p2[39:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln57_reg_6040_pp5_iter15_reg == 1'd0))) begin
        layer3_weights_V_31_load_reg_6758 <= layer3_weights_V_31_q0;
        mul_ln703_26_reg_6733 <= grp_fu_3691_p2;
        mul_ln703_27_reg_6743 <= grp_fu_3699_p2;
        tmp_51_reg_6738 <= {{add_ln1192_25_fu_3734_p2[39:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln57_reg_6040_pp5_iter1_reg == 1'd0))) begin
        layer3_weights_V_3_load_reg_6133 <= layer3_weights_V_3_q0;
        layer3_weights_V_4_load_reg_6138 <= layer3_weights_V_4_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln57_reg_6040_pp5_iter2_reg == 1'd0))) begin
        layer3_weights_V_5_load_reg_6178 <= layer3_weights_V_5_q0;
        layer3_weights_V_6_load_reg_6183 <= layer3_weights_V_6_q0;
        mul_ln703_1_reg_6163 <= grp_fu_2941_p2;
        mul_ln703_reg_6153 <= grp_fu_2933_p2;
        tmp_25_reg_6158 <= {{grp_fu_2925_p2[39:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln57_reg_6040_pp5_iter3_reg == 1'd0))) begin
        layer3_weights_V_7_load_reg_6223 <= layer3_weights_V_7_q0;
        layer3_weights_V_8_load_reg_6228 <= layer3_weights_V_8_q0;
        mul_ln703_2_reg_6198 <= grp_fu_2959_p2;
        mul_ln703_3_reg_6208 <= grp_fu_2967_p2;
        tmp_27_reg_6203 <= {{add_ln1192_1_fu_3002_p2[39:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln885_1_reg_5472 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        lsb_index_1_reg_5498 <= lsb_index_1_fu_2550_p2;
        p_Result_19_reg_5481 <= reg_1603[32'd31];
        p_Result_21_reg_5515 <= p_Result_21_fu_2570_p3;
        sub_ln894_1_reg_5492 <= sub_ln894_1_fu_2544_p2;
        tmp_79_reg_5505 <= {{lsb_index_1_fu_2550_p2[31:1]}};
        tmp_V_7_reg_5486 <= tmp_V_7_fu_2519_p3;
        trunc_ln893_1_reg_5521 <= trunc_ln893_1_fu_2578_p1;
        trunc_ln897_1_reg_5510 <= trunc_ln897_1_fu_2566_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (icmp_ln885_2_reg_6808 == 1'd0))) begin
        lsb_index_2_reg_6834 <= lsb_index_2_fu_3954_p2;
        p_Result_23_reg_6817 <= reg_1608[32'd31];
        p_Result_25_reg_6851 <= p_Result_25_fu_3974_p3;
        sub_ln894_2_reg_6828 <= sub_ln894_2_fu_3948_p2;
        tmp_83_reg_6841 <= {{lsb_index_2_fu_3954_p2[31:1]}};
        tmp_V_8_reg_6822 <= tmp_V_8_fu_3923_p3;
        trunc_ln893_2_reg_6857 <= trunc_ln893_2_fu_3982_p1;
        trunc_ln897_2_reg_6846 <= trunc_ln897_2_fu_3970_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln885_reg_5283 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        lsb_index_reg_5309 <= lsb_index_fu_2103_p2;
        p_Result_15_reg_5292 <= reg_1599[32'd31];
        p_Result_17_reg_5326 <= p_Result_17_fu_2123_p3;
        sub_ln894_reg_5303 <= sub_ln894_fu_2097_p2;
        tmp_75_reg_5316 <= {{lsb_index_fu_2103_p2[31:1]}};
        tmp_V_6_reg_5297 <= tmp_V_6_fu_2072_p3;
        trunc_ln893_reg_5332 <= trunc_ln893_fu_2131_p1;
        trunc_ln897_reg_5321 <= trunc_ln897_fu_2119_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln885_reg_5283_pp2_iter3_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        m_13_reg_5347 <= {{m_4_fu_2258_p2[63:1]}};
        p_Result_s_reg_5352 <= m_4_fu_2258_p2[32'd54];
        trunc_ln6_reg_5357 <= {{m_4_fu_2258_p2[52:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (icmp_ln885_2_reg_6808_pp6_iter3_reg == 1'd0))) begin
        m_14_reg_6872 <= {{m_11_fu_4109_p2[63:1]}};
        p_Result_10_reg_6877 <= m_11_fu_4109_p2[32'd54];
        trunc_ln1506_2_reg_6882 <= {{m_11_fu_4109_p2[52:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln885_1_reg_5472_pp4_iter3_reg == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        m_reg_5536 <= {{m_6_fu_2705_p2[63:1]}};
        p_Result_5_reg_5541 <= m_6_fu_2705_p2[32'd54];
        trunc_ln1506_1_reg_5546 <= {{m_6_fu_2705_p2[52:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln57_reg_6040_pp5_iter16_reg == 1'd0))) begin
        mul_ln703_28_reg_6763 <= grp_fu_3752_p2;
        mul_ln703_29_reg_6773 <= grp_fu_3760_p2;
        tmp_53_reg_6768 <= {{add_ln1192_27_fu_3795_p2[39:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln57_reg_6040_pp5_iter17_reg == 1'd0))) begin
        mul_ln703_30_reg_6783 <= grp_fu_3813_p2;
        tmp_55_reg_6788 <= {{add_ln1192_29_fu_3848_p2[39:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_reg_5196_pp1_iter3_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        r_V_1_reg_5258 <= grp_fu_1990_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln40_reg_5391_pp3_iter3_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        r_V_3_reg_5447 <= grp_fu_2441_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln21_reg_5196_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        r_V_reg_5238 <= fp_input_img_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln40_reg_5391_pp3_iter1_reg == 1'd0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        reg_1599 <= temp_output_0_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln571_reg_5160 == 1'd0) & (icmp_ln5_reg_5084_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln571_1_reg_5171 <= select_ln571_1_fu_1836_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln5_reg_5084_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln571_4_reg_5176 <= select_ln571_4_fu_1882_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        sext_ln1116_10_reg_5925 <= sext_ln1116_10_fu_2835_p1;
        sext_ln1116_11_reg_5930 <= sext_ln1116_11_fu_2838_p1;
        sext_ln1116_12_reg_5935 <= sext_ln1116_12_fu_2841_p1;
        sext_ln1116_13_reg_5940 <= sext_ln1116_13_fu_2844_p1;
        sext_ln1116_14_reg_5945 <= sext_ln1116_14_fu_2847_p1;
        sext_ln1116_15_reg_5950 <= sext_ln1116_15_fu_2850_p1;
        sext_ln1116_16_reg_5955 <= sext_ln1116_16_fu_2853_p1;
        sext_ln1116_17_reg_5960 <= sext_ln1116_17_fu_2856_p1;
        sext_ln1116_18_reg_5965 <= sext_ln1116_18_fu_2859_p1;
        sext_ln1116_19_reg_5970 <= sext_ln1116_19_fu_2862_p1;
        sext_ln1116_1_reg_5880 <= sext_ln1116_1_fu_2808_p1;
        sext_ln1116_20_reg_5975 <= sext_ln1116_20_fu_2865_p1;
        sext_ln1116_21_reg_5980 <= sext_ln1116_21_fu_2868_p1;
        sext_ln1116_22_reg_5985 <= sext_ln1116_22_fu_2871_p1;
        sext_ln1116_23_reg_5990 <= sext_ln1116_23_fu_2874_p1;
        sext_ln1116_24_reg_5995 <= sext_ln1116_24_fu_2877_p1;
        sext_ln1116_25_reg_6000 <= sext_ln1116_25_fu_2880_p1;
        sext_ln1116_26_reg_6005 <= sext_ln1116_26_fu_2883_p1;
        sext_ln1116_27_reg_6010 <= sext_ln1116_27_fu_2886_p1;
        sext_ln1116_28_reg_6015 <= sext_ln1116_28_fu_2889_p1;
        sext_ln1116_29_reg_6020 <= sext_ln1116_29_fu_2892_p1;
        sext_ln1116_2_reg_5885 <= sext_ln1116_2_fu_2811_p1;
        sext_ln1116_30_reg_6025 <= sext_ln1116_30_fu_2895_p1;
        sext_ln1116_3_reg_5890 <= sext_ln1116_3_fu_2814_p1;
        sext_ln1116_4_reg_5895 <= sext_ln1116_4_fu_2817_p1;
        sext_ln1116_5_reg_5900 <= sext_ln1116_5_fu_2820_p1;
        sext_ln1116_6_reg_5905 <= sext_ln1116_6_fu_2823_p1;
        sext_ln1116_7_reg_5910 <= sext_ln1116_7_fu_2826_p1;
        sext_ln1116_8_reg_5915 <= sext_ln1116_8_fu_2829_p1;
        sext_ln1116_9_reg_5920 <= sext_ln1116_9_fu_2832_p1;
        sext_ln1116_reg_5875 <= sext_ln1116_fu_2804_p1;
        temp_output2_0_V_load_31_cast_reg_6030 <= temp_output2_0_V_load_31_cast_fu_2899_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        sext_ln1116_31_reg_7070 <= sext_ln1116_31_fu_4213_p1;
        sext_ln1116_32_reg_7075 <= sext_ln1116_32_fu_4217_p1;
        sext_ln1116_33_reg_7080 <= sext_ln1116_33_fu_4220_p1;
        sext_ln1116_34_reg_7085 <= sext_ln1116_34_fu_4223_p1;
        sext_ln1116_35_reg_7090 <= sext_ln1116_35_fu_4226_p1;
        sext_ln1116_36_reg_7095 <= sext_ln1116_36_fu_4229_p1;
        sext_ln1116_37_reg_7100 <= sext_ln1116_37_fu_4232_p1;
        sext_ln1116_38_reg_7105 <= sext_ln1116_38_fu_4235_p1;
        sext_ln1116_39_reg_7110 <= sext_ln1116_39_fu_4238_p1;
        sext_ln1116_40_reg_7115 <= sext_ln1116_40_fu_4241_p1;
        sext_ln1116_41_reg_7120 <= sext_ln1116_41_fu_4244_p1;
        sext_ln1116_42_reg_7125 <= sext_ln1116_42_fu_4247_p1;
        sext_ln1116_43_reg_7130 <= sext_ln1116_43_fu_4250_p1;
        sext_ln1116_44_reg_7135 <= sext_ln1116_44_fu_4253_p1;
        sext_ln1116_45_reg_7140 <= sext_ln1116_45_fu_4256_p1;
        temp_output3_0_V_load_15_cast_reg_7145 <= temp_output3_0_V_load_15_cast_fu_4260_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln5_reg_5084_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sext_ln581_reg_5166 <= sext_ln581_fu_1795_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_2488_p2 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        temp_output2_0_V_addr_1_reg_5466 <= i_2_cast_fu_2494_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        temp_output2_0_V_load_10_reg_5675 <= temp_output2_0_V_q0;
        temp_output2_0_V_load_11_reg_5680 <= temp_output2_0_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        temp_output2_0_V_load_12_reg_5695 <= temp_output2_0_V_q0;
        temp_output2_0_V_load_13_reg_5700 <= temp_output2_0_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        temp_output2_0_V_load_14_reg_5715 <= temp_output2_0_V_q0;
        temp_output2_0_V_load_15_reg_5720 <= temp_output2_0_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        temp_output2_0_V_load_16_reg_5735 <= temp_output2_0_V_q0;
        temp_output2_0_V_load_17_reg_5740 <= temp_output2_0_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        temp_output2_0_V_load_18_reg_5755 <= temp_output2_0_V_q0;
        temp_output2_0_V_load_19_reg_5760 <= temp_output2_0_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        temp_output2_0_V_load_1_reg_5580 <= temp_output2_0_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        temp_output2_0_V_load_20_reg_5775 <= temp_output2_0_V_q0;
        temp_output2_0_V_load_21_reg_5780 <= temp_output2_0_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        temp_output2_0_V_load_22_reg_5795 <= temp_output2_0_V_q0;
        temp_output2_0_V_load_23_reg_5800 <= temp_output2_0_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        temp_output2_0_V_load_24_reg_5815 <= temp_output2_0_V_q0;
        temp_output2_0_V_load_25_reg_5820 <= temp_output2_0_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        temp_output2_0_V_load_26_reg_5835 <= temp_output2_0_V_q0;
        temp_output2_0_V_load_27_reg_5840 <= temp_output2_0_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        temp_output2_0_V_load_28_reg_5855 <= temp_output2_0_V_q0;
        temp_output2_0_V_load_29_reg_5860 <= temp_output2_0_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        temp_output2_0_V_load_2_reg_5595 <= temp_output2_0_V_q0;
        temp_output2_0_V_load_3_reg_5600 <= temp_output2_0_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        temp_output2_0_V_load_4_reg_5615 <= temp_output2_0_V_q0;
        temp_output2_0_V_load_5_reg_5620 <= temp_output2_0_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        temp_output2_0_V_load_6_reg_5635 <= temp_output2_0_V_q0;
        temp_output2_0_V_load_7_reg_5640 <= temp_output2_0_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        temp_output2_0_V_load_8_reg_5655 <= temp_output2_0_V_q0;
        temp_output2_0_V_load_9_reg_5660 <= temp_output2_0_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln120_fu_3892_p2 == 1'd0))) begin
        temp_output3_0_V_addr_2_reg_6802 <= i_3_cast_fu_3898_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state97)) begin
        temp_output3_0_V_load_10_reg_7030 <= temp_output3_0_V_q0;
        temp_output3_0_V_load_11_reg_7035 <= temp_output3_0_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        temp_output3_0_V_load_12_reg_7050 <= temp_output3_0_V_q0;
        temp_output3_0_V_load_13_reg_7055 <= temp_output3_0_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        temp_output3_0_V_load_1_reg_6935 <= temp_output3_0_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        temp_output3_0_V_load_2_reg_6950 <= temp_output3_0_V_q0;
        temp_output3_0_V_load_3_reg_6955 <= temp_output3_0_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state94)) begin
        temp_output3_0_V_load_4_reg_6970 <= temp_output3_0_V_q0;
        temp_output3_0_V_load_5_reg_6975 <= temp_output3_0_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        temp_output3_0_V_load_6_reg_6990 <= temp_output3_0_V_q0;
        temp_output3_0_V_load_7_reg_6995 <= temp_output3_0_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        temp_output3_0_V_load_8_reg_7010 <= temp_output3_0_V_q0;
        temp_output3_0_V_load_9_reg_7015 <= temp_output3_0_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((j_3_reg_1545_pp7_iter9_reg == 2'd1) & (1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter10 == 1'b1))) begin
        temp_output4_0_2_V_1_fu_434 <= {{add_ln1192_46_fu_4928_p2[39:8]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~(j_3_reg_1545_pp7_iter9_reg == 2'd1) & ~(j_3_reg_1545_pp7_iter9_reg == 2'd0) & (1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter10 == 1'b1))) begin
        temp_output4_0_2_V_2_fu_438 <= {{add_ln1192_46_fu_4928_p2[39:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln92_fu_2041_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        temp_output_0_V_addr_1_reg_5277 <= i_1_cast_fu_2047_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (icmp_ln74_fu_4270_p2 == 1'd0))) begin
        tmp_5_reg_7159 <= tmp_5_fu_4276_p5;
        tmp_6_reg_7164 <= tmp_6_fu_4288_p5;
        tmp_7_reg_7169 <= tmp_7_fu_4300_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln885_1_fu_2499_p2 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        tmp_V_2_reg_5476 <= tmp_V_2_fu_2505_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln885_2_fu_3903_p2 == 1'd0))) begin
        tmp_V_4_reg_6812 <= tmp_V_4_fu_3909_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln885_fu_2052_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        tmp_V_reg_5287 <= tmp_V_fu_2058_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_reg_5196_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weights_layer1_weights_V_load_reg_5243 <= weights_layer1_weights_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln40_reg_5391_pp3_iter1_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        weights_layer2_weights_V_load_reg_5432 <= weights_layer2_weights_V_q0;
    end
end

always @ (*) begin
    if ((icmp_ln5_fu_1619_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln21_fu_1896_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state11 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state11 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln92_fu_2041_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state18 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state18 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln40_fu_2363_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state28 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state28 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln107_fu_2488_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state35 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state35 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln57_fu_2909_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state61 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state61 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln120_fu_3892_p2 == 1'd1)) begin
        ap_condition_pp6_exit_iter0_state82 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter0_state82 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln74_fu_4270_p2 == 1'd1)) begin
        ap_condition_pp7_exit_iter0_state100 = 1'b1;
    end else begin
        ap_condition_pp7_exit_iter0_state100 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter8 == 1'b0) & (ap_enable_reg_pp2_iter7 == 1'b0) & (ap_enable_reg_pp2_iter6 == 1'b0) & (ap_enable_reg_pp2_iter5 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter5 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter8 == 1'b0) & (ap_enable_reg_pp4_iter7 == 1'b0) & (ap_enable_reg_pp4_iter6 == 1'b0) & (ap_enable_reg_pp4_iter5 == 1'b0) & (ap_enable_reg_pp4_iter4 == 1'b0) & (ap_enable_reg_pp4_iter3 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter19 == 1'b0) & (ap_enable_reg_pp5_iter18 == 1'b0) & (ap_enable_reg_pp5_iter17 == 1'b0) & (ap_enable_reg_pp5_iter16 == 1'b0) & (ap_enable_reg_pp5_iter15 == 1'b0) & (ap_enable_reg_pp5_iter14 == 1'b0) & (ap_enable_reg_pp5_iter13 == 1'b0) & (ap_enable_reg_pp5_iter12 == 1'b0) & (ap_enable_reg_pp5_iter11 == 1'b0) & (ap_enable_reg_pp5_iter10 == 1'b0) & (ap_enable_reg_pp5_iter9 == 1'b0) & (ap_enable_reg_pp5_iter8 == 1'b0) & (ap_enable_reg_pp5_iter7 == 1'b0) & (ap_enable_reg_pp5_iter6 == 1'b0) & (ap_enable_reg_pp5_iter5 == 1'b0) & (ap_enable_reg_pp5_iter4 == 1'b0) & (ap_enable_reg_pp5_iter3 == 1'b0) & (ap_enable_reg_pp5_iter2 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter8 == 1'b0) & (ap_enable_reg_pp6_iter7 == 1'b0) & (ap_enable_reg_pp6_iter6 == 1'b0) & (ap_enable_reg_pp6_iter5 == 1'b0) & (ap_enable_reg_pp6_iter4 == 1'b0) & (ap_enable_reg_pp6_iter3 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter10 == 1'b0) & (ap_enable_reg_pp7_iter9 == 1'b0) & (ap_enable_reg_pp7_iter8 == 1'b0) & (ap_enable_reg_pp7_iter7 == 1'b0) & (ap_enable_reg_pp7_iter6 == 1'b0) & (ap_enable_reg_pp7_iter5 == 1'b0) & (ap_enable_reg_pp7_iter4 == 1'b0) & (ap_enable_reg_pp7_iter3 == 1'b0) & (ap_enable_reg_pp7_iter2 == 1'b0) & (ap_enable_reg_pp7_iter1 == 1'b0) & (ap_enable_reg_pp7_iter0 == 1'b0))) begin
        ap_idle_pp7 = 1'b1;
    end else begin
        ap_idle_pp7 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln40_reg_5391 == 1'd0) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_phi_mux_j_1_phi_fu_1482_p4 = select_ln40_1_reg_5406;
    end else begin
        ap_phi_mux_j_1_phi_fu_1482_p4 = j_1_reg_1478;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (icmp_ln74_reg_7155 == 1'd0))) begin
        ap_phi_mux_j_3_phi_fu_1549_p4 = add_ln74_reg_7150;
    end else begin
        ap_phi_mux_j_3_phi_fu_1549_p4 = j_3_reg_1545;
    end
end

always @ (*) begin
    if (((icmp_ln21_reg_5196 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        ap_phi_mux_j_phi_fu_1426_p4 = select_ln21_1_reg_5212;
    end else begin
        ap_phi_mux_j_phi_fu_1426_p4 = j_reg_1422;
    end
end

always @ (*) begin
    if (((icmp_ln40_reg_5391 == 1'd0) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_phi_mux_k_1_phi_fu_1493_p4 = add_ln44_reg_5413;
    end else begin
        ap_phi_mux_k_1_phi_fu_1493_p4 = k_1_reg_1489;
    end
end

always @ (*) begin
    if (((icmp_ln21_reg_5196 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        ap_phi_mux_k_phi_fu_1437_p4 = add_ln25_reg_5219;
    end else begin
        ap_phi_mux_k_phi_fu_1437_p4 = k_reg_1433;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        fp_input_img_V_address0 = k_cast_fu_1945_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        fp_input_img_V_address0 = i_cast_reg_5088_pp0_iter6_reg;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        fp_input_img_V_address0 = 64'd0;
    end else begin
        fp_input_img_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        fp_input_img_V_ce0 = 1'b1;
    end else begin
        fp_input_img_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        fp_input_img_V_d0 = select_ln571_4_reg_5176;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        fp_input_img_V_d0 = 32'd256;
    end else begin
        fp_input_img_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln5_reg_5084_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        fp_input_img_V_we0 = 1'b1;
    end else begin
        fp_input_img_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0) & (ap_enable_reg_pp6_iter6 == 1'b1))) begin
        grp_fu_1594_p0 = bitcast_ln734_2_fu_4194_p1;
    end else if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        grp_fu_1594_p0 = bitcast_ln734_1_fu_2790_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter6 == 1'b1))) begin
        grp_fu_1594_p0 = bitcast_ln734_fu_2343_p1;
    end else begin
        grp_fu_1594_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_img_ce0 = 1'b1;
    end else begin
        input_img_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        layer3_weights_V_0_ce0 = 1'b1;
    end else begin
        layer3_weights_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        layer3_weights_V_10_ce0 = 1'b1;
    end else begin
        layer3_weights_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter5 == 1'b1))) begin
        layer3_weights_V_11_ce0 = 1'b1;
    end else begin
        layer3_weights_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter5 == 1'b1))) begin
        layer3_weights_V_12_ce0 = 1'b1;
    end else begin
        layer3_weights_V_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter6 == 1'b1))) begin
        layer3_weights_V_13_ce0 = 1'b1;
    end else begin
        layer3_weights_V_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter6 == 1'b1))) begin
        layer3_weights_V_14_ce0 = 1'b1;
    end else begin
        layer3_weights_V_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter7 == 1'b1))) begin
        layer3_weights_V_15_ce0 = 1'b1;
    end else begin
        layer3_weights_V_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter7 == 1'b1))) begin
        layer3_weights_V_16_ce0 = 1'b1;
    end else begin
        layer3_weights_V_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter8 == 1'b1))) begin
        layer3_weights_V_17_ce0 = 1'b1;
    end else begin
        layer3_weights_V_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter8 == 1'b1))) begin
        layer3_weights_V_18_ce0 = 1'b1;
    end else begin
        layer3_weights_V_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter9 == 1'b1))) begin
        layer3_weights_V_19_ce0 = 1'b1;
    end else begin
        layer3_weights_V_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        layer3_weights_V_1_ce0 = 1'b1;
    end else begin
        layer3_weights_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter9 == 1'b1))) begin
        layer3_weights_V_20_ce0 = 1'b1;
    end else begin
        layer3_weights_V_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter10 == 1'b1))) begin
        layer3_weights_V_21_ce0 = 1'b1;
    end else begin
        layer3_weights_V_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter10 == 1'b1))) begin
        layer3_weights_V_22_ce0 = 1'b1;
    end else begin
        layer3_weights_V_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter11 == 1'b1))) begin
        layer3_weights_V_23_ce0 = 1'b1;
    end else begin
        layer3_weights_V_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter11 == 1'b1))) begin
        layer3_weights_V_24_ce0 = 1'b1;
    end else begin
        layer3_weights_V_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter12 == 1'b1))) begin
        layer3_weights_V_25_ce0 = 1'b1;
    end else begin
        layer3_weights_V_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter12 == 1'b1))) begin
        layer3_weights_V_26_ce0 = 1'b1;
    end else begin
        layer3_weights_V_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter13 == 1'b1))) begin
        layer3_weights_V_27_ce0 = 1'b1;
    end else begin
        layer3_weights_V_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter13 == 1'b1))) begin
        layer3_weights_V_28_ce0 = 1'b1;
    end else begin
        layer3_weights_V_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter14 == 1'b1))) begin
        layer3_weights_V_29_ce0 = 1'b1;
    end else begin
        layer3_weights_V_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        layer3_weights_V_2_ce0 = 1'b1;
    end else begin
        layer3_weights_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter14 == 1'b1))) begin
        layer3_weights_V_30_ce0 = 1'b1;
    end else begin
        layer3_weights_V_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter15 == 1'b1))) begin
        layer3_weights_V_31_ce0 = 1'b1;
    end else begin
        layer3_weights_V_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        layer3_weights_V_3_ce0 = 1'b1;
    end else begin
        layer3_weights_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        layer3_weights_V_4_ce0 = 1'b1;
    end else begin
        layer3_weights_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter2 == 1'b1))) begin
        layer3_weights_V_5_ce0 = 1'b1;
    end else begin
        layer3_weights_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter2 == 1'b1))) begin
        layer3_weights_V_6_ce0 = 1'b1;
    end else begin
        layer3_weights_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter3 == 1'b1))) begin
        layer3_weights_V_7_ce0 = 1'b1;
    end else begin
        layer3_weights_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter3 == 1'b1))) begin
        layer3_weights_V_8_ce0 = 1'b1;
    end else begin
        layer3_weights_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        layer3_weights_V_9_ce0 = 1'b1;
    end else begin
        layer3_weights_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        temp_output2_0_V_address0 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        temp_output2_0_V_address0 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        temp_output2_0_V_address0 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        temp_output2_0_V_address0 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        temp_output2_0_V_address0 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        temp_output2_0_V_address0 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        temp_output2_0_V_address0 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        temp_output2_0_V_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        temp_output2_0_V_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        temp_output2_0_V_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        temp_output2_0_V_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        temp_output2_0_V_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        temp_output2_0_V_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        temp_output2_0_V_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        temp_output2_0_V_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        temp_output2_0_V_address0 = temp_output2_0_V_addr_reg_5181;
    end else if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter8 == 1'b1))) begin
        temp_output2_0_V_address0 = temp_output2_0_V_addr_1_reg_5466_pp4_iter7_reg;
    end else if (((ap_enable_reg_pp3_iter5 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        temp_output2_0_V_address0 = zext_ln40_fu_2447_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        temp_output2_0_V_address0 = 64'd0;
    end else begin
        temp_output2_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        temp_output2_0_V_address1 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        temp_output2_0_V_address1 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        temp_output2_0_V_address1 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        temp_output2_0_V_address1 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        temp_output2_0_V_address1 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        temp_output2_0_V_address1 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        temp_output2_0_V_address1 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        temp_output2_0_V_address1 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        temp_output2_0_V_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        temp_output2_0_V_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        temp_output2_0_V_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        temp_output2_0_V_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        temp_output2_0_V_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        temp_output2_0_V_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        temp_output2_0_V_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        temp_output2_0_V_address1 = 64'd1;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        temp_output2_0_V_address1 = i_2_cast_fu_2494_p1;
    end else begin
        temp_output2_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | ((ap_enable_reg_pp3_iter5 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter8 == 1'b1)))) begin
        temp_output2_0_V_ce0 = 1'b1;
    end else begin
        temp_output2_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | ((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0)))) begin
        temp_output2_0_V_ce1 = 1'b1;
    end else begin
        temp_output2_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter8 == 1'b1))) begin
        temp_output2_0_V_d0 = 32'd0;
    end else if (((ap_enable_reg_pp3_iter5 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        temp_output2_0_V_d0 = {{ret_V_1_fu_2466_p2[39:8]}};
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        temp_output2_0_V_d0 = 32'd256;
    end else begin
        temp_output2_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_enable_reg_pp3_iter5 == 1'b1) & (ifzero5_reg_5418_pp3_iter4_reg == 1'd1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((icmp_ln885_1_reg_5472_pp4_iter7_reg == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter8 == 1'b1) & (1'd1 == and_ln1506_1_reg_5571)))) begin
        temp_output2_0_V_we0 = 1'b1;
    end else begin
        temp_output2_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        temp_output3_0_V_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        temp_output3_0_V_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        temp_output3_0_V_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        temp_output3_0_V_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state94)) begin
        temp_output3_0_V_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        temp_output3_0_V_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        temp_output3_0_V_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        temp_output3_0_V_address0 = temp_output3_0_V_addr_reg_5186;
    end else if (((1'b0 == ap_block_pp6_stage0) & (ap_enable_reg_pp6_iter8 == 1'b1))) begin
        temp_output3_0_V_address0 = temp_output3_0_V_addr_2_reg_6802_pp6_iter7_reg;
    end else if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter19 == 1'b1))) begin
        temp_output3_0_V_address0 = j_2_cast_reg_6044_pp5_iter18_reg;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        temp_output3_0_V_address0 = 64'd0;
    end else begin
        temp_output3_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        temp_output3_0_V_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        temp_output3_0_V_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        temp_output3_0_V_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        temp_output3_0_V_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state94)) begin
        temp_output3_0_V_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        temp_output3_0_V_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        temp_output3_0_V_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        temp_output3_0_V_address1 = 64'd1;
    end else if (((1'b0 == ap_block_pp6_stage0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1))) begin
        temp_output3_0_V_address1 = i_3_cast_fu_3898_p1;
    end else begin
        temp_output3_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state91) | ((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter8 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter19 == 1'b1)))) begin
        temp_output3_0_V_ce0 = 1'b1;
    end else begin
        temp_output3_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state91) | ((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1)))) begin
        temp_output3_0_V_ce1 = 1'b1;
    end else begin
        temp_output3_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0) & (ap_enable_reg_pp6_iter8 == 1'b1))) begin
        temp_output3_0_V_d0 = 32'd0;
    end else if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter19 == 1'b1))) begin
        temp_output3_0_V_d0 = {{add_ln1192_30_fu_3870_p2[39:8]}};
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        temp_output3_0_V_d0 = 32'd256;
    end else begin
        temp_output3_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter8 == 1'b1) & (1'd1 == and_ln1506_2_reg_6907) & (icmp_ln885_2_reg_6808_pp6_iter7_reg == 1'd0)) | ((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter19 == 1'b1) & (icmp_ln57_reg_6040_pp5_iter18_reg == 1'd0)))) begin
        temp_output3_0_V_we0 = 1'b1;
    end else begin
        temp_output3_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter8 == 1'b1))) begin
        temp_output_0_V_address0 = temp_output_0_V_addr_1_reg_5277_pp2_iter7_reg;
    end else if (((ap_enable_reg_pp1_iter5 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        temp_output_0_V_address0 = zext_ln21_fu_1996_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        temp_output_0_V_address0 = 64'd0;
    end else begin
        temp_output_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        temp_output_0_V_address1 = k_1_cast_fu_2412_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        temp_output_0_V_address1 = i_1_cast_fu_2047_p1;
    end else begin
        temp_output_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_enable_reg_pp1_iter5 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter8 == 1'b1)))) begin
        temp_output_0_V_ce0 = 1'b1;
    end else begin
        temp_output_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        temp_output_0_V_ce1 = 1'b1;
    end else begin
        temp_output_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter8 == 1'b1))) begin
        temp_output_0_V_d0 = 32'd0;
    end else if (((ap_enable_reg_pp1_iter5 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        temp_output_0_V_d0 = {{ret_V_fu_2018_p2[39:8]}};
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        temp_output_0_V_d0 = 32'd256;
    end else begin
        temp_output_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_enable_reg_pp1_iter5 == 1'b1) & (ifzero_reg_5224_pp1_iter4_reg == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((icmp_ln885_reg_5283_pp2_iter7_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter8 == 1'b1) & (1'd1 == and_ln1506_reg_5382)))) begin
        temp_output_0_V_we0 = 1'b1;
    end else begin
        temp_output_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        weights_layer1_weights_V_ce0 = 1'b1;
    end else begin
        weights_layer1_weights_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        weights_layer2_weights_V_ce0 = 1'b1;
    end else begin
        weights_layer2_weights_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln5_fu_1619_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter7 == 1'b1) & (ap_enable_reg_pp0_iter6 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((icmp_ln5_fu_1619_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter7 == 1'b1) & (ap_enable_reg_pp0_iter6 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((icmp_ln21_fu_1896_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0)) & ~((ap_enable_reg_pp1_iter5 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter4 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter5 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter4 == 1'b0)) | ((icmp_ln21_fu_1896_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((icmp_ln92_fu_2041_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone)) & ~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter8 == 1'b1) & (ap_enable_reg_pp2_iter7 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((icmp_ln92_fu_2041_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone)) | ((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter8 == 1'b1) & (ap_enable_reg_pp2_iter7 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((icmp_ln40_fu_2363_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter1 == 1'b0)) & ~((ap_enable_reg_pp3_iter5 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter4 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter5 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter4 == 1'b0)) | ((icmp_ln40_fu_2363_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((icmp_ln107_fu_2488_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (ap_enable_reg_pp4_iter1 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone)) & ~((1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter8 == 1'b1) & (ap_enable_reg_pp4_iter7 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if ((((icmp_ln107_fu_2488_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (ap_enable_reg_pp4_iter1 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone)) | ((1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter8 == 1'b1) & (ap_enable_reg_pp4_iter7 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage0;
        end
        ap_ST_fsm_pp5_stage0 : begin
            if ((~((1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter1 == 1'b0) & (icmp_ln57_fu_2909_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter19 == 1'b1) & (ap_enable_reg_pp5_iter18 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if ((((1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter19 == 1'b1) & (ap_enable_reg_pp5_iter18 == 1'b0)) | ((1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter1 == 1'b0) & (icmp_ln57_fu_2909_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_pp6_stage0;
        end
        ap_ST_fsm_pp6_stage0 : begin
            if ((~((ap_enable_reg_pp6_iter1 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone) & (icmp_ln120_fu_3892_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp6_stage0_subdone) & (ap_enable_reg_pp6_iter8 == 1'b1) & (ap_enable_reg_pp6_iter7 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if ((((ap_enable_reg_pp6_iter1 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone) & (icmp_ln120_fu_3892_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1)) | ((1'b0 == ap_block_pp6_stage0_subdone) & (ap_enable_reg_pp6_iter8 == 1'b1) & (ap_enable_reg_pp6_iter7 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state91;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_pp7_stage0;
        end
        ap_ST_fsm_pp7_stage0 : begin
            if ((~((1'b0 == ap_block_pp7_stage0_subdone) & (ap_enable_reg_pp7_iter1 == 1'b0) & (icmp_ln74_fu_4270_p2 == 1'd1) & (ap_enable_reg_pp7_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp7_stage0_subdone) & (ap_enable_reg_pp7_iter10 == 1'b1) & (ap_enable_reg_pp7_iter9 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end else if ((((1'b0 == ap_block_pp7_stage0_subdone) & (ap_enable_reg_pp7_iter10 == 1'b1) & (ap_enable_reg_pp7_iter9 == 1'b0)) | ((1'b0 == ap_block_pp7_stage0_subdone) & (ap_enable_reg_pp7_iter1 == 1'b0) & (icmp_ln74_fu_4270_p2 == 1'd1) & (ap_enable_reg_pp7_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state111;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            if (((1'b1 == ap_CS_fsm_state112) & (icmp_ln138_fu_4964_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state112;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state113;
            end
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_1697_p2 = (12'd1075 - zext_ln455_fu_1670_p1);

assign add_ln107_fu_2482_p2 = (i_2_reg_1512 + 6'd1);

assign add_ln1118_1_fu_1973_p2 = (add_ln1118_fu_1967_p2 + select_ln21_1_cast_fu_1942_p1);

assign add_ln1118_2_fu_2423_p2 = (tmp_24_fu_2416_p3 + select_ln40_1_cast_fu_2409_p1);

assign add_ln1118_fu_1967_p2 = (tmp_22_fu_1949_p3 + zext_ln1118_fu_1963_p1);

assign add_ln1192_10_fu_3284_p2 = (shl_ln728_s_fu_3277_p3 + mul_ln703_10_reg_6378);

assign add_ln1192_11_fu_3307_p2 = (shl_ln728_10_fu_3299_p3 + mul_ln703_11_reg_6388);

assign add_ln1192_12_fu_3345_p2 = (shl_ln728_11_fu_3338_p3 + mul_ln703_12_reg_6423);

assign add_ln1192_13_fu_3368_p2 = (shl_ln728_12_fu_3360_p3 + mul_ln703_13_reg_6433);

assign add_ln1192_14_fu_3406_p2 = (shl_ln728_13_fu_3399_p3 + mul_ln703_14_reg_6468);

assign add_ln1192_15_fu_3429_p2 = (shl_ln728_14_fu_3421_p3 + mul_ln703_15_reg_6478);

assign add_ln1192_16_fu_3467_p2 = (shl_ln728_15_fu_3460_p3 + mul_ln703_16_reg_6513);

assign add_ln1192_17_fu_3490_p2 = (shl_ln728_16_fu_3482_p3 + mul_ln703_17_reg_6523);

assign add_ln1192_18_fu_3528_p2 = (shl_ln728_17_fu_3521_p3 + mul_ln703_18_reg_6558);

assign add_ln1192_19_fu_3551_p2 = (shl_ln728_18_fu_3543_p3 + mul_ln703_19_reg_6568);

assign add_ln1192_1_fu_3002_p2 = (shl_ln728_1_fu_2994_p3 + mul_ln703_1_reg_6163);

assign add_ln1192_20_fu_3589_p2 = (shl_ln728_19_fu_3582_p3 + mul_ln703_20_reg_6603);

assign add_ln1192_21_fu_3612_p2 = (shl_ln728_20_fu_3604_p3 + mul_ln703_21_reg_6613);

assign add_ln1192_22_fu_3650_p2 = (shl_ln728_21_fu_3643_p3 + mul_ln703_22_reg_6648);

assign add_ln1192_23_fu_3673_p2 = (shl_ln728_22_fu_3665_p3 + mul_ln703_23_reg_6658);

assign add_ln1192_24_fu_3711_p2 = (shl_ln728_23_fu_3704_p3 + mul_ln703_24_reg_6693);

assign add_ln1192_25_fu_3734_p2 = (shl_ln728_24_fu_3726_p3 + mul_ln703_25_reg_6703);

assign add_ln1192_26_fu_3772_p2 = (shl_ln728_25_fu_3765_p3 + mul_ln703_26_reg_6733);

assign add_ln1192_27_fu_3795_p2 = (shl_ln728_26_fu_3787_p3 + mul_ln703_27_reg_6743);

assign add_ln1192_28_fu_3825_p2 = (shl_ln728_27_fu_3818_p3 + mul_ln703_28_reg_6763);

assign add_ln1192_29_fu_3848_p2 = (shl_ln728_28_fu_3840_p3 + mul_ln703_29_reg_6773);

assign add_ln1192_2_fu_3040_p2 = (shl_ln728_2_fu_3033_p3 + mul_ln703_2_reg_6198);

assign add_ln1192_30_fu_3870_p2 = (shl_ln728_29_fu_3863_p3 + mul_ln703_30_reg_6783);

assign add_ln1192_32_fu_4417_p2 = (shl_ln728_30_fu_4410_p3 + mul_ln1118_3_reg_7199);

assign add_ln1192_33_fu_4440_p2 = (shl_ln728_31_fu_4432_p3 + mul_ln1118_4_reg_7209);

assign add_ln1192_34_fu_4502_p2 = (shl_ln728_32_fu_4495_p3 + mul_ln1118_5_reg_7234);

assign add_ln1192_35_fu_4525_p2 = (shl_ln728_33_fu_4517_p3 + mul_ln1118_6_reg_7244);

assign add_ln1192_36_fu_4587_p2 = (shl_ln728_34_fu_4580_p3 + mul_ln1118_7_reg_7269);

assign add_ln1192_37_fu_4610_p2 = (shl_ln728_35_fu_4602_p3 + mul_ln1118_8_reg_7279);

assign add_ln1192_38_fu_4672_p2 = (shl_ln728_36_fu_4665_p3 + mul_ln1118_9_reg_7304);

assign add_ln1192_39_fu_4695_p2 = (shl_ln728_37_fu_4687_p3 + mul_ln1118_10_reg_7314);

assign add_ln1192_3_fu_3063_p2 = (shl_ln728_3_fu_3055_p3 + mul_ln703_3_reg_6208);

assign add_ln1192_40_fu_4757_p2 = (shl_ln728_38_fu_4750_p3 + mul_ln1118_11_reg_7339);

assign add_ln1192_41_fu_4780_p2 = (shl_ln728_39_fu_4772_p3 + mul_ln1118_12_reg_7349);

assign add_ln1192_42_fu_4830_p2 = (shl_ln728_40_fu_4823_p3 + mul_ln1118_13_reg_7374);

assign add_ln1192_43_fu_4853_p2 = (shl_ln728_41_fu_4845_p3 + mul_ln1118_14_reg_7384);

assign add_ln1192_44_fu_4883_p2 = (shl_ln728_42_fu_4876_p3 + mul_ln1118_15_reg_7404);

assign add_ln1192_45_fu_4906_p2 = (shl_ln728_43_fu_4898_p3 + mul_ln1118_16_reg_7414);

assign add_ln1192_46_fu_4928_p2 = (shl_ln728_44_fu_4921_p3 + mul_ln1118_17_reg_7424);

assign add_ln1192_4_fu_3101_p2 = (shl_ln728_4_fu_3094_p3 + mul_ln703_4_reg_6243);

assign add_ln1192_5_fu_3124_p2 = (shl_ln728_5_fu_3116_p3 + mul_ln703_5_reg_6253);

assign add_ln1192_6_fu_3162_p2 = (shl_ln728_6_fu_3155_p3 + mul_ln703_6_reg_6288);

assign add_ln1192_7_fu_3185_p2 = (shl_ln728_7_fu_3177_p3 + mul_ln703_7_reg_6298);

assign add_ln1192_8_fu_3223_p2 = (shl_ln728_8_fu_3216_p3 + mul_ln703_8_reg_6333);

assign add_ln1192_9_fu_3246_p2 = (shl_ln728_9_fu_3238_p3 + mul_ln703_9_reg_6343);

assign add_ln1192_fu_2979_p2 = (shl_ln_fu_2972_p3 + mul_ln703_reg_6153);

assign add_ln120_fu_3886_p2 = (i_3_reg_1534 + 5'd1);

assign add_ln138_fu_4958_p2 = (i_4_reg_1557 + 2'd1);

assign add_ln21_1_fu_1890_p2 = (indvar_flatten_reg_1411 + 16'd1);

assign add_ln21_fu_1902_p2 = (ap_phi_mux_j_phi_fu_1426_p4 + 7'd1);

assign add_ln25_fu_1930_p2 = (select_ln21_fu_1914_p3 + 10'd1);

assign add_ln40_1_fu_2357_p2 = (indvar_flatten10_reg_1467 + 12'd1);

assign add_ln40_fu_2369_p2 = (ap_phi_mux_j_1_phi_fu_1482_p4 + 6'd1);

assign add_ln44_fu_2397_p2 = (select_ln40_fu_2381_p3 + 7'd1);

assign add_ln57_fu_2903_p2 = (j_2_reg_1523 + 5'd1);

assign add_ln581_fu_1709_p2 = ($signed(F2_fu_1697_p2) + $signed(12'd4088));

assign add_ln5_fu_1613_p2 = (i_reg_1400 + 10'd1);

assign add_ln74_fu_4264_p2 = (ap_phi_mux_j_3_phi_fu_1549_p4 + 2'd1);

assign add_ln908_1_fu_2665_p2 = ($signed(sub_ln894_1_reg_5492_pp4_iter3_reg) + $signed(32'd4294967242));

assign add_ln908_2_fu_4069_p2 = ($signed(sub_ln894_2_reg_6828_pp6_iter3_reg) + $signed(32'd4294967242));

assign add_ln908_fu_2218_p2 = ($signed(sub_ln894_reg_5303_pp2_iter3_reg) + $signed(32'd4294967242));

assign add_ln915_1_fu_2754_p2 = (sub_ln915_1_fu_2749_p2 + select_ln893_1_fu_2742_p3);

assign add_ln915_2_fu_4158_p2 = (sub_ln915_2_fu_4153_p2 + select_ln893_2_fu_4146_p3);

assign add_ln915_fu_2307_p2 = (sub_ln915_fu_2302_p2 + select_ln893_fu_2295_p3);

assign add_ln92_fu_2035_p2 = (i_1_reg_1456 + 7'd1);

assign and_ln1506_1_fu_2798_p2 = (or_ln1506_1_fu_2794_p2 & grp_fu_1594_p2);

assign and_ln1506_2_fu_4202_p2 = (or_ln1506_2_fu_4198_p2 & grp_fu_1594_p2);

assign and_ln1506_fu_2351_p2 = (or_ln1506_fu_2347_p2 & grp_fu_1594_p2);

assign and_ln581_fu_1766_p2 = (xor_ln582_fu_1760_p2 & icmp_ln581_fu_1703_p2);

assign and_ln582_fu_1853_p2 = (xor_ln571_fu_1848_p2 & icmp_ln582_reg_5143_pp0_iter5_reg);

assign and_ln585_fu_1831_p2 = (icmp_ln585_fu_1826_p2 & and_ln581_reg_5154);

assign and_ln603_fu_1784_p2 = (xor_ln581_fu_1778_p2 & icmp_ln603_fu_1749_p2);

assign and_ln899_1_fu_2202_p2 = (xor_ln899_fu_2184_p2 & p_Result_17_reg_5326);

assign and_ln899_2_fu_2613_p2 = (tmp_V_7_reg_5486 & or_ln899_fu_2607_p2);

assign and_ln899_3_fu_2649_p2 = (xor_ln899_1_fu_2631_p2 & p_Result_21_reg_5515);

assign and_ln899_4_fu_4017_p2 = (tmp_V_8_reg_6822 & or_ln899_4_fu_4011_p2);

assign and_ln899_5_fu_4053_p2 = (xor_ln899_2_fu_4035_p2 & p_Result_25_reg_6851);

assign and_ln899_fu_2166_p2 = (tmp_V_6_reg_5297 & or_ln899_3_fu_2160_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp7_stage0 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd38];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state100_pp7_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state101_pp7_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state102_pp7_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state103_pp7_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state104_pp7_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state105_pp7_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state106_pp7_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state107_pp7_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state108_pp7_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state109_pp7_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state110_pp7_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp2_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp2_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp2_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp2_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp3_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp3_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp4_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp4_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp4_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp4_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp4_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp4_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp5_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp5_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp5_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp5_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp5_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp5_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp5_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp5_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp5_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp5_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp5_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp5_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp5_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp5_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp5_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp5_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp5_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp5_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp6_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp6_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp6_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp6_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp6_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp6_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp6_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp6_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

assign ap_enable_pp7 = (ap_idle_pp7 ^ 1'b1);

assign ap_return = $signed(ret_V_5_fu_5067_p3);

assign ashr_ln586_fu_1802_p2 = $signed(man_V_2_reg_5132) >>> zext_ln586_fu_1798_p1;

assign bitcast_ln734_1_fu_2790_p1 = p_Result_22_reg_5551;

assign bitcast_ln734_2_fu_4194_p1 = p_Result_26_reg_6887;

assign bitcast_ln734_fu_2343_p1 = p_Result_18_reg_5362;

assign grp_fu_1591_p0 = input_img_load_reg_5098;

assign grp_fu_2925_p1 = sext_ln1116_reg_5875;

assign grp_fu_2933_p1 = sext_ln1116_1_reg_5880;

assign grp_fu_2941_p1 = sext_ln1116_2_reg_5885;

assign grp_fu_2959_p1 = sext_ln1116_3_reg_5890;

assign grp_fu_2967_p1 = sext_ln1116_4_reg_5895;

assign grp_fu_3020_p1 = sext_ln1116_5_reg_5900;

assign grp_fu_3028_p1 = sext_ln1116_6_reg_5905;

assign grp_fu_3081_p1 = sext_ln1116_7_reg_5910;

assign grp_fu_3089_p1 = sext_ln1116_8_reg_5915;

assign grp_fu_3142_p1 = sext_ln1116_9_reg_5920;

assign grp_fu_3150_p1 = sext_ln1116_10_reg_5925;

assign grp_fu_3203_p1 = sext_ln1116_11_reg_5930;

assign grp_fu_3211_p1 = sext_ln1116_12_reg_5935;

assign grp_fu_3264_p1 = sext_ln1116_13_reg_5940;

assign grp_fu_3272_p1 = sext_ln1116_14_reg_5945;

assign grp_fu_3325_p1 = sext_ln1116_15_reg_5950;

assign grp_fu_3333_p1 = sext_ln1116_16_reg_5955;

assign grp_fu_3386_p1 = sext_ln1116_17_reg_5960;

assign grp_fu_3394_p1 = sext_ln1116_18_reg_5965;

assign grp_fu_3447_p1 = sext_ln1116_19_reg_5970;

assign grp_fu_3455_p1 = sext_ln1116_20_reg_5975;

assign grp_fu_3508_p1 = sext_ln1116_21_reg_5980;

assign grp_fu_3516_p1 = sext_ln1116_22_reg_5985;

assign grp_fu_3569_p1 = sext_ln1116_23_reg_5990;

assign grp_fu_3577_p1 = sext_ln1116_24_reg_5995;

assign grp_fu_3630_p1 = sext_ln1116_25_reg_6000;

assign grp_fu_3638_p1 = sext_ln1116_26_reg_6005;

assign grp_fu_3691_p1 = sext_ln1116_27_reg_6010;

assign grp_fu_3699_p1 = sext_ln1116_28_reg_6015;

assign grp_fu_3752_p1 = sext_ln1116_29_reg_6020;

assign grp_fu_3760_p1 = sext_ln1116_30_reg_6025;

assign grp_fu_3813_p1 = temp_output2_0_V_load_31_cast_reg_6030;

assign grp_fu_4315_p1 = sext_ln1116_31_reg_7070;

assign grp_fu_4323_p1 = sext_ln1116_32_reg_7075;

assign grp_fu_4331_p1 = sext_ln1116_33_reg_7080;

assign grp_fu_4373_p1 = sext_ln1116_34_reg_7085;

assign grp_fu_4381_p1 = sext_ln1116_35_reg_7090;

assign grp_fu_4458_p1 = sext_ln1116_36_reg_7095;

assign grp_fu_4466_p1 = sext_ln1116_37_reg_7100;

assign grp_fu_4543_p1 = sext_ln1116_38_reg_7105;

assign grp_fu_4551_p1 = sext_ln1116_39_reg_7110;

assign grp_fu_4628_p1 = sext_ln1116_40_reg_7115;

assign grp_fu_4636_p1 = sext_ln1116_41_reg_7120;

assign grp_fu_4713_p1 = sext_ln1116_42_reg_7125;

assign grp_fu_4721_p1 = sext_ln1116_43_reg_7130;

assign grp_fu_4798_p1 = sext_ln1116_44_reg_7135;

assign grp_fu_4806_p1 = sext_ln1116_45_reg_7140;

assign grp_fu_4871_p1 = temp_output3_0_V_load_15_cast_reg_7145;

assign i_1_cast_fu_2047_p1 = i_1_reg_1456;

assign i_2_cast_fu_2494_p1 = i_2_reg_1512;

assign i_3_cast_fu_3898_p1 = i_3_reg_1534;

assign i_cast_fu_1625_p1 = i_reg_1400;

assign icmp_ln107_fu_2488_p2 = ((i_2_reg_1512 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln120_fu_3892_p2 = ((i_3_reg_1534 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln138_fu_4964_p2 = ((i_4_reg_1557 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln1494_fu_4991_p2 = (($signed(tmp_21_fu_4979_p5) > $signed(max_val_V_reg_1580)) ? 1'b1 : 1'b0);

assign icmp_ln1506_1_fu_2338_p2 = ((trunc_ln6_reg_5357 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln1506_2_fu_2779_p2 = ((add_ln915_1_fu_2754_p2 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln1506_3_fu_2785_p2 = ((trunc_ln1506_1_reg_5546 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln1506_4_fu_4183_p2 = ((add_ln915_2_fu_4158_p2 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln1506_5_fu_4189_p2 = ((trunc_ln1506_2_reg_6882 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln1506_fu_2332_p2 = ((add_ln915_fu_2307_p2 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln21_fu_1896_p2 = ((indvar_flatten_reg_1411 == 16'd61440) ? 1'b1 : 1'b0);

assign icmp_ln25_fu_1908_p2 = ((ap_phi_mux_k_phi_fu_1437_p4 == 10'd768) ? 1'b1 : 1'b0);

assign icmp_ln40_fu_2363_p2 = ((indvar_flatten10_reg_1467 == 12'd2560) ? 1'b1 : 1'b0);

assign icmp_ln44_fu_2375_p2 = ((ap_phi_mux_k_1_phi_fu_1493_p4 == 7'd80) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_1664_p2 = ((trunc_ln555_fu_1638_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln57_fu_2909_p2 = ((j_2_reg_1523 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln581_fu_1703_p2 = (($signed(F2_fu_1697_p2) > $signed(12'd8)) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_1729_p2 = ((F2_fu_1697_p2 == 12'd8) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_1826_p2 = ((sh_amt_reg_5137 > 12'd53) ? 1'b1 : 1'b0);

assign icmp_ln5_fu_1619_p2 = ((i_reg_1400 == 10'd768) ? 1'b1 : 1'b0);

assign icmp_ln603_fu_1749_p2 = ((tmp_72_fu_1739_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln74_fu_4270_p2 = ((ap_phi_mux_j_3_phi_fu_1549_p4 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln851_fu_5047_p2 = ((trunc_ln851_fu_5043_p1 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln885_1_fu_2499_p2 = ((temp_output2_0_V_q1 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln885_2_fu_3903_p2 = ((temp_output3_0_V_q1 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln885_fu_2052_p2 = ((temp_output_0_V_q1 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln896_1_fu_2582_p2 = (($signed(tmp_79_reg_5505) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln896_2_fu_3986_p2 = (($signed(tmp_83_reg_6841) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln896_fu_2135_p2 = (($signed(tmp_75_reg_5316) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln899_1_fu_2618_p2 = ((and_ln899_2_fu_2613_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln899_2_fu_4022_p2 = ((and_ln899_4_fu_4017_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln899_fu_2171_p2 = ((and_ln899_fu_2166_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln908_1_fu_2637_p2 = (($signed(lsb_index_1_reg_5498) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln908_2_fu_4041_p2 = (($signed(lsb_index_2_reg_6834) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln908_fu_2190_p2 = (($signed(lsb_index_reg_5309) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln92_fu_2041_p2 = ((i_1_reg_1456 == 7'd80) ? 1'b1 : 1'b0);

assign ifzero5_fu_2403_p2 = ((add_ln44_fu_2397_p2 == 7'd80) ? 1'b1 : 1'b0);

assign ifzero_fu_1936_p2 = ((add_ln25_fu_1930_p2 == 10'd768) ? 1'b1 : 1'b0);

assign input_img_address0 = i_cast_fu_1625_p1;

assign ireg_fu_1634_p1 = grp_fu_1591_p1;

assign j_2_cast_fu_2915_p1 = j_2_reg_1523;

assign k_1_cast_fu_2412_p1 = select_ln40_reg_5400;

assign k_cast_fu_1945_p1 = select_ln21_reg_5205;


always @ (p_Result_20_fu_2526_p4) begin
    if (p_Result_20_fu_2526_p4[0] == 1'b1) begin
        l_1_fu_2536_p3 = 32'd0;
    end else if (p_Result_20_fu_2526_p4[1] == 1'b1) begin
        l_1_fu_2536_p3 = 32'd1;
    end else if (p_Result_20_fu_2526_p4[2] == 1'b1) begin
        l_1_fu_2536_p3 = 32'd2;
    end else if (p_Result_20_fu_2526_p4[3] == 1'b1) begin
        l_1_fu_2536_p3 = 32'd3;
    end else if (p_Result_20_fu_2526_p4[4] == 1'b1) begin
        l_1_fu_2536_p3 = 32'd4;
    end else if (p_Result_20_fu_2526_p4[5] == 1'b1) begin
        l_1_fu_2536_p3 = 32'd5;
    end else if (p_Result_20_fu_2526_p4[6] == 1'b1) begin
        l_1_fu_2536_p3 = 32'd6;
    end else if (p_Result_20_fu_2526_p4[7] == 1'b1) begin
        l_1_fu_2536_p3 = 32'd7;
    end else if (p_Result_20_fu_2526_p4[8] == 1'b1) begin
        l_1_fu_2536_p3 = 32'd8;
    end else if (p_Result_20_fu_2526_p4[9] == 1'b1) begin
        l_1_fu_2536_p3 = 32'd9;
    end else if (p_Result_20_fu_2526_p4[10] == 1'b1) begin
        l_1_fu_2536_p3 = 32'd10;
    end else if (p_Result_20_fu_2526_p4[11] == 1'b1) begin
        l_1_fu_2536_p3 = 32'd11;
    end else if (p_Result_20_fu_2526_p4[12] == 1'b1) begin
        l_1_fu_2536_p3 = 32'd12;
    end else if (p_Result_20_fu_2526_p4[13] == 1'b1) begin
        l_1_fu_2536_p3 = 32'd13;
    end else if (p_Result_20_fu_2526_p4[14] == 1'b1) begin
        l_1_fu_2536_p3 = 32'd14;
    end else if (p_Result_20_fu_2526_p4[15] == 1'b1) begin
        l_1_fu_2536_p3 = 32'd15;
    end else if (p_Result_20_fu_2526_p4[16] == 1'b1) begin
        l_1_fu_2536_p3 = 32'd16;
    end else if (p_Result_20_fu_2526_p4[17] == 1'b1) begin
        l_1_fu_2536_p3 = 32'd17;
    end else if (p_Result_20_fu_2526_p4[18] == 1'b1) begin
        l_1_fu_2536_p3 = 32'd18;
    end else if (p_Result_20_fu_2526_p4[19] == 1'b1) begin
        l_1_fu_2536_p3 = 32'd19;
    end else if (p_Result_20_fu_2526_p4[20] == 1'b1) begin
        l_1_fu_2536_p3 = 32'd20;
    end else if (p_Result_20_fu_2526_p4[21] == 1'b1) begin
        l_1_fu_2536_p3 = 32'd21;
    end else if (p_Result_20_fu_2526_p4[22] == 1'b1) begin
        l_1_fu_2536_p3 = 32'd22;
    end else if (p_Result_20_fu_2526_p4[23] == 1'b1) begin
        l_1_fu_2536_p3 = 32'd23;
    end else if (p_Result_20_fu_2526_p4[24] == 1'b1) begin
        l_1_fu_2536_p3 = 32'd24;
    end else if (p_Result_20_fu_2526_p4[25] == 1'b1) begin
        l_1_fu_2536_p3 = 32'd25;
    end else if (p_Result_20_fu_2526_p4[26] == 1'b1) begin
        l_1_fu_2536_p3 = 32'd26;
    end else if (p_Result_20_fu_2526_p4[27] == 1'b1) begin
        l_1_fu_2536_p3 = 32'd27;
    end else if (p_Result_20_fu_2526_p4[28] == 1'b1) begin
        l_1_fu_2536_p3 = 32'd28;
    end else if (p_Result_20_fu_2526_p4[29] == 1'b1) begin
        l_1_fu_2536_p3 = 32'd29;
    end else if (p_Result_20_fu_2526_p4[30] == 1'b1) begin
        l_1_fu_2536_p3 = 32'd30;
    end else if (p_Result_20_fu_2526_p4[31] == 1'b1) begin
        l_1_fu_2536_p3 = 32'd31;
    end else begin
        l_1_fu_2536_p3 = 32'd32;
    end
end


always @ (p_Result_24_fu_3930_p4) begin
    if (p_Result_24_fu_3930_p4[0] == 1'b1) begin
        l_2_fu_3940_p3 = 32'd0;
    end else if (p_Result_24_fu_3930_p4[1] == 1'b1) begin
        l_2_fu_3940_p3 = 32'd1;
    end else if (p_Result_24_fu_3930_p4[2] == 1'b1) begin
        l_2_fu_3940_p3 = 32'd2;
    end else if (p_Result_24_fu_3930_p4[3] == 1'b1) begin
        l_2_fu_3940_p3 = 32'd3;
    end else if (p_Result_24_fu_3930_p4[4] == 1'b1) begin
        l_2_fu_3940_p3 = 32'd4;
    end else if (p_Result_24_fu_3930_p4[5] == 1'b1) begin
        l_2_fu_3940_p3 = 32'd5;
    end else if (p_Result_24_fu_3930_p4[6] == 1'b1) begin
        l_2_fu_3940_p3 = 32'd6;
    end else if (p_Result_24_fu_3930_p4[7] == 1'b1) begin
        l_2_fu_3940_p3 = 32'd7;
    end else if (p_Result_24_fu_3930_p4[8] == 1'b1) begin
        l_2_fu_3940_p3 = 32'd8;
    end else if (p_Result_24_fu_3930_p4[9] == 1'b1) begin
        l_2_fu_3940_p3 = 32'd9;
    end else if (p_Result_24_fu_3930_p4[10] == 1'b1) begin
        l_2_fu_3940_p3 = 32'd10;
    end else if (p_Result_24_fu_3930_p4[11] == 1'b1) begin
        l_2_fu_3940_p3 = 32'd11;
    end else if (p_Result_24_fu_3930_p4[12] == 1'b1) begin
        l_2_fu_3940_p3 = 32'd12;
    end else if (p_Result_24_fu_3930_p4[13] == 1'b1) begin
        l_2_fu_3940_p3 = 32'd13;
    end else if (p_Result_24_fu_3930_p4[14] == 1'b1) begin
        l_2_fu_3940_p3 = 32'd14;
    end else if (p_Result_24_fu_3930_p4[15] == 1'b1) begin
        l_2_fu_3940_p3 = 32'd15;
    end else if (p_Result_24_fu_3930_p4[16] == 1'b1) begin
        l_2_fu_3940_p3 = 32'd16;
    end else if (p_Result_24_fu_3930_p4[17] == 1'b1) begin
        l_2_fu_3940_p3 = 32'd17;
    end else if (p_Result_24_fu_3930_p4[18] == 1'b1) begin
        l_2_fu_3940_p3 = 32'd18;
    end else if (p_Result_24_fu_3930_p4[19] == 1'b1) begin
        l_2_fu_3940_p3 = 32'd19;
    end else if (p_Result_24_fu_3930_p4[20] == 1'b1) begin
        l_2_fu_3940_p3 = 32'd20;
    end else if (p_Result_24_fu_3930_p4[21] == 1'b1) begin
        l_2_fu_3940_p3 = 32'd21;
    end else if (p_Result_24_fu_3930_p4[22] == 1'b1) begin
        l_2_fu_3940_p3 = 32'd22;
    end else if (p_Result_24_fu_3930_p4[23] == 1'b1) begin
        l_2_fu_3940_p3 = 32'd23;
    end else if (p_Result_24_fu_3930_p4[24] == 1'b1) begin
        l_2_fu_3940_p3 = 32'd24;
    end else if (p_Result_24_fu_3930_p4[25] == 1'b1) begin
        l_2_fu_3940_p3 = 32'd25;
    end else if (p_Result_24_fu_3930_p4[26] == 1'b1) begin
        l_2_fu_3940_p3 = 32'd26;
    end else if (p_Result_24_fu_3930_p4[27] == 1'b1) begin
        l_2_fu_3940_p3 = 32'd27;
    end else if (p_Result_24_fu_3930_p4[28] == 1'b1) begin
        l_2_fu_3940_p3 = 32'd28;
    end else if (p_Result_24_fu_3930_p4[29] == 1'b1) begin
        l_2_fu_3940_p3 = 32'd29;
    end else if (p_Result_24_fu_3930_p4[30] == 1'b1) begin
        l_2_fu_3940_p3 = 32'd30;
    end else if (p_Result_24_fu_3930_p4[31] == 1'b1) begin
        l_2_fu_3940_p3 = 32'd31;
    end else begin
        l_2_fu_3940_p3 = 32'd32;
    end
end


always @ (p_Result_16_fu_2079_p4) begin
    if (p_Result_16_fu_2079_p4[0] == 1'b1) begin
        l_fu_2089_p3 = 32'd0;
    end else if (p_Result_16_fu_2079_p4[1] == 1'b1) begin
        l_fu_2089_p3 = 32'd1;
    end else if (p_Result_16_fu_2079_p4[2] == 1'b1) begin
        l_fu_2089_p3 = 32'd2;
    end else if (p_Result_16_fu_2079_p4[3] == 1'b1) begin
        l_fu_2089_p3 = 32'd3;
    end else if (p_Result_16_fu_2079_p4[4] == 1'b1) begin
        l_fu_2089_p3 = 32'd4;
    end else if (p_Result_16_fu_2079_p4[5] == 1'b1) begin
        l_fu_2089_p3 = 32'd5;
    end else if (p_Result_16_fu_2079_p4[6] == 1'b1) begin
        l_fu_2089_p3 = 32'd6;
    end else if (p_Result_16_fu_2079_p4[7] == 1'b1) begin
        l_fu_2089_p3 = 32'd7;
    end else if (p_Result_16_fu_2079_p4[8] == 1'b1) begin
        l_fu_2089_p3 = 32'd8;
    end else if (p_Result_16_fu_2079_p4[9] == 1'b1) begin
        l_fu_2089_p3 = 32'd9;
    end else if (p_Result_16_fu_2079_p4[10] == 1'b1) begin
        l_fu_2089_p3 = 32'd10;
    end else if (p_Result_16_fu_2079_p4[11] == 1'b1) begin
        l_fu_2089_p3 = 32'd11;
    end else if (p_Result_16_fu_2079_p4[12] == 1'b1) begin
        l_fu_2089_p3 = 32'd12;
    end else if (p_Result_16_fu_2079_p4[13] == 1'b1) begin
        l_fu_2089_p3 = 32'd13;
    end else if (p_Result_16_fu_2079_p4[14] == 1'b1) begin
        l_fu_2089_p3 = 32'd14;
    end else if (p_Result_16_fu_2079_p4[15] == 1'b1) begin
        l_fu_2089_p3 = 32'd15;
    end else if (p_Result_16_fu_2079_p4[16] == 1'b1) begin
        l_fu_2089_p3 = 32'd16;
    end else if (p_Result_16_fu_2079_p4[17] == 1'b1) begin
        l_fu_2089_p3 = 32'd17;
    end else if (p_Result_16_fu_2079_p4[18] == 1'b1) begin
        l_fu_2089_p3 = 32'd18;
    end else if (p_Result_16_fu_2079_p4[19] == 1'b1) begin
        l_fu_2089_p3 = 32'd19;
    end else if (p_Result_16_fu_2079_p4[20] == 1'b1) begin
        l_fu_2089_p3 = 32'd20;
    end else if (p_Result_16_fu_2079_p4[21] == 1'b1) begin
        l_fu_2089_p3 = 32'd21;
    end else if (p_Result_16_fu_2079_p4[22] == 1'b1) begin
        l_fu_2089_p3 = 32'd22;
    end else if (p_Result_16_fu_2079_p4[23] == 1'b1) begin
        l_fu_2089_p3 = 32'd23;
    end else if (p_Result_16_fu_2079_p4[24] == 1'b1) begin
        l_fu_2089_p3 = 32'd24;
    end else if (p_Result_16_fu_2079_p4[25] == 1'b1) begin
        l_fu_2089_p3 = 32'd25;
    end else if (p_Result_16_fu_2079_p4[26] == 1'b1) begin
        l_fu_2089_p3 = 32'd26;
    end else if (p_Result_16_fu_2079_p4[27] == 1'b1) begin
        l_fu_2089_p3 = 32'd27;
    end else if (p_Result_16_fu_2079_p4[28] == 1'b1) begin
        l_fu_2089_p3 = 32'd28;
    end else if (p_Result_16_fu_2079_p4[29] == 1'b1) begin
        l_fu_2089_p3 = 32'd29;
    end else if (p_Result_16_fu_2079_p4[30] == 1'b1) begin
        l_fu_2089_p3 = 32'd30;
    end else if (p_Result_16_fu_2079_p4[31] == 1'b1) begin
        l_fu_2089_p3 = 32'd31;
    end else begin
        l_fu_2089_p3 = 32'd32;
    end
end

assign layer3_weights_V_0_address0 = j_2_cast_fu_2915_p1;

assign layer3_weights_V_10_address0 = j_2_cast_reg_6044_pp5_iter3_reg;

assign layer3_weights_V_11_address0 = j_2_cast_reg_6044_pp5_iter4_reg;

assign layer3_weights_V_12_address0 = j_2_cast_reg_6044_pp5_iter4_reg;

assign layer3_weights_V_13_address0 = j_2_cast_reg_6044_pp5_iter5_reg;

assign layer3_weights_V_14_address0 = j_2_cast_reg_6044_pp5_iter5_reg;

assign layer3_weights_V_15_address0 = j_2_cast_reg_6044_pp5_iter6_reg;

assign layer3_weights_V_16_address0 = j_2_cast_reg_6044_pp5_iter6_reg;

assign layer3_weights_V_17_address0 = j_2_cast_reg_6044_pp5_iter7_reg;

assign layer3_weights_V_18_address0 = j_2_cast_reg_6044_pp5_iter7_reg;

assign layer3_weights_V_19_address0 = j_2_cast_reg_6044_pp5_iter8_reg;

assign layer3_weights_V_1_address0 = j_2_cast_fu_2915_p1;

assign layer3_weights_V_20_address0 = j_2_cast_reg_6044_pp5_iter8_reg;

assign layer3_weights_V_21_address0 = j_2_cast_reg_6044_pp5_iter9_reg;

assign layer3_weights_V_22_address0 = j_2_cast_reg_6044_pp5_iter9_reg;

assign layer3_weights_V_23_address0 = j_2_cast_reg_6044_pp5_iter10_reg;

assign layer3_weights_V_24_address0 = j_2_cast_reg_6044_pp5_iter10_reg;

assign layer3_weights_V_25_address0 = j_2_cast_reg_6044_pp5_iter11_reg;

assign layer3_weights_V_26_address0 = j_2_cast_reg_6044_pp5_iter11_reg;

assign layer3_weights_V_27_address0 = j_2_cast_reg_6044_pp5_iter12_reg;

assign layer3_weights_V_28_address0 = j_2_cast_reg_6044_pp5_iter12_reg;

assign layer3_weights_V_29_address0 = j_2_cast_reg_6044_pp5_iter13_reg;

assign layer3_weights_V_2_address0 = j_2_cast_fu_2915_p1;

assign layer3_weights_V_30_address0 = j_2_cast_reg_6044_pp5_iter13_reg;

assign layer3_weights_V_31_address0 = j_2_cast_reg_6044_pp5_iter14_reg;

assign layer3_weights_V_3_address0 = j_2_cast_reg_6044;

assign layer3_weights_V_4_address0 = j_2_cast_reg_6044;

assign layer3_weights_V_5_address0 = j_2_cast_reg_6044_pp5_iter1_reg;

assign layer3_weights_V_6_address0 = j_2_cast_reg_6044_pp5_iter1_reg;

assign layer3_weights_V_7_address0 = j_2_cast_reg_6044_pp5_iter2_reg;

assign layer3_weights_V_8_address0 = j_2_cast_reg_6044_pp5_iter2_reg;

assign layer3_weights_V_9_address0 = j_2_cast_reg_6044_pp5_iter3_reg;

assign lhs_1_fu_2007_p3 = {{select_ln21_2_fu_2000_p3}, {8'd0}};

assign lhs_3_fu_2458_p3 = {{select_ln40_2_fu_2451_p3}, {8'd0}};

assign lsb_index_1_fu_2550_p2 = ($signed(sub_ln894_1_fu_2544_p2) + $signed(32'd4294967243));

assign lsb_index_2_fu_3954_p2 = ($signed(sub_ln894_2_fu_3948_p2) + $signed(32'd4294967243));

assign lsb_index_fu_2103_p2 = ($signed(sub_ln894_fu_2097_p2) + $signed(32'd4294967243));

assign lshr_ln897_1_fu_2596_p2 = 32'd4294967295 >> zext_ln897_1_fu_2592_p1;

assign lshr_ln897_2_fu_4000_p2 = 32'd4294967295 >> zext_ln897_2_fu_3996_p1;

assign lshr_ln897_fu_2149_p2 = 32'd4294967295 >> zext_ln897_fu_2145_p1;

assign lshr_ln908_1_fu_2674_p2 = zext_ln907_1_fu_2662_p1 >> zext_ln908_1_fu_2670_p1;

assign lshr_ln908_2_fu_4078_p2 = zext_ln907_2_fu_4066_p1 >> zext_ln908_2_fu_4074_p1;

assign lshr_ln908_fu_2227_p2 = zext_ln907_fu_2215_p1 >> zext_ln908_fu_2223_p1;

assign m_10_fu_4099_p3 = ((icmp_ln908_2_reg_6862[0:0] == 1'b1) ? lshr_ln908_2_fu_4078_p2 : shl_ln909_2_fu_4093_p2);

assign m_11_fu_4109_p2 = (m_10_fu_4099_p3 + zext_ln911_2_fu_4106_p1);

assign m_3_fu_2248_p3 = ((icmp_ln908_reg_5337[0:0] == 1'b1) ? lshr_ln908_fu_2227_p2 : shl_ln909_fu_2242_p2);

assign m_4_fu_2258_p2 = (m_3_fu_2248_p3 + zext_ln911_fu_2255_p1);

assign m_5_fu_2695_p3 = ((icmp_ln908_1_reg_5526[0:0] == 1'b1) ? lshr_ln908_1_fu_2674_p2 : shl_ln909_1_fu_2689_p2);

assign m_6_fu_2705_p2 = (m_5_fu_2695_p3 + zext_ln911_1_fu_2702_p1);

assign man_V_1_fu_1684_p2 = (54'd0 - zext_ln569_fu_1680_p1);

assign man_V_2_fu_1690_p3 = ((p_Result_13_reg_5109[0:0] == 1'b1) ? man_V_1_fu_1684_p2 : zext_ln569_fu_1680_p1);

assign max_idx_V_1_fu_5017_p3 = ((icmp_ln1494_fu_4991_p2[0:0] == 1'b1) ? zext_ln140_fu_5013_p1 : max_idx_V_reg_1568);

assign max_val_V_1_fu_4997_p3 = ((icmp_ln1494_fu_4991_p2[0:0] == 1'b1) ? tmp_21_fu_4979_p5 : max_val_V_reg_1580);

assign or_ln1506_1_fu_2794_p2 = (icmp_ln1506_3_reg_5561_pp4_iter6_reg | icmp_ln1506_2_reg_5556_pp4_iter6_reg);

assign or_ln1506_2_fu_4198_p2 = (icmp_ln1506_5_reg_6897_pp6_iter6_reg | icmp_ln1506_4_reg_6892_pp6_iter6_reg);

assign or_ln1506_fu_2347_p2 = (icmp_ln1506_reg_5367_pp2_iter6_reg | icmp_ln1506_1_reg_5372_pp2_iter6_reg);

assign or_ln571_1_fu_1878_p2 = (or_ln571_reg_5160_pp0_iter5_reg | and_ln581_reg_5154_pp0_iter5_reg);

assign or_ln571_fu_1790_p2 = (icmp_ln571_reg_5124 | and_ln603_fu_1784_p2);

assign or_ln581_fu_1772_p2 = (or_ln582_fu_1755_p2 | icmp_ln581_fu_1703_p2);

assign or_ln582_fu_1755_p2 = (icmp_ln582_fu_1729_p2 | icmp_ln571_reg_5124);

assign or_ln899_3_fu_2160_p2 = (shl_ln899_fu_2155_p2 | lshr_ln897_fu_2149_p2);

assign or_ln899_4_fu_4011_p2 = (shl_ln899_2_fu_4006_p2 | lshr_ln897_2_fu_4000_p2);

assign or_ln899_fu_2607_p2 = (shl_ln899_1_fu_2602_p2 | lshr_ln897_1_fu_2596_p2);

assign p_Result_12_fu_5035_p3 = max_idx_V_reg_1568[32'd31];

assign p_Result_14_fu_1673_p3 = {{1'd1}, {trunc_ln565_reg_5119}};

assign p_Result_15_fu_2064_p3 = reg_1599[32'd31];

integer ap_tvar_int_0;

always @ (tmp_V_6_fu_2072_p3) begin
    for (ap_tvar_int_0 = 32 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 31 - 0) begin
            p_Result_16_fu_2079_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_16_fu_2079_p4[ap_tvar_int_0] = tmp_V_6_fu_2072_p3[31 - ap_tvar_int_0];
        end
    end
end

assign p_Result_17_fu_2123_p3 = tmp_V_6_fu_2072_p3[lsb_index_fu_2103_p2];

assign p_Result_18_fu_2320_p5 = {{tmp_s_fu_2313_p3}, {zext_ln912_fu_2292_p1[51:0]}};

assign p_Result_19_fu_2511_p3 = reg_1603[32'd31];

integer ap_tvar_int_1;

always @ (tmp_V_7_fu_2519_p3) begin
    for (ap_tvar_int_1 = 32 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 31 - 0) begin
            p_Result_20_fu_2526_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            p_Result_20_fu_2526_p4[ap_tvar_int_1] = tmp_V_7_fu_2519_p3[31 - ap_tvar_int_1];
        end
    end
end

assign p_Result_21_fu_2570_p3 = tmp_V_7_fu_2519_p3[lsb_index_1_fu_2550_p2];

assign p_Result_22_fu_2767_p5 = {{tmp_1_fu_2760_p3}, {zext_ln912_1_fu_2739_p1[51:0]}};

assign p_Result_23_fu_3915_p3 = reg_1608[32'd31];

integer ap_tvar_int_2;

always @ (tmp_V_8_fu_3923_p3) begin
    for (ap_tvar_int_2 = 32 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 31 - 0) begin
            p_Result_24_fu_3930_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            p_Result_24_fu_3930_p4[ap_tvar_int_2] = tmp_V_8_fu_3923_p3[31 - ap_tvar_int_2];
        end
    end
end

assign p_Result_25_fu_3974_p3 = tmp_V_8_fu_3923_p3[lsb_index_2_fu_3954_p2];

assign p_Result_26_fu_4171_p5 = {{tmp_3_fu_4164_p3}, {zext_ln912_2_fu_4143_p1[51:0]}};

assign ret_V_1_fu_2466_p2 = (lhs_3_fu_2458_p3 + r_V_3_reg_5447);

assign ret_V_2_fu_5025_p4 = {{max_idx_V_reg_1568[31:8]}};

assign ret_V_3_fu_5053_p2 = (ret_V_2_fu_5025_p4 + 24'd1);

assign ret_V_5_fu_5067_p3 = ((p_Result_12_fu_5035_p3[0:0] == 1'b1) ? select_ln850_fu_5059_p3 : ret_V_2_fu_5025_p4);

assign ret_V_fu_2018_p2 = ($signed(lhs_1_fu_2007_p3) + $signed(sext_ln703_fu_2015_p1));

assign select_ln21_1_cast_fu_1942_p1 = select_ln21_1_reg_5212;

assign select_ln21_1_fu_1922_p3 = ((icmp_ln25_fu_1908_p2[0:0] == 1'b1) ? add_ln21_fu_1902_p2 : ap_phi_mux_j_phi_fu_1426_p4);

assign select_ln21_2_fu_2000_p3 = ((icmp_ln25_reg_5200_pp1_iter4_reg[0:0] == 1'b1) ? 32'd0 : sum_V_4_reg_1444);

assign select_ln21_fu_1914_p3 = ((icmp_ln25_fu_1908_p2[0:0] == 1'b1) ? 10'd0 : ap_phi_mux_k_phi_fu_1437_p4);

assign select_ln40_1_cast_fu_2409_p1 = select_ln40_1_reg_5406;

assign select_ln40_1_fu_2389_p3 = ((icmp_ln44_fu_2375_p2[0:0] == 1'b1) ? add_ln40_fu_2369_p2 : ap_phi_mux_j_1_phi_fu_1482_p4);

assign select_ln40_2_fu_2451_p3 = ((icmp_ln44_reg_5395_pp3_iter4_reg[0:0] == 1'b1) ? 32'd0 : sum_V_5_reg_1500);

assign select_ln40_fu_2381_p3 = ((icmp_ln44_fu_2375_p2[0:0] == 1'b1) ? 7'd0 : ap_phi_mux_k_1_phi_fu_1493_p4);

assign select_ln571_1_fu_1836_p3 = ((and_ln585_fu_1831_p2[0:0] == 1'b1) ? select_ln588_fu_1818_p3 : trunc_ln586_fu_1807_p1);

assign select_ln571_2_fu_1865_p3 = ((and_ln582_fu_1853_p2[0:0] == 1'b1) ? trunc_ln583_reg_5148_pp0_iter5_reg : 32'd0);

assign select_ln571_3_fu_1872_p3 = ((or_ln571_reg_5160_pp0_iter5_reg[0:0] == 1'b1) ? select_ln571_fu_1858_p3 : select_ln571_1_reg_5171);

assign select_ln571_4_fu_1882_p3 = ((or_ln571_1_fu_1878_p2[0:0] == 1'b1) ? select_ln571_3_fu_1872_p3 : select_ln571_2_fu_1865_p3);

assign select_ln571_fu_1858_p3 = ((icmp_ln571_reg_5124_pp0_iter5_reg[0:0] == 1'b1) ? 32'd0 : shl_ln604_fu_1844_p2);

assign select_ln588_fu_1818_p3 = ((tmp_73_fu_1811_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln850_fu_5059_p3 = ((icmp_ln851_fu_5047_p2[0:0] == 1'b1) ? ret_V_2_fu_5025_p4 : ret_V_3_fu_5053_p2);

assign select_ln893_1_fu_2742_p3 = ((p_Result_5_reg_5541[0:0] == 1'b1) ? 11'd1023 : 11'd1022);

assign select_ln893_2_fu_4146_p3 = ((p_Result_10_reg_6877[0:0] == 1'b1) ? 11'd1023 : 11'd1022);

assign select_ln893_fu_2295_p3 = ((p_Result_s_reg_5352[0:0] == 1'b1) ? 11'd1023 : 11'd1022);

assign select_ln896_1_fu_2642_p3 = ((icmp_ln896_1_fu_2582_p2[0:0] == 1'b1) ? icmp_ln899_1_fu_2618_p2 : p_Result_21_reg_5515);

assign select_ln896_2_fu_4046_p3 = ((icmp_ln896_2_fu_3986_p2[0:0] == 1'b1) ? icmp_ln899_2_fu_4022_p2 : p_Result_25_reg_6851);

assign select_ln896_fu_2195_p3 = ((icmp_ln896_fu_2135_p2[0:0] == 1'b1) ? icmp_ln899_fu_2171_p2 : p_Result_17_reg_5326);

assign select_ln908_2_fu_2654_p3 = ((icmp_ln908_1_fu_2637_p2[0:0] == 1'b1) ? select_ln896_1_fu_2642_p3 : and_ln899_3_fu_2649_p2);

assign select_ln908_4_fu_4058_p3 = ((icmp_ln908_2_fu_4041_p2[0:0] == 1'b1) ? select_ln896_2_fu_4046_p3 : and_ln899_5_fu_4053_p2);

assign select_ln908_fu_2207_p3 = ((icmp_ln908_fu_2190_p2[0:0] == 1'b1) ? select_ln896_fu_2195_p3 : and_ln899_1_fu_2202_p2);

assign sext_ln1116_10_fu_2835_p1 = $signed(temp_output2_0_V_load_10_reg_5675);

assign sext_ln1116_11_fu_2838_p1 = $signed(temp_output2_0_V_load_11_reg_5680);

assign sext_ln1116_12_fu_2841_p1 = $signed(temp_output2_0_V_load_12_reg_5695);

assign sext_ln1116_13_fu_2844_p1 = $signed(temp_output2_0_V_load_13_reg_5700);

assign sext_ln1116_14_fu_2847_p1 = $signed(temp_output2_0_V_load_14_reg_5715);

assign sext_ln1116_15_fu_2850_p1 = $signed(temp_output2_0_V_load_15_reg_5720);

assign sext_ln1116_16_fu_2853_p1 = $signed(temp_output2_0_V_load_16_reg_5735);

assign sext_ln1116_17_fu_2856_p1 = $signed(temp_output2_0_V_load_17_reg_5740);

assign sext_ln1116_18_fu_2859_p1 = $signed(temp_output2_0_V_load_18_reg_5755);

assign sext_ln1116_19_fu_2862_p1 = $signed(temp_output2_0_V_load_19_reg_5760);

assign sext_ln1116_1_fu_2808_p1 = $signed(temp_output2_0_V_load_1_reg_5580);

assign sext_ln1116_20_fu_2865_p1 = $signed(temp_output2_0_V_load_20_reg_5775);

assign sext_ln1116_21_fu_2868_p1 = $signed(temp_output2_0_V_load_21_reg_5780);

assign sext_ln1116_22_fu_2871_p1 = $signed(temp_output2_0_V_load_22_reg_5795);

assign sext_ln1116_23_fu_2874_p1 = $signed(temp_output2_0_V_load_23_reg_5800);

assign sext_ln1116_24_fu_2877_p1 = $signed(temp_output2_0_V_load_24_reg_5815);

assign sext_ln1116_25_fu_2880_p1 = $signed(temp_output2_0_V_load_25_reg_5820);

assign sext_ln1116_26_fu_2883_p1 = $signed(temp_output2_0_V_load_26_reg_5835);

assign sext_ln1116_27_fu_2886_p1 = $signed(temp_output2_0_V_load_27_reg_5840);

assign sext_ln1116_28_fu_2889_p1 = $signed(temp_output2_0_V_load_28_reg_5855);

assign sext_ln1116_29_fu_2892_p1 = $signed(temp_output2_0_V_load_29_reg_5860);

assign sext_ln1116_2_fu_2811_p1 = $signed(temp_output2_0_V_load_2_reg_5595);

assign sext_ln1116_30_fu_2895_p1 = $signed(temp_output2_0_V_q0);

assign sext_ln1116_31_fu_4213_p1 = $signed(reg_1608);

assign sext_ln1116_32_fu_4217_p1 = $signed(temp_output3_0_V_load_1_reg_6935);

assign sext_ln1116_33_fu_4220_p1 = $signed(temp_output3_0_V_load_2_reg_6950);

assign sext_ln1116_34_fu_4223_p1 = $signed(temp_output3_0_V_load_3_reg_6955);

assign sext_ln1116_35_fu_4226_p1 = $signed(temp_output3_0_V_load_4_reg_6970);

assign sext_ln1116_36_fu_4229_p1 = $signed(temp_output3_0_V_load_5_reg_6975);

assign sext_ln1116_37_fu_4232_p1 = $signed(temp_output3_0_V_load_6_reg_6990);

assign sext_ln1116_38_fu_4235_p1 = $signed(temp_output3_0_V_load_7_reg_6995);

assign sext_ln1116_39_fu_4238_p1 = $signed(temp_output3_0_V_load_8_reg_7010);

assign sext_ln1116_3_fu_2814_p1 = $signed(temp_output2_0_V_load_3_reg_5600);

assign sext_ln1116_40_fu_4241_p1 = $signed(temp_output3_0_V_load_9_reg_7015);

assign sext_ln1116_41_fu_4244_p1 = $signed(temp_output3_0_V_load_10_reg_7030);

assign sext_ln1116_42_fu_4247_p1 = $signed(temp_output3_0_V_load_11_reg_7035);

assign sext_ln1116_43_fu_4250_p1 = $signed(temp_output3_0_V_load_12_reg_7050);

assign sext_ln1116_44_fu_4253_p1 = $signed(temp_output3_0_V_load_13_reg_7055);

assign sext_ln1116_45_fu_4256_p1 = $signed(temp_output3_0_V_q0);

assign sext_ln1116_4_fu_2817_p1 = $signed(temp_output2_0_V_load_4_reg_5615);

assign sext_ln1116_5_fu_2820_p1 = $signed(temp_output2_0_V_load_5_reg_5620);

assign sext_ln1116_6_fu_2823_p1 = $signed(temp_output2_0_V_load_6_reg_5635);

assign sext_ln1116_7_fu_2826_p1 = $signed(temp_output2_0_V_load_7_reg_5640);

assign sext_ln1116_8_fu_2829_p1 = $signed(temp_output2_0_V_load_8_reg_5655);

assign sext_ln1116_9_fu_2832_p1 = $signed(temp_output2_0_V_load_9_reg_5660);

assign sext_ln1116_fu_2804_p1 = $signed(reg_1603);

assign sext_ln581_fu_1795_p1 = sh_amt_reg_5137;

assign sext_ln703_fu_2015_p1 = $signed(r_V_1_reg_5258);

assign sh_amt_fu_1721_p3 = ((icmp_ln581_fu_1703_p2[0:0] == 1'b1) ? add_ln581_fu_1709_p2 : sub_ln581_fu_1715_p2);

assign shl_ln1_fu_5005_p3 = {{i_4_reg_1557}, {8'd0}};

assign shl_ln604_fu_1844_p2 = trunc_ln583_reg_5148_pp0_iter5_reg << sext_ln581_reg_5166;

assign shl_ln728_10_fu_3299_p3 = {{tmp_36_fu_3289_p4}, {8'd0}};

assign shl_ln728_11_fu_3338_p3 = {{tmp_37_reg_6428}, {8'd0}};

assign shl_ln728_12_fu_3360_p3 = {{tmp_38_fu_3350_p4}, {8'd0}};

assign shl_ln728_13_fu_3399_p3 = {{tmp_39_reg_6473}, {8'd0}};

assign shl_ln728_14_fu_3421_p3 = {{tmp_40_fu_3411_p4}, {8'd0}};

assign shl_ln728_15_fu_3460_p3 = {{tmp_41_reg_6518}, {8'd0}};

assign shl_ln728_16_fu_3482_p3 = {{tmp_42_fu_3472_p4}, {8'd0}};

assign shl_ln728_17_fu_3521_p3 = {{tmp_43_reg_6563}, {8'd0}};

assign shl_ln728_18_fu_3543_p3 = {{tmp_44_fu_3533_p4}, {8'd0}};

assign shl_ln728_19_fu_3582_p3 = {{tmp_45_reg_6608}, {8'd0}};

assign shl_ln728_1_fu_2994_p3 = {{tmp_26_fu_2984_p4}, {8'd0}};

assign shl_ln728_20_fu_3604_p3 = {{tmp_46_fu_3594_p4}, {8'd0}};

assign shl_ln728_21_fu_3643_p3 = {{tmp_47_reg_6653}, {8'd0}};

assign shl_ln728_22_fu_3665_p3 = {{tmp_48_fu_3655_p4}, {8'd0}};

assign shl_ln728_23_fu_3704_p3 = {{tmp_49_reg_6698}, {8'd0}};

assign shl_ln728_24_fu_3726_p3 = {{tmp_50_fu_3716_p4}, {8'd0}};

assign shl_ln728_25_fu_3765_p3 = {{tmp_51_reg_6738}, {8'd0}};

assign shl_ln728_26_fu_3787_p3 = {{tmp_52_fu_3777_p4}, {8'd0}};

assign shl_ln728_27_fu_3818_p3 = {{tmp_53_reg_6768}, {8'd0}};

assign shl_ln728_28_fu_3840_p3 = {{tmp_54_fu_3830_p4}, {8'd0}};

assign shl_ln728_29_fu_3863_p3 = {{tmp_55_reg_6788}, {8'd0}};

assign shl_ln728_2_fu_3033_p3 = {{tmp_27_reg_6203}, {8'd0}};

assign shl_ln728_30_fu_4410_p3 = {{tmp_56_reg_7204}, {8'd0}};

assign shl_ln728_31_fu_4432_p3 = {{tmp_57_fu_4422_p4}, {8'd0}};

assign shl_ln728_32_fu_4495_p3 = {{tmp_58_reg_7239}, {8'd0}};

assign shl_ln728_33_fu_4517_p3 = {{tmp_59_fu_4507_p4}, {8'd0}};

assign shl_ln728_34_fu_4580_p3 = {{tmp_60_reg_7274}, {8'd0}};

assign shl_ln728_35_fu_4602_p3 = {{tmp_61_fu_4592_p4}, {8'd0}};

assign shl_ln728_36_fu_4665_p3 = {{tmp_62_reg_7309}, {8'd0}};

assign shl_ln728_37_fu_4687_p3 = {{tmp_63_fu_4677_p4}, {8'd0}};

assign shl_ln728_38_fu_4750_p3 = {{tmp_64_reg_7344}, {8'd0}};

assign shl_ln728_39_fu_4772_p3 = {{tmp_65_fu_4762_p4}, {8'd0}};

assign shl_ln728_3_fu_3055_p3 = {{tmp_28_fu_3045_p4}, {8'd0}};

assign shl_ln728_40_fu_4823_p3 = {{tmp_66_reg_7379}, {8'd0}};

assign shl_ln728_41_fu_4845_p3 = {{tmp_67_fu_4835_p4}, {8'd0}};

assign shl_ln728_42_fu_4876_p3 = {{tmp_68_reg_7409}, {8'd0}};

assign shl_ln728_43_fu_4898_p3 = {{tmp_69_fu_4888_p4}, {8'd0}};

assign shl_ln728_44_fu_4921_p3 = {{tmp_70_reg_7429}, {8'd0}};

assign shl_ln728_4_fu_3094_p3 = {{tmp_29_reg_6248}, {8'd0}};

assign shl_ln728_5_fu_3116_p3 = {{tmp_30_fu_3106_p4}, {8'd0}};

assign shl_ln728_6_fu_3155_p3 = {{tmp_31_reg_6293}, {8'd0}};

assign shl_ln728_7_fu_3177_p3 = {{tmp_32_fu_3167_p4}, {8'd0}};

assign shl_ln728_8_fu_3216_p3 = {{tmp_33_reg_6338}, {8'd0}};

assign shl_ln728_9_fu_3238_p3 = {{tmp_34_fu_3228_p4}, {8'd0}};

assign shl_ln728_s_fu_3277_p3 = {{tmp_35_reg_6383}, {8'd0}};

assign shl_ln899_1_fu_2602_p2 = 32'd1 << lsb_index_1_reg_5498;

assign shl_ln899_2_fu_4006_p2 = 32'd1 << lsb_index_2_reg_6834;

assign shl_ln899_fu_2155_p2 = 32'd1 << lsb_index_reg_5309;

assign shl_ln909_1_fu_2689_p2 = zext_ln907_1_fu_2662_p1 << zext_ln909_1_fu_2685_p1;

assign shl_ln909_2_fu_4093_p2 = zext_ln907_2_fu_4066_p1 << zext_ln909_2_fu_4089_p1;

assign shl_ln909_fu_2242_p2 = zext_ln907_fu_2215_p1 << zext_ln909_fu_2238_p1;

assign shl_ln_fu_2972_p3 = {{tmp_25_reg_6158}, {8'd0}};

assign sub_ln581_fu_1715_p2 = (12'd8 - F2_fu_1697_p2);

assign sub_ln894_1_fu_2544_p2 = (32'd32 - l_1_fu_2536_p3);

assign sub_ln894_2_fu_3948_p2 = (32'd32 - l_2_fu_3940_p3);

assign sub_ln894_fu_2097_p2 = (32'd32 - l_fu_2089_p3);

assign sub_ln897_1_fu_2587_p2 = (6'd22 - trunc_ln897_1_reg_5510);

assign sub_ln897_2_fu_3991_p2 = (6'd22 - trunc_ln897_2_reg_6846);

assign sub_ln897_fu_2140_p2 = (6'd22 - trunc_ln897_reg_5321);

assign sub_ln909_1_fu_2680_p2 = (32'd54 - sub_ln894_1_reg_5492_pp4_iter3_reg);

assign sub_ln909_2_fu_4084_p2 = (32'd54 - sub_ln894_2_reg_6828_pp6_iter3_reg);

assign sub_ln909_fu_2233_p2 = (32'd54 - sub_ln894_reg_5303_pp2_iter3_reg);

assign sub_ln915_1_fu_2749_p2 = (11'd24 - trunc_ln893_1_reg_5521_pp4_iter4_reg);

assign sub_ln915_2_fu_4153_p2 = (11'd24 - trunc_ln893_2_reg_6857_pp6_iter4_reg);

assign sub_ln915_fu_2302_p2 = (11'd24 - trunc_ln893_reg_5332_pp2_iter4_reg);

assign temp_output2_0_V_addr_reg_5181 = 64'd0;

assign temp_output2_0_V_load_31_cast_fu_2899_p1 = $signed(temp_output2_0_V_q1);

assign temp_output3_0_V_addr_reg_5186 = 64'd0;

assign temp_output3_0_V_load_15_cast_fu_4260_p1 = $signed(temp_output3_0_V_q1);

assign tmp_1_fu_2760_p3 = {{p_Result_19_reg_5481_pp4_iter4_reg}, {add_ln915_1_fu_2754_p2}};

assign tmp_22_fu_1949_p3 = {{select_ln21_reg_5205}, {6'd0}};

assign tmp_23_fu_1956_p3 = {{select_ln21_reg_5205}, {4'd0}};

assign tmp_24_fu_2416_p3 = {{select_ln40_reg_5400}, {5'd0}};

assign tmp_26_fu_2984_p4 = {{add_ln1192_fu_2979_p2[39:8]}};

assign tmp_28_fu_3045_p4 = {{add_ln1192_2_fu_3040_p2[39:8]}};

assign tmp_30_fu_3106_p4 = {{add_ln1192_4_fu_3101_p2[39:8]}};

assign tmp_32_fu_3167_p4 = {{add_ln1192_6_fu_3162_p2[39:8]}};

assign tmp_34_fu_3228_p4 = {{add_ln1192_8_fu_3223_p2[39:8]}};

assign tmp_36_fu_3289_p4 = {{add_ln1192_10_fu_3284_p2[39:8]}};

assign tmp_38_fu_3350_p4 = {{add_ln1192_12_fu_3345_p2[39:8]}};

assign tmp_3_fu_4164_p3 = {{p_Result_23_reg_6817_pp6_iter4_reg}, {add_ln915_2_fu_4158_p2}};

assign tmp_40_fu_3411_p4 = {{add_ln1192_14_fu_3406_p2[39:8]}};

assign tmp_42_fu_3472_p4 = {{add_ln1192_16_fu_3467_p2[39:8]}};

assign tmp_44_fu_3533_p4 = {{add_ln1192_18_fu_3528_p2[39:8]}};

assign tmp_46_fu_3594_p4 = {{add_ln1192_20_fu_3589_p2[39:8]}};

assign tmp_48_fu_3655_p4 = {{add_ln1192_22_fu_3650_p2[39:8]}};

assign tmp_50_fu_3716_p4 = {{add_ln1192_24_fu_3711_p2[39:8]}};

assign tmp_52_fu_3777_p4 = {{add_ln1192_26_fu_3772_p2[39:8]}};

assign tmp_54_fu_3830_p4 = {{add_ln1192_28_fu_3825_p2[39:8]}};

assign tmp_57_fu_4422_p4 = {{add_ln1192_32_fu_4417_p2[39:8]}};

assign tmp_59_fu_4507_p4 = {{add_ln1192_34_fu_4502_p2[39:8]}};

assign tmp_61_fu_4592_p4 = {{add_ln1192_36_fu_4587_p2[39:8]}};

assign tmp_63_fu_4677_p4 = {{add_ln1192_38_fu_4672_p2[39:8]}};

assign tmp_65_fu_4762_p4 = {{add_ln1192_40_fu_4757_p2[39:8]}};

assign tmp_67_fu_4835_p4 = {{add_ln1192_42_fu_4830_p2[39:8]}};

assign tmp_69_fu_4888_p4 = {{add_ln1192_44_fu_4883_p2[39:8]}};

assign tmp_72_fu_1739_p4 = {{sh_amt_fu_1721_p3[11:5]}};

assign tmp_73_fu_1811_p3 = input_img_load_reg_5098_pp0_iter4_reg[32'd31];

assign tmp_76_fu_2177_p3 = lsb_index_reg_5309[32'd31];

assign tmp_80_fu_2624_p3 = lsb_index_1_reg_5498[32'd31];

assign tmp_84_fu_4028_p3 = lsb_index_2_reg_6834[32'd31];

assign tmp_V_2_fu_2505_p2 = (32'd0 - temp_output2_0_V_q1);

assign tmp_V_4_fu_3909_p2 = (32'd0 - temp_output3_0_V_q1);

assign tmp_V_6_fu_2072_p3 = ((p_Result_15_fu_2064_p3[0:0] == 1'b1) ? tmp_V_reg_5287 : reg_1599);

assign tmp_V_7_fu_2519_p3 = ((p_Result_19_fu_2511_p3[0:0] == 1'b1) ? tmp_V_2_reg_5476 : reg_1603);

assign tmp_V_8_fu_3923_p3 = ((p_Result_23_fu_3915_p3[0:0] == 1'b1) ? tmp_V_4_reg_6812 : reg_1608);

assign tmp_V_fu_2058_p2 = (32'd0 - temp_output_0_V_q1);

assign tmp_s_fu_2313_p3 = {{p_Result_15_reg_5292_pp2_iter4_reg}, {add_ln915_fu_2307_p2}};

assign trunc_ln555_fu_1638_p1 = ireg_fu_1634_p1[62:0];

assign trunc_ln565_fu_1660_p1 = ireg_fu_1634_p1[51:0];

assign trunc_ln583_fu_1735_p1 = man_V_2_fu_1690_p3[31:0];

assign trunc_ln586_fu_1807_p1 = ashr_ln586_fu_1802_p2[31:0];

assign trunc_ln851_fu_5043_p1 = max_idx_V_reg_1568[7:0];

assign trunc_ln893_1_fu_2578_p1 = l_1_fu_2536_p3[10:0];

assign trunc_ln893_2_fu_3982_p1 = l_2_fu_3940_p3[10:0];

assign trunc_ln893_fu_2131_p1 = l_fu_2089_p3[10:0];

assign trunc_ln897_1_fu_2566_p1 = sub_ln894_1_fu_2544_p2[5:0];

assign trunc_ln897_2_fu_3970_p1 = sub_ln894_2_fu_3948_p2[5:0];

assign trunc_ln897_fu_2119_p1 = sub_ln894_fu_2097_p2[5:0];

assign weights_layer1_weights_V_address0 = zext_ln1118_1_fu_1979_p1;

assign weights_layer2_weights_V_address0 = zext_ln1118_2_fu_2429_p1;

assign xor_ln571_fu_1848_p2 = (icmp_ln571_reg_5124_pp0_iter5_reg ^ 1'd1);

assign xor_ln581_fu_1778_p2 = (or_ln581_fu_1772_p2 ^ 1'd1);

assign xor_ln582_fu_1760_p2 = (or_ln582_fu_1755_p2 ^ 1'd1);

assign xor_ln899_1_fu_2631_p2 = (tmp_80_fu_2624_p3 ^ 1'd1);

assign xor_ln899_2_fu_4035_p2 = (tmp_84_fu_4028_p3 ^ 1'd1);

assign xor_ln899_fu_2184_p2 = (tmp_76_fu_2177_p3 ^ 1'd1);

assign zext_ln1118_1_fu_1979_p1 = add_ln1118_1_fu_1973_p2;

assign zext_ln1118_2_fu_2429_p1 = add_ln1118_2_fu_2423_p2;

assign zext_ln1118_fu_1963_p1 = tmp_23_fu_1956_p3;

assign zext_ln140_fu_5013_p1 = shl_ln1_fu_5005_p3;

assign zext_ln21_fu_1996_p1 = select_ln21_1_reg_5212_pp1_iter4_reg;

assign zext_ln40_fu_2447_p1 = select_ln40_1_reg_5406_pp3_iter4_reg;

assign zext_ln455_fu_1670_p1 = exp_tmp_reg_5114;

assign zext_ln569_fu_1680_p1 = p_Result_14_fu_1673_p3;

assign zext_ln586_fu_1798_p1 = $unsigned(sext_ln581_fu_1795_p1);

assign zext_ln897_1_fu_2592_p1 = sub_ln897_1_fu_2587_p2;

assign zext_ln897_2_fu_3996_p1 = sub_ln897_2_fu_3991_p2;

assign zext_ln897_fu_2145_p1 = sub_ln897_fu_2140_p2;

assign zext_ln907_1_fu_2662_p1 = tmp_V_7_reg_5486_pp4_iter3_reg;

assign zext_ln907_2_fu_4066_p1 = tmp_V_8_reg_6822_pp6_iter3_reg;

assign zext_ln907_fu_2215_p1 = tmp_V_6_reg_5297_pp2_iter3_reg;

assign zext_ln908_1_fu_2670_p1 = add_ln908_1_fu_2665_p2;

assign zext_ln908_2_fu_4074_p1 = add_ln908_2_fu_4069_p2;

assign zext_ln908_fu_2223_p1 = add_ln908_fu_2218_p2;

assign zext_ln909_1_fu_2685_p1 = sub_ln909_1_fu_2680_p2;

assign zext_ln909_2_fu_4089_p1 = sub_ln909_2_fu_4084_p2;

assign zext_ln909_fu_2238_p1 = sub_ln909_fu_2233_p2;

assign zext_ln911_1_fu_2702_p1 = select_ln908_2_reg_5531;

assign zext_ln911_2_fu_4106_p1 = select_ln908_4_reg_6867;

assign zext_ln911_fu_2255_p1 = select_ln908_reg_5342;

assign zext_ln912_1_fu_2739_p1 = m_reg_5536;

assign zext_ln912_2_fu_4143_p1 = m_14_reg_6872;

assign zext_ln912_fu_2292_p1 = m_13_reg_5347;

always @ (posedge ap_clk) begin
    i_cast_reg_5088[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    i_cast_reg_5088_pp0_iter1_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    i_cast_reg_5088_pp0_iter2_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    i_cast_reg_5088_pp0_iter3_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    i_cast_reg_5088_pp0_iter4_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    i_cast_reg_5088_pp0_iter5_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    i_cast_reg_5088_pp0_iter6_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    j_2_cast_reg_6044[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    j_2_cast_reg_6044_pp5_iter1_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    j_2_cast_reg_6044_pp5_iter2_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    j_2_cast_reg_6044_pp5_iter3_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    j_2_cast_reg_6044_pp5_iter4_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    j_2_cast_reg_6044_pp5_iter5_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    j_2_cast_reg_6044_pp5_iter6_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    j_2_cast_reg_6044_pp5_iter7_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    j_2_cast_reg_6044_pp5_iter8_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    j_2_cast_reg_6044_pp5_iter9_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    j_2_cast_reg_6044_pp5_iter10_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    j_2_cast_reg_6044_pp5_iter11_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    j_2_cast_reg_6044_pp5_iter12_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    j_2_cast_reg_6044_pp5_iter13_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    j_2_cast_reg_6044_pp5_iter14_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    j_2_cast_reg_6044_pp5_iter15_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    j_2_cast_reg_6044_pp5_iter16_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    j_2_cast_reg_6044_pp5_iter17_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    j_2_cast_reg_6044_pp5_iter18_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
end

endmodule //nn_inference
